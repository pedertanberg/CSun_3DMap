import{i9 as m,h as n,g as l,t as d,e as i,f as e,cD as h,k as u}from"./index.d2d38865.js";import{y as c}from"./I3SMeshView3D.778e1068.js";import{n as g}from"./LayerView3D.69b4d800.js";import{u as y}from"./LayerView.74f87dba.js";import"./I3SOverrides.de08fa21.js";import"./I3SNode.23a303c6.js";import"./RenderTexture.89786619.js";import"./FeatureLayerView3D.3eec0c86.js";import"./FeatureLayerViewBase3D.9fbc07ef.js";import"./FeatureLikeLayerView3D.920fc8f9.js";import"./dehydratedFeatureComparison.5fc825e3.js";import"./queryForSymbologySnapping.dc5fafc6.js";import"./elevationInfoUtils.6a873162.js";import"./hash.e6424875.js";import"./Graphics3DObjectStates.4d2a6502.js";import"./optimizedFeatureQueryEngineAdapter.b4468b97.js";import"./centroid.d50027e7.js";import"./PooledRBush.5dcc5719.js";import"./quickselect.3948ea39.js";import"./floorFilterUtils.05eb8c6a.js";import"./QueryEngine.2f3d4eae.js";import"./QueryEngineResult.76a93f5c.js";import"./WhereClause.8e0050bd.js";import"./utils.212ec07c.js";import"./generateRendererUtils.6f50fd73.js";import"./json.879c9adc.js";import"./QueryEngineCapabilities.78217f95.js";import"./FeatureStore.5647dd66.js";import"./projectExtentUtils.b169f314.js";import"./EventedSet.ca47dbd7.js";import"./RefreshableLayerView.48e1a761.js";import"./SceneModification.aa9c72a0.js";import"./SceneLayerWorker.360975a5.js";const f=.2;let r=class extends c(g(y)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=m.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var t,o;return(o=(t=this._controller)==null?void 0:t.updatingProgress)!=null?o:0}get lodFactor(){var t,o,a,s,p;return(p=(s=(a=(o=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)!=null?p:1}get progressiveLoadFactor(){return this.lodFactor>=1?f:1}get layerPopupEnabled(){return!1}initialize(){this.updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),n),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const t=new l;return t.layer=this.layer,t.sourceLayer=this.layer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),d(this.layer.modifications))return void(this._modifications=[]);const t=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(()=>t,()=>this._modifications=t.toArray(),n),"modifications")}};i([e()],r.prototype,"layer",void 0),i([e()],r.prototype,"i3slayer",null),i([e(h)],r.prototype,"updatingProgress",void 0),i([e()],r.prototype,"updatingProgressValue",null),i([e()],r.prototype,"lodFactor",null),i([e({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([u("esri.views.3d.layers.SceneLayerView3D")],r);const X=r;export{X as default};
