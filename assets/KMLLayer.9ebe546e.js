import{y as m,ce as L,cv as K,cq as U,bz as W,ar as M,ej as E,s6 as g,hk as S,bd as A,ea as G,a3 as q,mB as B,aF as j,U as w,G as C,aQ as _,r as k,at as O,s7 as D,j as I,e as i,f as n,s8 as H,dX as P,k as z,d$ as V,re as Q,rg as X,rf as Y,nx as Z,ny as ee,nz as te,jg as se,cz as re,c3 as ie,g9 as oe,nC as le,J as ne}from"./index.d2d38865.js";const ae={esriGeometryPoint:"points",esriGeometryPolyline:"polylines",esriGeometryPolygon:"polygons"};function R(e){const s=e.folders||[],r=s.slice(),t=new Map,l=new Map,f=new Map,b=new Map,c=new Map,y={esriGeometryPoint:l,esriGeometryPolyline:f,esriGeometryPolygon:b};(e.featureCollection&&e.featureCollection.layers||[]).forEach(o=>{const d=m(o);d.featureSet.features=[];const p=o.featureSet.geometryType;t.set(p,d);const x=o.layerDefinition.objectIdField;p==="esriGeometryPoint"?$(l,x,o.featureSet.features):p==="esriGeometryPolyline"?$(f,x,o.featureSet.features):p==="esriGeometryPolygon"&&$(b,x,o.featureSet.features)}),e.groundOverlays&&e.groundOverlays.forEach(o=>{c.set(o.id,o)}),s.forEach(o=>{o.networkLinkIds.forEach(d=>{const p=ye(d,o.id,e.networkLinks);p&&r.push(p)})}),r.forEach(o=>{if(o.featureInfos){o.points=m(t.get("esriGeometryPoint")),o.polylines=m(t.get("esriGeometryPolyline")),o.polygons=m(t.get("esriGeometryPolygon")),o.mapImages=[];for(const d of o.featureInfos)switch(d.type){case"esriGeometryPoint":case"esriGeometryPolyline":case"esriGeometryPolygon":{const p=y[d.type].get(d.id);p&&o[ae[d.type]].featureSet.features.push(p);break}case"GroundOverlay":{const p=c.get(d.id);p&&o.mapImages.push(p);break}}o.fullExtent=F([o])}});const h=F(r);return{folders:s,sublayers:r,extent:h}}function T(e,s,r,t){const l=L&&L.findCredential(e);e=K(e,{token:l&&l.token});const f=U.kmlServiceUrl;return W(f,{query:{url:e,model:"simple",folders:"",refresh:r!==0||void 0,outSR:JSON.stringify(s)},responseType:"json",signal:t})}function N(e,s,r=null,t=[]){const l=[],f={},b=s.sublayers,c=s.folders.map(y=>y.id);return b.forEach(y=>{const h=new e;if(r?h.read(y,r):h.read(y),t.length&&c.includes(h.id)&&(h.visible=t.includes(h.id)),f[y.id]=h,y.parentFolderId!=null&&y.parentFolderId!==-1){const o=f[y.parentFolderId];o.sublayers||(o.sublayers=[]),o.sublayers.unshift(h)}else l.unshift(h)}),l}function $(e,s,r){r.forEach(t=>{e.set(t.attributes[s],t)})}function ue(e,s){let r;return s.some(t=>t.id===e&&(r=t,!0)),r}function ye(e,s,r){const t=ue(e,r);return t&&(t.parentFolderId=s,t.networkLink=t),t}function F(e){const s=M(E),r=M(E);for(const t of e){if(t.polygons&&t.polygons.featureSet&&t.polygons.featureSet.features)for(const l of t.polygons.featureSet.features)g(s,l.geometry),S(r,s);if(t.polylines&&t.polylines.featureSet&&t.polylines.featureSet.features)for(const l of t.polylines.featureSet.features)g(s,l.geometry),S(r,s);if(t.points&&t.points.featureSet&&t.points.featureSet.features)for(const l of t.points.featureSet.features)g(s,l.geometry),S(r,s);if(t.mapImages)for(const l of t.mapImages)g(s,l.extent),S(r,s)}return A(r,E)?null:{xmin:r[0],ymin:r[1],zmin:r[2],xmax:r[3],ymax:r[4],zmax:r[5],spatialReference:G.WGS84}}var v;let u=v=class extends q.EventedMixin(B(V)){constructor(...e){super(...e),this.description=null,this.id=null,this.networkLink=null,this.sublayers=null,this.title=null,this.sourceJSON=null,this.fullExtent=null,this.addHandles([j(()=>this.sublayers,"after-add",({item:s})=>{s.parent=this,s.layer=this.layer},w),j(()=>this.sublayers,"after-remove",({item:s})=>{s.layer=s.parent=null},w),C(()=>this.sublayers,(s,r)=>{if(r)for(const t of r)t.layer=t.parent=null;if(s)for(const t of s)t.parent=this,t.layer=this.layer},w)])}initialize(){_(()=>this.networkLink).then(()=>_(()=>this.visible===!0)).then(()=>this.load())}load(e){var t,l;if(!this.networkLink||this.networkLink.viewFormat)return;const s=k(e)?e.signal:null,r=this._fetchService((l=(t=this._get("networkLink"))==null?void 0:t.href)!=null?l:"",s).then(f=>{var y;const b=F(f.sublayers);this.fullExtent=O.fromJSON(b),this.sourceJSON=f;const c=D(I.ofType(v),N(v,f));this.sublayers?this.sublayers.addMany(c):this.sublayers=c,(y=this.layer)==null||y.emit("sublayer-update"),this.layer&&this.layer.notifyChange("visibleSublayers")});return this.addResolvingPromise(r),Promise.resolve(this)}get visible(){return this._get("visible")}set visible(e){this._get("visible")!==e&&(this._set("visible",e),this.layer&&this.layer.notifyChange("visibleSublayers"))}readVisible(e,s){return!!s.visibility}set layer(e){this._set("layer",e),this.sublayers&&this.sublayers.forEach(s=>s.layer=e)}_fetchService(e,s){return T(e,this.layer.outSpatialReference,this.layer.refreshInterval,s).then(r=>R(r.data))}};i([n()],u.prototype,"description",void 0),i([n()],u.prototype,"id",void 0),i([n({readOnly:!0,value:null})],u.prototype,"networkLink",void 0),i([n({json:{write:{allowNull:!0}}})],u.prototype,"parent",void 0),i([n({type:I.ofType(v),json:{write:{allowNull:!0}}})],u.prototype,"sublayers",void 0),i([n({value:null,json:{read:{source:"name",reader:e=>H(e)}}})],u.prototype,"title",void 0),i([n({value:!0})],u.prototype,"visible",null),i([P("visible",["visibility"])],u.prototype,"readVisible",null),i([n()],u.prototype,"sourceJSON",void 0),i([n({value:null})],u.prototype,"layer",null),i([n({type:O})],u.prototype,"fullExtent",void 0),u=v=i([z("esri.layers.support.KMLSublayer")],u);const J=u,pe=["kml","xml"];let a=class extends Q(X(Y(Z(ee(te(ne)))))){constructor(...e){super(...e),this._visibleFolders=[],this.allSublayers=new se({getCollections:()=>[this.sublayers],getChildrenFunction:s=>s.sublayers}),this.outSpatialReference=G.WGS84,this.path=null,this.legendEnabled=!1,this.operationalLayerType="KML",this.sublayers=null,this.type="kml",this.url=null}initialize(){this.addHandles([C(()=>this.sublayers,(e,s)=>{s&&s.forEach(r=>{r.parent=null,r.layer=null}),e&&e.forEach(r=>{r.parent=this,r.layer=this})},w),this.on("sublayer-update",()=>this.notifyChange("fullExtent"))])}normalizeCtorArgs(e,s){return typeof e=="string"?{url:e,...s}:e}readSublayersFromItemOrWebMap(e,s){this._visibleFolders=s.visibleFolders}readSublayers(e,s,r){return N(J,s,r,this._visibleFolders)}writeSublayers(e,s){const r=[],t=e.toArray();for(;t.length;){const l=t[0];l.networkLink||(l.visible&&r.push(l.id),l.sublayers&&t.push(...l.sublayers.toArray())),t.shift()}s.visibleFolders=r}get title(){const e=this._get("title");return e&&this.originOf("title")!=="defaults"?e:this.url?re(this.url,pe)||"KML":e||""}set title(e){this._set("title",e)}get visibleSublayers(){const e=this.sublayers,s=[],r=t=>{t.visible&&(s.push(t),t.sublayers&&t.sublayers.forEach(r))};return e&&e.forEach(r),s}get fullExtent(){return this._recomputeFullExtent()}load(e){const s=k(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["KML"],supportsData:!1},e).catch(ie).then(()=>this._fetchService(s))),Promise.resolve(this)}destroy(){super.destroy(),this.allSublayers.destroy()}async _fetchService(e){const s=await Promise.resolve().then(()=>{var t;return this.resourceInfo?{ssl:!1,data:this.resourceInfo}:T((t=this.url)!=null?t:"",this.outSpatialReference,this.refreshInterval,e)}),r=R(s.data);r&&this.read(r,{origin:"service"})}_recomputeFullExtent(){let e=null;k(this.extent)&&(e=this.extent.clone());const s=r=>{if(r.sublayers)for(const t of r.sublayers.items)s(t),t.visible&&t.fullExtent&&(k(e)?e.union(t.fullExtent):e=t.fullExtent.clone())};return s(this),e}};i([n({readOnly:!0})],a.prototype,"allSublayers",void 0),i([n({type:G})],a.prototype,"outSpatialReference",void 0),i([n({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],a.prototype,"path",void 0),i([n({readOnly:!0,json:{read:!1,write:!1}})],a.prototype,"legendEnabled",void 0),i([n({type:["show","hide","hide-children"]})],a.prototype,"listMode",void 0),i([n({type:["KML"]})],a.prototype,"operationalLayerType",void 0),i([n({})],a.prototype,"resourceInfo",void 0),i([n({type:I.ofType(J),json:{write:{ignoreOrigin:!0}}})],a.prototype,"sublayers",void 0),i([P(["web-map","portal-item"],"sublayers",["visibleFolders"])],a.prototype,"readSublayersFromItemOrWebMap",null),i([P("service","sublayers",["sublayers"])],a.prototype,"readSublayers",null),i([oe("sublayers")],a.prototype,"writeSublayers",null),i([n({readOnly:!0,json:{read:!1}})],a.prototype,"type",void 0),i([n({json:{origins:{"web-map":{read:{source:"title"}}},write:{ignoreOrigin:!0}}})],a.prototype,"title",null),i([n(le)],a.prototype,"url",void 0),i([n({readOnly:!0})],a.prototype,"visibleSublayers",null),i([n({type:O})],a.prototype,"extent",void 0),i([n()],a.prototype,"fullExtent",null),a=i([z("esri.layers.KMLLayer")],a);const he=a;export{he as default};
