import{E as h,S}from"./TileInfoView.a1b2a2d0.js";import{f as u,_ as V,A as b}from"./SymbolProcessor.1c285367.js";import"./index.f2e9cdcf.js";import"./cimAnalyzer.ddd86d1f.js";import"./BidiEngine.d8bba3fc.js";import"./enums.6b5e3ac2.js";import"./number.30628ef2.js";import"./Pipeline.ce429233.js";import"./QueryEngine.57019395.js";import"./QueryEngineResult.ddb48b00.js";import"./WhereClause.7bb0c466.js";import"./utils.2fc37d0a.js";import"./generateRendererUtils.50aae7ff.js";import"./json.879c9adc.js";import"./QueryEngineCapabilities.78217f95.js";import"./StreamFeatureManager.bd4136fe.js";import"./quickselect.3948ea39.js";import"./centroid.6c3feae8.js";import"./ogcFeatureUtils.6069abeb.js";import"./geojson.951af298.js";import"./clientSideDefaults.7931dcf3.js";import"./createConnection.1198e642.js";import"./tileUtils.4f5ebb9d.js";import"./TileClipper.06ee324e.js";import"./Geometry.d049a63c.js";import"./GeometryUtils.12948ca8.js";function y(e){var r;return e.type==="line-marker"?{type:"line-marker",color:(r=e.color)==null?void 0:r.toJSON(),placement:e.placement,style:e.style}:e.constructor.fromJSON(e.toJSON()).toJSON()}function f(e){return b(e)}function H(e,r,t=!1){if(!e)return null;switch(e.type){case"simple-fill":case"picture-fill":return x(e,r,t);case"simple-marker":case"picture-marker":return g(e,r,t);case"simple-line":return K(e,r,t);case"text":return z(e,r,t);case"label":return d(e,r,t);case"cim":return{type:"cim",rendererKey:r.vvFlags,data:e.data,maxVVSize:r.maxVVSize};case"CIMSymbolReference":return{type:"cim",rendererKey:r.vvFlags,data:e,maxVVSize:r.maxVVSize};case"web-style":return{...y(e),type:"web-style",hash:e.hash(),rendererKey:r.vvFlags,maxVVSize:r.maxVVSize};default:throw new Error(`symbol not supported ${e.type}`)}}function d(e,r,t){const o=e.toJSON(),i=u(h.LABEL,{...r,placement:o.labelPlacement});return{materialKey:t?f(i):i,hash:e.hash(),...o,labelPlacement:o.labelPlacement}}function x(e,r,t){const o=u(h.FILL,r),i=t?f(o):o,m=e.clone(),a=m.outline,n=V(r.symbologyType);n||(m.outline=null);const s={materialKey:i,hash:m.hash(),...y(m)};if(n)return s;const c=[];if(c.push(s),a){const l=u(h.LINE,{...r,isOutline:!0}),p={materialKey:t?f(l):l,hash:a.hash(),...y(a)};c.push(p)}return{type:"composite-symbol",layers:c,hash:c.reduce((l,p)=>p.hash+l,"")}}function K(e,r,t){var c;const o=V(r.symbologyType)?S.DEFAULT:r.symbologyType,i=u(h.LINE,{...r,symbologyType:o}),m=t?f(i):i,a=e.clone(),n=a.marker;a.marker=null;const s=[];if(s.push({materialKey:m,hash:a.hash(),...y(a)}),n){const l=u(h.MARKER,r),p=t?f(l):l;n.color=(c=n.color)!=null?c:a.color,s.push({materialKey:p,hash:n.hash(),lineWidth:a.width,...y(n)})}return{type:"composite-symbol",layers:s,hash:s.reduce((l,p)=>p.hash+l,"")}}function g(e,r,t){const o=u(h.MARKER,r),i=t?f(o):o,m=y(e);return{materialKey:i,hash:e.hash(),...m,angle:e.angle,maxVVSize:r.maxVVSize}}function z(e,r,t){const o=u(h.TEXT,r),i=t?f(o):o,m=y(e);return{materialKey:i,hash:e.hash(),...m,angle:e.angle,maxVVSize:r.maxVVSize}}export{H as createSymbolSchema};
