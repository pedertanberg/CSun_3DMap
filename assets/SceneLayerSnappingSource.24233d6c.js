import{e as i,f as s,k as u,B as _,aq as v,gc as f,eo as S,aI as b,dR as k,t8 as C,t as y,iq as g,eI as H,ci as L,m as I,ab as E,r as O}from"./index.f489a479.js";import{E as w}from"./elevationInfoUtils.a305fe10.js";import{e as P}from"./DimensionAnalysisView3D.2e5bf459.js";import{o as R}from"./VertexSnappingCandidate.6e947b5d.js";import"./LineVisualElement.e1071f16.js";import"./LengthDimension.d5ab9c1d.js";import"./Segment.bc0fe842.js";import"./analysisViewUtils.02c74237.js";import"./ImageMaterial.fd21e937.js";import"./Factory.3385d467.js";import"./PointVisualElement.3e2bc313.js";import"./RightAngleQuadVisualElement.b3cc24ae.js";import"./colorUtils.bb6424b7.js";import"./EditGeometryOperations.3dcd47a0.js";import"./QueryEngineResult.6da78303.js";import"./WhereClause.83a69ce6.js";import"./utils.247b8844.js";import"./generateRendererUtils.855b751b.js";import"./json.879c9adc.js";import"./dehydratedFeatureComparison.972cebd0.js";import"./RenderTexture.ad136b15.js";let c=class extends _{constructor(e){super(e),this.availability=0,this._ids=new Set,this._tmpP=v()}destroy(){this._workerHandle.destroy(),this._workerHandle=null}initialize(){this._workerHandle=new V(this.schedule,{fetchAllEdgeLocations:(e,t)=>this._fetchAllEdgeLocations(e,t)})}async fetchCandidates(e,t){const r=e.coordinateHelper,o=r.toXYZ(e.point);this.renderCoordsHelper.toRenderCoords(o,r.spatialReference,o);const n=e.distance,p=typeof n=="number"?n:n.distance,a=await this._workerHandle.invoke({bounds:f(o[0],o[1],o[2],p),types:e.types},t);return a.candidates.sort((h,m)=>h.distance-m.distance),a.candidates.map(h=>this._convertCandidate(r,h))}async add(e,t){this._ids.add(e.id),await this._workerHandle.invokeMethod("add",e,t)}async remove(e,t){this._ids.delete(e.id),await this._workerHandle.invokeMethod("remove",e,t)}_convertCandidate(e,t){switch(t.type){case"edge":return new P({coordinateHelper:e,objectId:t.objectId,targetPoint:this._convertRenderCoordinate(e,t.target),edgeStart:this._convertRenderCoordinate(e,t.start),edgeEnd:this._convertRenderCoordinate(e,t.end),elevationInfo:w});case"vertex":return new R({coordinateHelper:e,objectId:t.objectId,targetPoint:this._convertRenderCoordinate(e,t.target),elevationInfo:w})}}_convertRenderCoordinate(e,t){return this.renderCoordsHelper.fromRenderCoords(t,this._tmpP,e.spatialReference),e.fromXYZ(this._tmpP)}async _fetchAllEdgeLocations(e,t){const r=[],o=[];for(const{id:n,uid:p}of e.components)this._ids.has(n)&&r.push((async()=>{const a=await this.fetchEdgeLocations(n,t.signal);return o.push(a.locations.buffer),{id:n,uid:p,objectIds:a.objectIds,locations:a.locations.buffer,origin:a.origin,type:a.type}})());return{result:{components:(await Promise.all(r)).filter(({id:n})=>this._ids.has(n))},transferList:o}}};i([s({constructOnly:!0})],c.prototype,"renderCoordsHelper",void 0),i([s({constructOnly:!0})],c.prototype,"fetchEdgeLocations",void 0),i([s({constructOnly:!0})],c.prototype,"schedule",void 0),i([s({readOnly:!0})],c.prototype,"availability",void 0),c=i([u("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],c);class V extends S{constructor(t,r){super("SceneLayerSnappingSourceWorker","fetchCandidates",{},t,{strategy:"dedicated",client:r})}}let d=class extends _{constructor(e){super(e),this.availability=1,this._abortController=new AbortController}get updating(){return this.updatingHandles.updating}destroy(){this._tracker=b(this._tracker),this._abortController=k(this._abortController)}initialize(){const{view:e}=this,t=e.resourceController;this._edgeWorker=new C(r=>t.schedule(r)),this._workerHandle=new c({renderCoordsHelper:this.view.renderCoordsHelper,schedule:r=>t.schedule(r),fetchEdgeLocations:async(r,o)=>{if(y(this._tracker))throw new Error("tracker-not-initialized");return this._tracker.fetchEdgeLocations(r,this._edgeWorker,o)}}),this.updatingHandles.addPromise(this._setupLayerView()),this.handles.add([g(this._workerHandle),g(this._edgeWorker)])}async fetchCandidates(e,t){return this._workerHandle.fetchCandidates(e,t)}refresh(){}async _setupLayerView(){if(this.destroyed)return;const e=H(this._abortController,r=>r.signal),t=await this.getLayerView();y(t)||L(e)||(this._tracker=t.trackSnappingSources({add:(r,o)=>{this.updatingHandles.addPromise(this._workerHandle.add({id:r,bounds:o},e))},remove:r=>{this.updatingHandles.addPromise(this._workerHandle.remove({id:r},e))}}))}};i([s({constructOnly:!0})],d.prototype,"getLayerView",void 0),i([s({constructOnly:!0})],d.prototype,"view",void 0),i([s({readOnly:!0})],d.prototype,"updating",null),i([s({readOnly:!0})],d.prototype,"availability",void 0),d=i([u("esri.views.interactive.snapping.featureSources.I3SSnappingSource")],d);let l=class extends I{constructor(e){super(e),this.availability=1,this._i3sSources=[]}get updating(){return this._i3sSources.some(e=>e.updating)}destroy(){this._i3sSources.forEach(e=>e.destroy()),this._i3sSources.length=0}initialize(){const{view:e}=this,t=this.layerSource.layer;this._i3sSources=t.type==="building-scene"?this._getBuildingSceneI3SSources(e,t):[this._getSceneLayerI3SSource(e,t)]}async fetchCandidates(e,t){const r=await Promise.all(this._i3sSources.map(o=>o.fetchCandidates(e,t)));return E(t),r.flat()}refresh(){this._i3sSources.forEach(e=>e.refresh())}_getBuildingSceneI3SSources(e,t){return t.allSublayers.toArray().map(r=>r.type==="building-component"?new d({getLayerView:async()=>(await e.whenLayerView(t)).whenSublayerView(r),view:e}):null).filter(O)}_getSceneLayerI3SSource(e,t){return new d({getLayerView:async()=>{const r=await e.whenLayerView(t);return r.type==="scene-layer-graphics-3d"?void 0:r},view:e})}};i([s({constructOnly:!0})],l.prototype,"layerSource",void 0),i([s({constructOnly:!0})],l.prototype,"view",void 0),i([s({readOnly:!0})],l.prototype,"updating",null),i([s({readOnly:!0})],l.prototype,"availability",void 0),l=i([u("esri.views.interactive.snapping.featureSources.SceneLayerSnappingSource")],l);export{l as SceneLayerSnappingSource};
