import{i9 as m,h as n,g as l,t as d,e as i,f as e,cD as h,k as u}from"./index.f489a479.js";import{y as c}from"./I3SMeshView3D.36e6703c.js";import{n as g}from"./LayerView3D.af0dc625.js";import{u as y}from"./LayerView.0083e383.js";import"./I3SOverrides.16c110f7.js";import"./I3SNode.061a9d61.js";import"./RenderTexture.ad136b15.js";import"./FeatureLayerView3D.756cc2ad.js";import"./FeatureLayerViewBase3D.df022b2f.js";import"./FeatureLikeLayerView3D.51ac53f8.js";import"./dehydratedFeatureComparison.972cebd0.js";import"./queryForSymbologySnapping.d265c1b6.js";import"./elevationInfoUtils.a305fe10.js";import"./hash.e6424875.js";import"./Graphics3DObjectStates.9bb5ffee.js";import"./optimizedFeatureQueryEngineAdapter.f814a5c4.js";import"./centroid.89d2dd00.js";import"./PooledRBush.a59c47c2.js";import"./quickselect.3948ea39.js";import"./floorFilterUtils.05eb8c6a.js";import"./QueryEngine.f27023a1.js";import"./QueryEngineResult.6da78303.js";import"./WhereClause.83a69ce6.js";import"./utils.247b8844.js";import"./generateRendererUtils.855b751b.js";import"./json.879c9adc.js";import"./QueryEngineCapabilities.78217f95.js";import"./FeatureStore.b1557853.js";import"./projectExtentUtils.8d435b05.js";import"./EventedSet.49c6cafa.js";import"./RefreshableLayerView.122b84d6.js";import"./SceneModification.bc269308.js";import"./SceneLayerWorker.cd38f939.js";const f=.2;let r=class extends c(g(y)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=m.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var t,o;return(o=(t=this._controller)==null?void 0:t.updatingProgress)!=null?o:0}get lodFactor(){var t,o,a,s,p;return(p=(s=(a=(o=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)!=null?p:1}get progressiveLoadFactor(){return this.lodFactor>=1?f:1}get layerPopupEnabled(){return!1}initialize(){this.updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),n),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const t=new l;return t.layer=this.layer,t.sourceLayer=this.layer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),d(this.layer.modifications))return void(this._modifications=[]);const t=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(()=>t,()=>this._modifications=t.toArray(),n),"modifications")}};i([e()],r.prototype,"layer",void 0),i([e()],r.prototype,"i3slayer",null),i([e(h)],r.prototype,"updatingProgress",void 0),i([e()],r.prototype,"updatingProgressValue",null),i([e()],r.prototype,"lodFactor",null),i([e({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([u("esri.views.3d.layers.SceneLayerView3D")],r);const X=r;export{X as default};
