import{e as r,f as o,k as p,cG as x,cH as G,m as M,gp as R,G as y,r as d,g as E,dP as T,D as U,s as V,M as j}from"./index.f2e9cdcf.js";import{h as k}from"./StreamFeatureManager.bd4136fe.js";import{createConnection as L}from"./createConnection.1198e642.js";import{r as F}from"./EventedSet.721b5841.js";import{w as N}from"./FeatureLikeLayerView3D.8d03354f.js";import{n as C}from"./LayerView3D.f2d8f7fb.js";import{u as P}from"./LayerView.ac2ac8f9.js";import"./dehydratedFeatureComparison.e2438592.js";import"./queryForSymbologySnapping.91d874a2.js";import"./elevationInfoUtils.6c1a0147.js";import"./hash.e6424875.js";import"./Graphics3DObjectStates.4cc50011.js";import"./optimizedFeatureQueryEngineAdapter.dd97429a.js";import"./centroid.6c3feae8.js";import"./PooledRBush.1b0cf616.js";import"./quickselect.3948ea39.js";import"./floorFilterUtils.05eb8c6a.js";import"./QueryEngine.57019395.js";import"./QueryEngineResult.ddb48b00.js";import"./WhereClause.7bb0c466.js";import"./utils.2fc37d0a.js";import"./generateRendererUtils.50aae7ff.js";import"./json.879c9adc.js";import"./QueryEngineCapabilities.78217f95.js";import"./FeatureStore.8c331557.js";import"./projectExtentUtils.5ff0d6ae.js";const z=2500;let l=class extends E{getObjectId(){return this.objectId}};r([o({type:Number,json:{read:!0}})],l.prototype,"objectId",void 0),l=r([p("esri.layers.graphics.controllers.StreamGraphic")],l);class D{constructor(t){this.onUpdate=t,this._idToGraphic=new Map}destroy(){this._idToGraphic.clear()}add(t){this._idToGraphic.set(t.objectId,t)}get(t){return this._idToGraphic.get(t)}forEach(t){this._idToGraphic.forEach(t)}removeById(t){const i=this._idToGraphic.get(t);return i?(i.sourceLayer=i.layer=null,this._idToGraphic.delete(t),i):null}update(t,i){this.onUpdate(t,i)}get size(){return this._idToGraphic.size}}let a=class extends x(G(M)){constructor(){super(...arguments),this._updateInfo={websocket:0,client:0},this.graphics=new F}initialize(){this.addResolvingPromise(this.layer.when(()=>this._startup()))}destroy(){this.clear()}_clearInterval(){this._updateIntervalId&&(clearInterval(this._updateIntervalId),this._updateIntervalId=0)}clear(){this._clearInterval(),this.connection&&(this.connection.destroy(),this.connection=null),this.store&&(this.store.destroy(),this.store=null),this.graphics.clear(),this.handles.removeAll()}get updating(){return!this.connection||this.connection.connectionStatus==="connected"}_startup(){const{layer:e,layerView:t}=this,{parsedUrl:i,spatialReference:s,definitionExpression:c,geometryDefinition:h,objectIdField:f,timeInfo:g,purgeOptions:v,maxReconnectionAttempts:_,maxReconnectionInterval:I,customParameters:w}=e,S=R.toJSON(e.geometryType),b=s,u=t.view.spatialReference,O={geometry:h,where:c};this.clear(),this._set("connection",L(i,b,u,S,O,_,I,w)),this._outSpatialReference=u.toJSON(),this.store=new D(this._onUpdate.bind(this)),this.featuresManager=new k(this.store,f,g.toJSON(),v);const m="startup-watches";this.handles.remove(m),this.handles.add([this.connection.on("data-received",$=>this._onFeature($)),y(()=>[e.definitionExpression,e.geometryDefinition,e.purgeOptions],()=>this._startup())],m),this._initUpdateInterval()}_onFeature(e){this._updateInfo.websocket++,this.layerView.hasEventListener("data-received")&&this.layerView.emit("data-received",{attributes:e.attributes,centroid:e.centroid,geometry:e.geometry});try{d(e.geometry)&&!e.geometry.spatialReference&&(e.geometry.spatialReference=this._outSpatialReference);const t=l.fromJSON(e);t.sourceLayer=t.layer=this.layer,this.featuresManager.add(t)}catch{}}_onUpdate(e,t){d(t)&&this.graphics.removeMany(t),d(e)&&(this._updateInfo.client+=e.length,this.graphics.addMany(e))}_initUpdateInterval(){this._clearInterval();const{updateInterval:e}=this.layer;let t=performance.now();this._updateIntervalId=setInterval(()=>{const i=performance.now(),s=i-t;if(s>z){t=i;const c=Math.round(this._updateInfo.client/(s/1e3)),h=Math.round(this._updateInfo.websocket/(s/1e3));this._updateInfo.client=0,this._updateInfo.websocket=0,this.layerView.emit("update-rate",{client:c,websocket:h})}this.featuresManager.checkForUpdates()},e)}pauseStream(){this._clearInterval()}resumeStream(){this._initUpdateInterval()}};r([o()],a.prototype,"connection",void 0),r([o()],a.prototype,"layer",void 0),r([o()],a.prototype,"layerView",void 0),r([o({readOnly:!0})],a.prototype,"updating",null),a=r([p("esri.layers.graphics.controllers.StreamController")],a);const J=e=>{let t=class extends e{constructor(...i){super(...i),this.connectionError=null,this.filter=null}get connectionStatus(){var i,s,c;return(c=(s=(i=this.controller)==null?void 0:i.connection)==null?void 0:s.connectionStatus)!=null?c:"disconnected"}};return r([o({readOnly:!0})],t.prototype,"connectionError",void 0),r([o({readOnly:!0})],t.prototype,"connectionStatus",null),r([o({type:T})],t.prototype,"filter",void 0),t=r([p("esri.layers.mixins.StreamLayerView")],t),t};let n=class extends J(N(C(P))){constructor(){super(...arguments),this.type="stream-3d",this.updatePolicy=U.ASYNC,this.hasZ=!0,this.hasM=!1}initialize(){this.handles.add(y(()=>this.suspended,e=>{this.controller&&(e?this.controller.pauseStream():this.controller.resumeStream())}))}get connectionError(){const e=this.get("controller.connection.errorString");if(e)return new V("stream-controller",e)}createQuery(){return new j({outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference})}queryLatestObservations(e,t){return this.queryEngine.executeQueryForLatestObservations(this._ensureQuery(e),t==null?void 0:t.signal)}createController(){return new a({layer:this.layer,layerView:this})}beforeSetController(){}};r([o({readOnly:!0})],n.prototype,"updatePolicy",void 0),r([o({readOnly:!0})],n.prototype,"connectionError",null),r([o()],n.prototype,"controller",void 0),r([o({readOnly:!0})],n.prototype,"hasZ",void 0),r([o({readOnly:!0})],n.prototype,"hasM",void 0),n=r([p("esri.views.3d.layers.StreamLayerView3D")],n);const ft=n;export{ft as default};
