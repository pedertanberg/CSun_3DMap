import{mI as Se,mJ as Re,d9 as f,mp as P,d8 as U,d3 as L,d5 as l,r as a,d0 as ce,iK as H,mK as Ce,gR as he,cN as p,gW as de,eu as Me,dd as ue,br as _e,di as pe,dj as ge,dl as fe,de as me,df as T,ds as Pe,gP as Ae,aq as u,aR as $,gy as be,t as o,i$ as $e,eK as Te,j0 as Oe,j1 as ze,fg as ve,e as w,dg as E,mL as Ie,iU as qe,kk as W,gv as Ne,kq as M,k8 as O,ft as B,fS as ye,et as b,an as v,mM as xe,lU as je,k9 as We,aT as we,l8 as Fe,fr as Ge,mN as Ue,dk as He,gz as Be,jw as k,lN as j,lM as ke,bD as K,mO as Ke,bu as X,mP as z,mQ as Xe,gF as Qe,gL as Q,gK as J,lQ as Je,mR as Ye,lR as Ze,lS as et,lT as tt,mS as it,ls as Y,mT as st,aJ as nt,D as rt,kN as at,cU as ot,G as lt,h as ct,e_ as Z,kv as ee,fK as te,mU as ht,mV as dt,fo as ut,mW as _t,aS as ie,ek as pt,fL as gt,fH as ft,lr as se,mX as mt,mY as Pt}from"./index.d2d38865.js";import{t as bt}from"./LineVisualElement.c1761bad.js";function Ee(n,e){n.extensions.add("GL_OES_standard_derivatives");const i=n.fragment;i.include(Se),n.include(Re),i.uniforms.add([new f("globalAlpha",t=>t.globalAlpha),new P("glowColor",t=>t.glowColor),new f("glowWidth",(t,s)=>t.glowWidth*s.camera.pixelRatio),new f("glowFalloff",t=>t.glowFalloff),new P("innerColor",t=>t.innerColor),new f("innerWidth",(t,s)=>t.innerWidth*s.camera.pixelRatio),new U("depthMap",(t,s)=>s.linearDepthTexture),new L("nearFar",(t,s)=>s.camera.nearFar),new U("frameColor",(t,s)=>s.mainColorTexture)]),i.code.add(l`vec4 blendPremultiplied(vec4 source, vec4 dest) {
float oneMinusSourceAlpha = 1.0 - source.a;
return vec4(
source.rgb + dest.rgb * oneMinusSourceAlpha,
source.a + dest.a * oneMinusSourceAlpha
);
}`),i.code.add(l`vec4 premultipliedColor(vec3 rgb, float alpha) {
return vec4(rgb * alpha, alpha);
}`),i.code.add(l`vec4 laserlineProfile(float dist) {
if (dist > glowWidth) {
return vec4(0.0);
}
float innerAlpha = (1.0 - smoothstep(0.0, innerWidth, dist));
float glowAlpha = pow(max(0.0, 1.0 - dist / glowWidth), glowFalloff);
return blendPremultiplied(
premultipliedColor(innerColor, innerAlpha),
premultipliedColor(glowColor, glowAlpha)
);
}`),i.code.add(l`bool laserlineReconstructFromDepth(out vec3 pos, out vec3 normal, out float depthDiscontinuityAlpha) {
float depth = linearDepthFromTexture(depthMap, uv, nearFar);
if (-depth == nearFar[0]) {
return false;
}
pos = reconstructPosition(gl_FragCoord.xy, depth);
normal = normalize(cross(dFdx(pos), dFdy(pos)));
float ddepth = fwidth(depth);
depthDiscontinuityAlpha = 1.0 - smoothstep(0.0, 0.01, -ddepth / depth);
return true;
}`),e.contrastControlEnabled?(i.uniforms.add(new f("globalAlphaContrastBoost",t=>a(t.globalAlphaContrastBoost)?t.globalAlphaContrastBoost:1)),i.code.add(l`float rgbToLuminance(vec3 color) {
return dot(vec3(0.2126, 0.7152, 0.0722), color);
}
vec4 laserlineOutput(vec4 color) {
float backgroundLuminance = rgbToLuminance(texture2D(frameColor, uv).rgb);
float alpha = clamp(globalAlpha * max(backgroundLuminance * globalAlphaContrastBoost, 1.0), 0.0, 1.0);
return color * alpha;
}`)):i.code.add(l`vec4 laserlineOutput(vec4 color) {
return color * globalAlpha;
}`)}function vt(n){const e=new ce;e.include(Ee,n);const{vertex:i,fragment:t}=e;return i.uniforms.add([new H("modelView",(s,r)=>Ce(xt,r.camera.viewMatrix,s.origin)),new H("proj",(s,r)=>r.camera.projectionMatrix),new f("glowWidth",(s,r)=>s.glowWidth*r.camera.pixelRatio),new L("pixelToNDC",(s,r)=>he(yt,2/r.camera.fullViewport[2],2/r.camera.fullViewport[3]))]),e.attributes.add(p.START,"vec3"),e.attributes.add(p.END,"vec3"),e.attributes.add(p.UP,"vec3"),e.attributes.add(p.EXTRUDE,"vec2"),e.varyings.add("uv","vec2"),e.varyings.add("vViewStart","vec3"),e.varyings.add("vViewEnd","vec3"),e.varyings.add("vViewPlane","vec4"),i.code.add(l`void main() {
vec3 pos = mix(start, end, extrude.x);
vec4 viewPos = modelView * vec4(pos, 1);
vec4 projPos = proj * viewPos;
vec2 ndcPos = projPos.xy / projPos.w;
vec3 viewUp = (modelView * vec4(extrude.y * up, 0)).xyz;
vec4 projPosUp = proj * vec4(viewPos.xyz + viewUp, 1);
vec2 projExtrudeDir = normalize(projPosUp.xy / projPosUp.w - ndcPos);
vec2 lxy = abs(sign(projExtrudeDir) - ndcPos);
ndcPos += length(lxy) * projExtrudeDir;
vec3 worldPlaneNormal = normalize(cross(up, normalize(end - start)));
vec3 viewPlaneNormal = (modelView * vec4(worldPlaneNormal, 0)).xyz;
vViewStart = (modelView * vec4(start, 1)).xyz;
vViewEnd = (modelView * vec4(end, 1)).xyz;
vViewPlane = vec4(viewPlaneNormal, -dot(viewPlaneNormal, vViewStart));
float xPaddingPixels = sign(dot(viewPlaneNormal, viewPos.xyz)) * (extrude.x * 2.0 - 1.0) * glowWidth;
ndcPos.x += xPaddingPixels * pixelToNDC.x;
uv = ndcPos * 0.5 + 0.5;
gl_Position = vec4(ndcPos, 0, 1);
}`),t.uniforms.add(new f("perScreenPixelRatio",(s,r)=>r.camera.perScreenPixelRatio)),t.code.add(l`float planeDistancePixels(vec4 plane, vec3 pos, vec3 start, vec3 end) {
vec3 origin = mix(start, end, 0.5);
vec3 basis = end - origin;
vec3 posAtOrigin = pos - origin;
float x = dot(normalize(basis), posAtOrigin);
float y = dot(plane.xyz, posAtOrigin);
float dx = max(abs(x) - length(basis), 0.0);
float dy = y;
float dist = length(vec2(dx, dy));
float width = fwidth(y);
float maxPixelDistance = length(pos) * perScreenPixelRatio * 2.0;
float pixelDist = dist / min(width, maxPixelDistance);
return abs(pixelDist);
}
void main() {
vec3 pos;
vec3 normal;
float depthDiscontinuityAlpha;
if (!laserlineReconstructFromDepth(pos, normal, depthDiscontinuityAlpha)) {
discard;
}
float distance = planeDistancePixels(vViewPlane, pos, vViewStart, vViewEnd);
vec4 color = laserlineProfile(distance);
float alpha = 1.0 - smoothstep(0.995, 0.999, abs(dot(normal, vViewPlane.xyz)));
gl_FragColor = laserlineOutput(color * alpha * depthDiscontinuityAlpha);
}`),e}const yt=de(),xt=Me(),wt=Object.freeze(Object.defineProperty({__proto__:null,build:vt},Symbol.toStringTag,{value:"Module"}));class I extends pe{initializeProgram(e){return new ge(e.rctx,I.shader.get().build(this.configuration),Ve)}initializePipeline(){return fe({blending:me(T.ONE,T.ONE_MINUS_SRC_ALPHA),colorWrite:Pe})}}I.shader=new ue(wt,()=>_e(()=>import("./LaserlinePath.glsl.7fe58666.js"),["assets/LaserlinePath.glsl.7fe58666.js","assets/index.d2d38865.js","assets/index.785c8c13.css","assets/LineVisualElement.c1761bad.js"]));const Ve=new Map([[p.START,0],[p.END,1],[p.UP,2],[p.EXTRUDE,3]]);class ne{constructor(e){this._renderCoordsHelper=e,this._buffers=null,this._origin=u(),this._dirty=!1,this._count=0,this._vao=null}set vertices(e){const i=new Float64Array(3*e.length);let t=0;for(const s of e)i[t++]=s[0],i[t++]=s[1],i[t++]=s[2];this.buffers=[i]}set buffers(e){if(this._buffers=e,this._buffers.length>0){const i=this._buffers[0],t=3*Math.floor(i.length/3/2);$(this._origin,i[t+0],i[t+1],i[t+2])}else $(this._origin,0,0,0);this._dirty=!0}get origin(){return this._origin}draw(e){const i=this._ensureVAO(e);a(i)&&(e.bindVAO(i),e.drawArrays(be.TRIANGLES,0,this._count))}dispose(){a(this._vao)&&this._vao.dispose()}_ensureVAO(e){return o(this._buffers)?null:(o(this._vao)&&(this._vao=this._createVAO(e,this._buffers)),this._ensureVertexData(this._vao,this._buffers),this._vao)}_createVAO(e,i){const t=this._createDataBuffer(i);return this._dirty=!1,new $e(e,Ve,{data:Te(ae)},{data:Oe.createVertex(e,ze.STATIC_DRAW,t)})}_ensureVertexData(e,i){if(!this._dirty)return;const t=this._createDataBuffer(i);e.vertexBuffers.data.setData(t),this._dirty=!1}_numberOfRenderVertices(e){return 3*(2*(e.length/3-1))}_createDataBuffer(e){const i=e.reduce((d,h)=>d+this._numberOfRenderVertices(h),0);this._count=i;const t=ae.createBuffer(i),s=this._origin;let r=0,c=0;for(const d of e){for(let h=0;h<d.length;h+=3){const C=$(re,d[h+0],d[h+1],d[h+2]);h===0?c=this._renderCoordsHelper.getAltitude(C):this._renderCoordsHelper.setAltitude(C,c);const x=this._renderCoordsHelper.worldUpAtPosition(C,Et),_=r+2*h,G=ve(re,C,s);if(h<d.length-3){t.up.setVec(_,x),t.up.setVec(_+3,x),t.up.setVec(_+5,x);for(let y=0;y<6;y++)t.start.setVec(_+y,G);t.extrude.setValues(_+0,0,-1),t.extrude.setValues(_+1,1,-1),t.extrude.setValues(_+2,1,1),t.extrude.setValues(_+3,0,-1),t.extrude.setValues(_+4,1,1),t.extrude.setValues(_+5,0,1)}if(h>0){t.up.setVec(_-2,x),t.up.setVec(_-4,x),t.up.setVec(_-5,x);for(let y=-6;y<0;y++)t.end.setVec(_+y,G)}}r+=this._numberOfRenderVertices(d)}return t.buffer}}const Et=u(),re=u(),ae=Ae().vec3f(p.START).vec3f(p.END).vec3f(p.UP).vec2f(p.EXTRUDE);class F extends Ie{constructor(){super(...arguments),this.contrastControlEnabled=!1}}w([E()],F.prototype,"contrastControlEnabled",void 0);const De=W(6);function Vt(n){const e=new ce;e.extensions.add("GL_OES_standard_derivatives"),e.include(Ne),e.include(Ee,n);const i=e.fragment;if(n.lineVerticalPlaneEnabled||n.heightManifoldEnabled)if(i.uniforms.add(new f("maxPixelDistance",(t,s)=>n.heightManifoldEnabled?2*s.camera.computeScreenPixelSizeAt(t.heightManifoldTarget):2*s.camera.computeScreenPixelSizeAt(t.lineVerticalPlaneSegment.origin))),i.code.add(l`float planeDistancePixels(vec4 plane, vec3 pos) {
float dist = dot(plane.xyz, pos) + plane.w;
float width = fwidth(dist);
dist /= min(width, maxPixelDistance);
return abs(dist);
}`),n.spherical){const t=(r,c,d)=>b(r,c.heightManifoldTarget,d.camera.viewMatrix),s=(r,c)=>b(r,[0,0,0],c.camera.viewMatrix);i.uniforms.add([new M("heightManifoldOrigin",(r,c)=>(t(m,r,c),s(V,c),ve(V,V,m),O(g,V),g[3]=B(V),g)),new P("globalOrigin",(r,c)=>s(m,c)),new f("cosSphericalAngleThreshold",(r,c)=>1-Math.max(2,ye(c.camera.eye,r.heightManifoldTarget)*c.camera.perRenderPixelRatio)/B(r.heightManifoldTarget))]),i.code.add(l`float globeDistancePixels(float posInGlobalOriginLength) {
float dist = abs(posInGlobalOriginLength - heightManifoldOrigin.w);
float width = fwidth(dist);
dist /= min(width, maxPixelDistance);
return abs(dist);
}
float heightManifoldDistancePixels(vec4 heightPlane, vec3 pos) {
vec3 posInGlobalOriginNorm = normalize(globalOrigin - pos);
float cosAngle = dot(posInGlobalOriginNorm, heightManifoldOrigin.xyz);
vec3 posInGlobalOrigin = globalOrigin - pos;
float posInGlobalOriginLength = length(posInGlobalOrigin);
float sphericalDistance = globeDistancePixels(posInGlobalOriginLength);
float planarDistance = planeDistancePixels(heightPlane, pos);
return cosAngle < cosSphericalAngleThreshold ? sphericalDistance : planarDistance;
}`)}else i.code.add(l`float heightManifoldDistancePixels(vec4 heightPlane, vec3 pos) {
return planeDistancePixels(heightPlane, pos);
}`);if(n.pointDistanceEnabled&&(i.uniforms.add(new f("maxPixelDistance",(t,s)=>2*s.camera.computeScreenPixelSizeAt(t.pointDistanceTarget))),i.code.add(l`float sphereDistancePixels(vec4 sphere, vec3 pos) {
float dist = distance(sphere.xyz, pos) - sphere.w;
float width = fwidth(dist);
dist /= min(width, maxPixelDistance);
return abs(dist);
}`)),n.intersectsLineEnabled&&(i.uniforms.add(new f("perScreenPixelRatio",(t,s)=>s.camera.perScreenPixelRatio)),i.code.add(l`float lineDistancePixels(vec3 start, vec3 dir, float radius, vec3 pos) {
float dist = length(cross(dir, pos - start)) / (length(pos) * perScreenPixelRatio);
return abs(dist) - radius;
}`)),(n.lineVerticalPlaneEnabled||n.intersectsLineEnabled)&&i.code.add(l`bool pointIsWithinLine(vec3 pos, vec3 start, vec3 end) {
vec3 dir = end - start;
float t2 = dot(dir, pos - start);
float l2 = dot(dir, dir);
return t2 >= 0.0 && t2 <= l2;
}`),i.code.add(l`void main() {
vec3 pos;
vec3 normal;
float depthDiscontinuityAlpha;
if (!laserlineReconstructFromDepth(pos, normal, depthDiscontinuityAlpha)) {
discard;
}
vec4 color = vec4(0, 0, 0, 0);`),n.heightManifoldEnabled){i.uniforms.add([new L("angleCutoff",s=>A(s)),new M("heightPlane",(s,r)=>Le(s.heightManifoldTarget,s.renderCoordsHelper.worldUpAtPosition(s.heightManifoldTarget,m),r.camera.viewMatrix))]);const t=n.spherical?l`normalize(globalOrigin - pos)`:l`heightPlane.xyz`;i.code.add(l`
    {
      float heightManifoldAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, ${t})));
      vec4 heightManifoldColor = laserlineProfile(heightManifoldDistancePixels(heightPlane, pos));
      color = max(color, heightManifoldColor * heightManifoldAlpha);
    }
    `)}return n.pointDistanceEnabled&&(i.uniforms.add([new L("angleCutoff",t=>A(t)),new M("pointDistanceSphere",(t,s)=>Dt(t,s))]),i.code.add(l`{
float pointDistanceSphereDistance = sphereDistancePixels(pointDistanceSphere, pos);
vec4 pointDistanceSphereColor = laserlineProfile(pointDistanceSphereDistance);
float pointDistanceSphereAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, normalize(pos - pointDistanceSphere.xyz))));
color = max(color, pointDistanceSphereColor * pointDistanceSphereAlpha);
}`)),n.lineVerticalPlaneEnabled&&(i.uniforms.add([new L("angleCutoff",t=>A(t)),new M("lineVerticalPlane",(t,s)=>Lt(t,s)),new P("lineVerticalStart",(t,s)=>St(t,s)),new P("lineVerticalEnd",(t,s)=>Rt(t,s))]),i.code.add(l`{
if (pointIsWithinLine(pos, lineVerticalStart, lineVerticalEnd)) {
float lineVerticalDistance = planeDistancePixels(lineVerticalPlane, pos);
vec4 lineVerticalColor = laserlineProfile(lineVerticalDistance);
float lineVerticalAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, lineVerticalPlane.xyz)));
color = max(color, lineVerticalColor * lineVerticalAlpha);
}
}`)),n.intersectsLineEnabled&&(i.uniforms.add([new L("angleCutoff",t=>A(t)),new P("intersectsLineStart",(t,s)=>b(m,t.lineStartWorld,s.camera.viewMatrix)),new P("intersectsLineEnd",(t,s)=>b(m,t.lineEndWorld,s.camera.viewMatrix)),new P("intersectsLineDirection",(t,s)=>(v(g,t.intersectsLineSegment.vector),g[3]=0,O(m,xe(g,g,s.camera.viewMatrix)))),new f("intersectsLineRadius",t=>t.intersectsLineRadius)]),i.code.add(l`{
if (pointIsWithinLine(pos, intersectsLineStart, intersectsLineEnd)) {
float intersectsLineDistance = lineDistancePixels(intersectsLineStart, intersectsLineDirection, intersectsLineRadius, pos);
vec4 intersectsLineColor = laserlineProfile(intersectsLineDistance);
float intersectsLineAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, 1.0 - abs(dot(normal, intersectsLineDirection)));
color = max(color, intersectsLineColor * intersectsLineAlpha);
}
}`)),i.code.add(l`gl_FragColor = laserlineOutput(color * depthDiscontinuityAlpha);
}`),e}function A(n){return he(Ct,Math.cos(n.angleCutoff),Math.cos(Math.max(0,n.angleCutoff-W(2))))}function Dt(n,e){return b(N,n.pointDistanceOrigin,e.camera.viewMatrix),N[3]=ye(n.pointDistanceOrigin,n.pointDistanceTarget),N}function Lt(n,e){const i=je(n.lineVerticalPlaneSegment,.5,m),t=n.renderCoordsHelper.worldUpAtPosition(i,Mt),s=O(V,n.lineVerticalPlaneSegment.vector),r=We(g,t,s);return O(r,r),Le(n.lineVerticalPlaneSegment.origin,r,e.camera.viewMatrix)}function St(n,e){const i=v(m,n.lineVerticalPlaneSegment.origin);return n.renderCoordsHelper.setAltitude(i,0),b(i,i,e.camera.viewMatrix)}function Rt(n,e){const i=we(m,n.lineVerticalPlaneSegment.origin,n.lineVerticalPlaneSegment.vector);return n.renderCoordsHelper.setAltitude(i,0),b(i,i,e.camera.viewMatrix)}function Le(n,e,i){return b(oe,n,i),v(g,e),g[3]=0,xe(g,g,i),Fe(oe,g,At)}const Ct=de(),m=u(),g=Ge(),Mt=u(),V=u(),oe=u(),At=qe(),N=Ue(),$t=Object.freeze(Object.defineProperty({__proto__:null,defaultAngleCutoff:De,build:Vt},Symbol.toStringTag,{value:"Module"}));class Tt extends Be{constructor(){super(...arguments),this.innerColor=k(1,1,1),this.innerWidth=1,this.glowColor=k(1,.5,0),this.glowWidth=8,this.glowFalloff=8,this.globalAlpha=.75,this.globalAlphaContrastBoost=2,this.angleCutoff=W(6),this.pointDistanceOrigin=u(),this.pointDistanceTarget=u(),this.lineVerticalPlaneSegment=j(),this.intersectsLineSegment=j(),this.intersectsLineRadius=3,this.heightManifoldTarget=u(),this.lineStartWorld=u(),this.lineEndWorld=u()}}class q extends pe{initializeProgram(e){return new ge(e.rctx,q.shader.get().build(this.configuration),He)}initializePipeline(){return fe({blending:me(T.ONE,T.ONE_MINUS_SRC_ALPHA),colorWrite:Pe})}}q.shader=new ue($t,()=>_e(()=>import("./Laserlines.glsl.3864ba65.js"),["assets/Laserlines.glsl.3864ba65.js","assets/index.d2d38865.js","assets/index.785c8c13.css","assets/LineVisualElement.c1761bad.js"]));class D extends F{constructor(){super(...arguments),this.heightManifoldEnabled=!1,this.pointDistanceEnabled=!1,this.lineVerticalPlaneEnabled=!1,this.intersectsLineEnabled=!1,this.spherical=!1}}w([E()],D.prototype,"heightManifoldEnabled",void 0),w([E()],D.prototype,"pointDistanceEnabled",void 0),w([E()],D.prototype,"lineVerticalPlaneEnabled",void 0),w([E()],D.prototype,"intersectsLineEnabled",void 0),w([E()],D.prototype,"spherical",void 0);class Ot{constructor(e,i={contrastControlEnabled:!1}){this._config=i,this._technique=null,this._heightManifoldEnabled=!1,this._pointDistanceEnabled=!1,this._lineVerticalPlaneEnabled=!1,this._intersectsLineEnabled=!1,this._intersectsLineInfinite=!1,this._viewingMode=K.Local,this._pathVerticalPlaneEnabled=!1,this._pathVerticalPlaneData=null,this._pathTechnique=null,this.canRender=!0,this._passParameters=Ke(e,new Tt)}get renderSlots(){return[this._config.contrastControlEnabled?X.LASERLINES_CONTRAST_CONTROL:X.LASERLINES]}get needsLinearDepth(){return!0}get heightManifoldEnabled(){return this._heightManifoldEnabled}set heightManifoldEnabled(e){this._heightManifoldEnabled!==e&&(this._heightManifoldEnabled=e,this._requestRender())}get heightManifoldTarget(){return this._passParameters.heightManifoldTarget}set heightManifoldTarget(e){v(this._passParameters.heightManifoldTarget,e),this._requestRender()}get pointDistanceEnabled(){return this._pointDistanceEnabled}set pointDistanceEnabled(e){e!==this._pointDistanceEnabled&&(this._pointDistanceEnabled=e,this._requestRender())}get pointDistanceTarget(){return this._passParameters.pointDistanceTarget}set pointDistanceTarget(e){v(this._passParameters.pointDistanceTarget,e),this._requestRender()}get pointDistanceOrigin(){return this._passParameters.pointDistanceOrigin}set pointDistanceOrigin(e){v(this._passParameters.pointDistanceOrigin,e),this._requestRender()}get lineVerticalPlaneEnabled(){return this._lineVerticalPlaneEnabled}set lineVerticalPlaneEnabled(e){e!==this._lineVerticalPlaneEnabled&&(this._lineVerticalPlaneEnabled=e,this._requestRender())}get lineVerticalPlaneSegment(){return this._passParameters.lineVerticalPlaneSegment}set lineVerticalPlaneSegment(e){z(e,this._passParameters.lineVerticalPlaneSegment),this._requestRender()}get intersectsLineEnabled(){return this._intersectsLineEnabled}set intersectsLineEnabled(e){e!==this._intersectsLineEnabled&&(this._intersectsLineEnabled=e,this._requestRender())}get intersectsLineSegment(){return this._passParameters.intersectsLineSegment}set intersectsLineSegment(e){z(e,this._passParameters.intersectsLineSegment),this._requestRender()}get intersectsLineRadius(){return this._passParameters.intersectsLineRadius}set intersectsLineRadius(e){e!==this._passParameters.intersectsLineRadius&&(this._passParameters.intersectsLineRadius=e,this._requestRender())}get intersectsLineInfinite(){return this._intersectsLineInfinite}set intersectsLineInfinite(e){e!==this._intersectsLineInfinite&&(this._intersectsLineInfinite=e,this._requestRender())}get viewingMode(){return this._viewingMode}set viewingMode(e){e!==this._viewingMode&&(this._viewingMode=e,this._requestRender())}get pathVerticalPlaneEnabled(){return this._pathVerticalPlaneEnabled}set pathVerticalPlaneEnabled(e){e!==this._pathVerticalPlaneEnabled&&(this._pathVerticalPlaneEnabled=e,a(this._pathVerticalPlaneData)&&this._requestRender())}set pathVerticalPlaneVertices(e){o(this._pathVerticalPlaneData)&&(this._pathVerticalPlaneData=new ne(this._passParameters.renderCoordsHelper)),this._pathVerticalPlaneData.vertices=e,this.pathVerticalPlaneEnabled&&this._requestRender()}set pathVerticalPlaneBuffers(e){o(this._pathVerticalPlaneData)&&(this._pathVerticalPlaneData=new ne(this._passParameters.renderCoordsHelper)),this._pathVerticalPlaneData.buffers=e,this.pathVerticalPlaneEnabled&&this._requestRender()}setParameters(e){Xe(this._passParameters,e)&&this._requestRender()}initializeRenderContext(e){this._context=e;const i=e.renderContext.rctx;this._quadVAO=Qe(i),this._techniqueRepository=e.shaderTechniqueRepository,this._techniqueConfig=new D;const t=new F;t.contrastControlEnabled=this._config.contrastControlEnabled,this._pathTechnique=this._techniqueRepository.acquire(I,t)}uninitializeRenderContext(){this._quadVAO=Q(this._quadVAO),this._technique=J(this._technique),this._pathVerticalPlaneData=Q(this._pathVerticalPlaneData),this._pathTechnique=J(this._pathTechnique)}prepareTechnique(){return this.heightManifoldEnabled||this.pointDistanceEnabled||this.lineVerticalPlaneSegment||this.intersectsLineEnabled?(this._techniqueConfig.heightManifoldEnabled=this.heightManifoldEnabled,this._techniqueConfig.lineVerticalPlaneEnabled=this.lineVerticalPlaneEnabled,this._techniqueConfig.pointDistanceEnabled=this.pointDistanceEnabled,this._techniqueConfig.intersectsLineEnabled=this.intersectsLineEnabled,this._techniqueConfig.contrastControlEnabled=this._config.contrastControlEnabled,this._techniqueConfig.spherical=this._viewingMode===K.Global,this._technique=this._techniqueRepository.releaseAndAcquire(q,this._techniqueConfig,this._technique),this._technique):this._pathTechnique}render(e,i){(this.heightManifoldEnabled||this.pointDistanceEnabled||this.lineVerticalPlaneSegment||this.intersectsLineEnabled)&&this._renderUnified(e,i),this.pathVerticalPlaneEnabled&&this._renderPath(e)}_renderUnified(e,i){const t=e.rctx;this._updatePassParameters(e),t.bindTechnique(i,this._passParameters,e.bindParameters),t.bindVAO(this._quadVAO),t.drawArrays(be.TRIANGLE_STRIP,0,4)}_renderPath(e){if(o(this._pathVerticalPlaneData)||o(this._pathTechnique))return;const i=e.rctx,t=this._pathTechnique;i.bindTechnique(t,{...this._passParameters,origin:this._pathVerticalPlaneData.origin},e.bindParameters),this._pathVerticalPlaneData.draw(e.rctx)}_updatePassParameters(e){if(!this._intersectsLineEnabled)return;const i=e.bindParameters.camera;if(this._intersectsLineInfinite){if(Je(Ye(this._passParameters.intersectsLineSegment.origin,this._passParameters.intersectsLineSegment.vector),S),S.c0=-Number.MAX_VALUE,!Ze(i.frustum,S))return;et(S,this._passParameters.lineStartWorld),tt(S,this._passParameters.lineEndWorld)}else v(this._passParameters.lineStartWorld,this._passParameters.intersectsLineSegment.origin),we(this._passParameters.lineEndWorld,this._passParameters.intersectsLineSegment.origin,this._passParameters.intersectsLineSegment.vector)}_requestRender(){this._context&&this._context.requestRender()}}const S=ke();class Wt extends bt{constructor(e){super(e.view),this._angleCutoff=De,this._style={},this._heightManifoldTarget=u(),this._heightManifoldEnabled=!1,this._intersectsLine=j(),this._intersectsLineEnabled=!1,this._intersectsLineInfinite=!1,this._lineVerticalPlaneSegment=null,this._pathVerticalPlaneBuffers=null,this._pointDistanceLine=null,this.applyProps(e)}get testData(){return this._renderer}createResources(){this._ensureRenderer()}destroyResources(){this._disposeRenderer()}updateVisibility(){this._syncRenderer(),this._syncHeightManifold(),this._syncIntersectsLine(),this._syncPathVerticalPlane(),this._syncLineVerticalPlane(),this._syncPointDistance()}get angleCutoff(){return this._angleCutoff}set angleCutoff(e){this._angleCutoff!==e&&(this._angleCutoff=e,this._syncAngleCutoff())}get style(){return this._style}set style(e){this._style=e,this._syncStyle()}get heightManifoldTarget(){return this._heightManifoldEnabled?this._heightManifoldTarget:null}set heightManifoldTarget(e){a(e)?(v(this._heightManifoldTarget,e),this._heightManifoldEnabled=!0):this._heightManifoldEnabled=!1,this._syncRenderer(),this._syncHeightManifold()}set intersectsWorldUpAtLocation(e){if(o(e))return void(this.intersectsLine=null);const i=this.view.renderCoordsHelper.worldUpAtPosition(e,zt);this.intersectsLine=it(e,i),this.intersectsLineInfinite=!0}get intersectsLine(){return this._intersectsLineEnabled?this._intersectsLine:null}set intersectsLine(e){a(e)?(z(e,this._intersectsLine),this._intersectsLineEnabled=!0):this._intersectsLineEnabled=!1,this._syncIntersectsLine(),this._syncRenderer()}get intersectsLineInfinite(){return this._intersectsLineInfinite}set intersectsLineInfinite(e){this._intersectsLineInfinite=e,this._syncIntersectsLineInfinite()}get lineVerticalPlaneSegment(){return this._lineVerticalPlaneSegment}set lineVerticalPlaneSegment(e){this._lineVerticalPlaneSegment=a(e)?z(e):null,this._syncLineVerticalPlane(),this._syncRenderer()}get pathVerticalPlane(){return this._pathVerticalPlaneBuffers}set pathVerticalPlane(e){this._pathVerticalPlaneBuffers=e,this._syncPathVerticalPlane(),this._syncLineVerticalPlane(),this._syncPointDistance(),this._syncRenderer()}get pointDistanceLine(){return this._pointDistanceLine}set pointDistanceLine(e){this._pointDistanceLine=a(e)?{origin:Y(e.origin),target:Y(e.target)}:null,this._syncPointDistance(),this._syncRenderer()}_syncRenderer(){this.attached&&this.visible&&(this._intersectsLineEnabled||this._heightManifoldEnabled||a(this._pointDistanceLine)||a(this._pathVerticalPlaneBuffers))?this._ensureRenderer():this._disposeRenderer()}_ensureRenderer(){a(this._renderer)||(this._renderer=new Ot({renderCoordsHelper:this.view.renderCoordsHelper},{contrastControlEnabled:!0}),this._renderer.viewingMode=this.view.state.viewingMode,this._syncStyle(),this._syncHeightManifold(),this._syncIntersectsLine(),this._syncIntersectsLineInfinite(),this._syncPathVerticalPlane(),this._syncLineVerticalPlane(),this._syncPointDistance(),this._syncAngleCutoff(),this.view._stage&&this.view._stage.addRenderPlugin(this._renderer.renderSlots,this._renderer))}_syncStyle(){o(this._renderer)||(this._renderer.setParameters(this._style),this._style.intersectsLineRadius!=null&&(this._renderer.intersectsLineRadius=this._style.intersectsLineRadius))}_syncAngleCutoff(){o(this._renderer)||this._renderer.setParameters({angleCutoff:this._angleCutoff})}_syncHeightManifold(){o(this._renderer)||(this._renderer.heightManifoldEnabled=this._heightManifoldEnabled&&this.visible,this._heightManifoldEnabled&&(this._renderer.heightManifoldTarget=this._heightManifoldTarget))}_syncIntersectsLine(){o(this._renderer)||(this._renderer.intersectsLineEnabled=this._intersectsLineEnabled&&this.visible,this._intersectsLineEnabled&&(this._renderer.intersectsLineSegment=this._intersectsLine))}_syncIntersectsLineInfinite(){o(this._renderer)||(this._renderer.intersectsLineInfinite=this._intersectsLineInfinite)}_syncPathVerticalPlane(){o(this._renderer)||(this._renderer.pathVerticalPlaneEnabled=a(this._pathVerticalPlaneBuffers)&&this.visible,a(this._pathVerticalPlaneBuffers)&&(this._renderer.pathVerticalPlaneBuffers=this._pathVerticalPlaneBuffers))}_syncLineVerticalPlane(){o(this._renderer)||(this._renderer.lineVerticalPlaneEnabled=a(this._lineVerticalPlaneSegment)&&this.visible,a(this._lineVerticalPlaneSegment)&&(this._renderer.lineVerticalPlaneSegment=this._lineVerticalPlaneSegment))}_syncPointDistance(){o(this._renderer)||(this._renderer.pointDistanceEnabled=a(this._pointDistanceLine)&&this.visible,a(this._pointDistanceLine)&&(this._renderer.pointDistanceOrigin=this._pointDistanceLine.origin,this._renderer.pointDistanceTarget=this._pointDistanceLine.target))}_disposeRenderer(){a(this._renderer)&&this.view._stage&&(this.view._stage.removeRenderPlugin(this._renderer),this._renderer=null)}}const zt=u();class It{constructor(e){this._resourceFactory=e,this._resources=null,this._visible=!0,this._attached=!1}destroy(){this._destroyResources()}get object(){return a(this._resources)?this._resources.object:null}get resources(){return a(this._resources)?this._resources.external:null}get visible(){return this._visible}set visible(e){e!==this._visible&&(this._visible=e,this._syncVisible())}get attached(){return this._attached}set attached(e){e!==this._attached&&(this._attached=e,this._createOrDestroyResources())}recreate(){this.attached&&this._createResources()}recreateGeometry(){if(!this._resourceFactory.recreateGeometry)return void this.recreate();const e=this._resourceFactory.view._stage;if(o(this._resources)||!e)return;const i=this._resources.object;this._resources.external.forEach(s=>{s.type===st.Geometry&&e.remove(s)}),i.removeAllGeometries();const t=this._resourceFactory.recreateGeometry(this._resources.external,i,this._resources.layer);e.addMany(t)}_createOrDestroyResources(){this._attached?this._resources||this._createResources():this._destroyResources()}_createResources(){this._destroyResources();const e=this._resourceFactory,i=e.view,t=i._stage;if(!t)return;const s=new nt({isPickable:!1,updatePolicy:rt.SYNC});t.add(s);const r=new at({castShadow:!1}),c=e.createResources(r,s);c.forEach(h=>{t.add(h),h instanceof ot&&t.loadImmediate(h)}),t.add(r),s.add(r);const d=e.cameraChanged?lt(()=>i.state.camera,h=>e.cameraChanged(h),ct):null;this._resources={layer:s,object:r,external:c,cameraHandle:d},this._syncVisible()}_destroyResources(){if(o(this._resources))return;const e=this._resourceFactory.view._stage;e==null||e.remove(this._resources.object),e==null||e.remove(this._resources.layer),this._resources.external.forEach(i=>{e==null||e.remove(i),"dispose"in i&&i.dispose()}),this._resources.object.dispose(),this._resources.cameraHandle&&this._resources.cameraHandle.remove(),this._resources=null}_syncVisible(){o(this._resources)||this._resources.object.setVisible(this._visible)}}class Ft{constructor(e){this.view=null,this._geometry=null,this._size=3,this._color=Z(1,0,1,1),this._pixelSnappingEnabled=!0,this._primitive="square",this._outlineSize=1,this._outlineColor=Z(1,1,1,1),this._elevationInfo=null,this._resources=new It({view:e.view,createResources:t=>this._createResources(t),recreateGeometry:(t,s)=>(t.geometry=this._recreateGeometry(s,t.material),a(t.geometry)?[t.geometry]:[])});let i=!0;for(const t in e)t in this?t==="attached"?i=e[t]:this[t]=e[t]:console.error("Cannot set unknown property",t);this.attached=i}destroy(){this._resources.destroy()}get visible(){return this._resources.visible}set visible(e){this._resources.visible=e}get attached(){return this._resources.attached}set attached(e){this._resources.attached=e}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this._resources.recreateGeometry()}get size(){return this._size}set size(e){if(e!==this._size){const i=this._preferredTextureSize;this._size=e,i<this._preferredTextureSize?a(this._resources)&&this._resources.recreate():this._updateSizeAttribute()}}get color(){return this._color}set color(e){ee(e,this._color)||(te(this._color,e),this._updateMaterial())}get pixelSnappingEnabled(){return this._pixelSnappingEnabled}set pixelSnappingEnabled(e){this._pixelSnappingEnabled!==e&&(this._pixelSnappingEnabled=e,this._updateMaterial())}get primitive(){return this._primitive}set primitive(e){this._primitive!==e&&(this._primitive=e,a(this._resources)&&this._resources.recreate())}get outlineSize(){return this._outlineSize}set outlineSize(e){e!==this._outlineSize&&(this._outlineSize=e,this._updateMaterial())}get outlineColor(){return this._outlineColor}set outlineColor(e){ee(e,this._outlineColor)||(te(this._outlineColor,e),this._updateMaterial())}get elevationInfo(){return this._elevationInfo}set elevationInfo(e){this._elevationInfo=e,this._resources&&this._resources.recreateGeometry()}_updateMaterial(){const e=this._resources.resources;o(e)||e.material.setParameters(this._materialParameters(e.texture.id))}_updateSizeAttribute(){const e=this._resources.resources,i=this._resources.object;if(o(e)||o(i))return;const t=e.geometry;if(o(t))return;const s=t.getMutableAttribute(p.SIZE).data,r=this._geometrySize;s[0]=r,s[1]=r,i.geometryVertexAttrsUpdated(i.geometryRecords[0])}_materialParameters(e){return{color:this._color,textureIsSignedDistanceField:!0,distanceFieldBoundingBox:qt,occlusionTest:!1,outlineColor:this._outlineColor,outlineSize:this._outlineSize,textureId:e,polygonOffset:!1,shaderPolygonOffset:0,drawInSecondSlot:!0,depthEnabled:!1,pixelSnappingEnabled:this.pixelSnappingEnabled}}get _geometrySize(){return this._size/R}_recreateGeometry(e,i){const t=this._createRenderGeometry();return a(t)&&e.addGeometry(t,i),t}_createResources(e){const i=ht(this._primitive,this._preferredTextureSize),t=new dt(this._materialParameters(i.id)),s=this._recreateGeometry(e,t);return{material:t,texture:i,geometry:s,forEach(r){r(i),r(t),a(this.geometry)&&r(this.geometry)}}}get _preferredTextureSize(){return ut(_t(2*this._geometrySize),16,128)}calculateMapBounds(e){if(o(this._resources.resources)||o(this._resources.resources.geometry))return!1;const i=this._resources.resources.geometry.vertexAttributes.get(p.POSITION);return ie(i.data,this.view.renderCoordsHelper.spatialReference,le,this.view.spatialReference),pt(e,le),!0}_createRenderGeometry(){const e=this.geometry;if(o(e))return null;const{renderCoordsHelper:i,elevationProvider:t}=this.view,s=gt(e,t,ft.fromElevationInfo(this.elevationInfo),i),r=$(se.get(),e.x,e.y,s),c=se.get();ie(r,e.spatialReference,c,i.spatialReference);const d=this._geometrySize;return mt(null,c,null,[d,d],[0,0,0,1])}}const R=Pt,qt=[R/2,R/2,1-R/2,1-R/2],le=u();export{Vt as A,De as C,Ft as S,Wt as d,vt as v};
