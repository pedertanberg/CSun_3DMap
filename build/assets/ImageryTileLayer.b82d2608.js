import{cH as ot,jS as de,r as C,s5 as Ve,ak as Xe,s as $,ie as lt,aV as N,b7 as X,t as M,at as q,bz as Ye,ep as ct,ch as ut,e as I,f as S,nC as Ke,k as Q,cd as ht,ea as H,is as ft,fq as Qe,aK as Ze,ad as dt,cS as mt,c0 as pt,bW as yt,re as gt,rf as xt,nx as It,ny as wt,rD as bt,rG as St,rg as vt,nz as Rt,c3 as Tt,hM as fe,e3 as _t,G as kt,dY as Ct,ef as Ft,rz as Pt,ee as Mt,dX as $t,J as Bt}from"./index.d2d38865.js";import{g as et,h as Ot,q as Dt,s as zt,p as tt,c as Et,w as Jt,l as it,e as ze,m as Nt,$ as Ee,d as Ht,V as At,L as Lt,j as Wt,n as jt,b as Gt,u as qt,o as Ut,a as Vt}from"./fetchRasterInfo.fc8ec22a.js";import{a as Te,S as Xt,A as me,D as Yt,j as Kt,m as Qt,C as Zt,d as ei,f as ti,T as ii,J as Je,B as pe,W as si,p as ri,K as Me,P as ni,L as ai,g as oi,M as li,N as ci,O as ui,Q as ge,R as hi,U as fi,V as di}from"./dataUtils.492c9fda.js";import{T as Ne,U as xe,j as He,o as Ae,n as mi,Q as _e,J as ke,$ as pi,V as yi,C as gi}from"./rasterProjectionHelper.f41ac9a3.js";import{l as st,f as xi,i as Ii,m as $e,c as wi}from"./utils.48a83151.js";import{n as bi,z as Si}from"./TilemapCache.e26537db.js";import"./generateRendererUtils.6f50fd73.js";import"./colorUtils.bb6424b7.js";class vi{constructor(e=15e3,s=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,s)}decreaseRefCount(e,s){const i=e+"/"+s,r=this._cachedBlocks;if(r.has(i)){const n=r.get(i);return n.refCount--,n.refCount<=0&&(r.delete(i),n.controller&&n.controller.abort()),n.refCount}return 0}getBlock(e,s){const i=e+"/"+s,r=this._cachedBlocks;if(r.has(i)){const n=r.get(i);return n.ts=Date.now(),n.refCount++,r.delete(i),r.set(i,n),n.block}return null}putBlock(e,s,i,r){const n=this._cachedBlocks,a=e+"/"+s;if(n.has(a)){const c=n.get(a);c.ts=Date.now(),c.refCount++}else n.set(a,{block:i,ts:Date.now(),refCount:1,controller:r});this._trim(),this._updateTimer()}deleteBlock(e,s){const i=this._cachedBlocks,r=e+"/"+s;i.has(r)&&i.delete(r)}updateMaxSize(e){this._size=e,this._trim()}empty(){this._cachedBlocks.clear(),this._clearTimer()}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(this._timer!=null)return;const e=this._cachedBlocks;this._timer=setInterval(()=>{const s=Array.from(e),i=Date.now();for(let r=0;r<s.length&&s[r][1].ts<=i-this._duration;r++)e.delete(s[r][0]);e.size===0&&this._clearTimer()},this._interval)}_trim(){const e=this._cachedBlocks;if(this._size===-1||this._size>=e.size)return;const s=Array.from(e);for(let i=0;i<s.length-this._size;i++)e.delete(s[i][0])}_clearTimer(){this._timer!=null&&(clearInterval(this._timer),this._timer=null)}}const ve=new Map,ee=new vi;function Le(t,e){return e==null?t:`${t}?sliceId=${e}`}function Ri(t,e,s){var a,c;const i=ve.get(t);if(!i)return e==null?ee.decreaseRefCount(t,s):0;if(e==null||i[e]==null)return ee.decreaseRefCount(t,s);const r=(a=i[e])==null?void 0:a.cache,n=r==null?void 0:r.get(s);if(r&&n){if(n.refCount--,n.refCount===0){r.delete(s);for(let o=0;o<i.length;o++)(c=i[o])==null||c.cache.delete(s);n.controller&&n.controller.abort()}return n.refCount}return 0}function We(t,e,s){var n,a,c;const i=ve.get(t);if(!i)return e==null?ee.getBlock(t,s):null;if(e==null||i[e]==null){for(let o=0;o<i.length;o++){const l=(n=i[o])==null?void 0:n.cache.get(s);if(l)return l.refCount++,l.block}return ee.getBlock(t,s)}const r=(a=i[e])==null?void 0:a.cache.get(s);if(r)return r.refCount++,r.block;for(let o=0;o<i.length;o++){if(o===e||!i[o])continue;const l=(c=i[o])==null?void 0:c.cache,u=l==null?void 0:l.get(s);if(l&&u)return u.refCount++,l.set(s,u),u.block}return null}function je(t,e,s,i,r=null){var c;const n=ve.get(t);if(!n)return void(e==null&&ee.putBlock(t,s,i,r));if(e==null||n[e]==null)return void ee.putBlock(t,s,i,r);const a={refCount:1,block:i,isResolved:!1,isRejected:!1,controller:r};i.then(()=>a.isResolved=!0).catch(()=>a.isRejected=!0),(c=n[e])==null||c.cache.set(s,a)}function Ti(t,e,s){var r;const i=ve.get(t);i?e!=null&&i[e]!=null?(r=i[e])==null||r.cache.delete(s):ee.deleteBlock(t,s):e==null&&ee.deleteBlock(t,s)}const Ie=8;let V=class extends ot(ht){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const t=Ne();this.addResolvingPromise(t),await this.when()}normalizeCtorArgs(t){return t&&t.ioConfig&&(t={...t,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:de.create(),...t.ioConfig}}),t}get _isGlobalWrappableSource(){const{rasterInfo:t}=this,e=xe(t.spatialReference);return C(e)&&t.extent.width>=e/2}set url(t){this._set("url",Ve(t,Xe.getLogger(this.declaredClass)))}async open(t){throw new $("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(t,e,s,i={}){const r=i.tileInfo||this.rasterInfo.storageInfo.tileInfo,n=this.getTileExtentFromTileInfo(t,e,s,r);return this.fetchPixels(n,r.size[0],r.size[1],i)}async identify(t,e={}){var _,P;t=lt(N,t).clone().normalize();const{multidimensionalDefinition:s,timeExtent:i}=e,{hasMultidimensionalTranspose:r,multidimensionalInfo:n}=this.rasterInfo;let{transposedVariableName:a}=e;const c=C(n)&&r&&(i!=null||et(s));c&&!a&&(a=C(s)&&s.length>0?(_=s[0].variableName)!=null?_:void 0:n.variables[0].name,e={...e,transposedVariableName:a}),e=this._getRequestOptionsWithSliceId(e);const{spatialReference:o,extent:l}=this.rasterInfo,{datumTransformation:u}=e;let h=He(t,o,u);if(!l.intersects(h))return{location:h,value:null};if(C(this.rasterInfo.transform)){const O=this.rasterInfo.transform.inverseTransform(h);if(!this.rasterInfo.nativeExtent.intersects(O))return{location:O,value:null};h=O}let f=0;const d=C(a)&&C(n)&&this.rasterInfo.hasMultidimensionalTranspose;if(!d){if(e.srcResolution)f=Ae(e.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;else if(f=await this.computeBestPyramidLevelForLocation(t,e),f==null)return{location:h,value:null}}const p=this.identifyPixelLocation(h,f,null,d);if(p===null)return{location:h,value:null};const{row:y,col:m,rowOffset:g,colOffset:w,blockWidth:x}=p,F=a!=null?a:X(e.sliceId),k=Le(this.url,F),R=`${f}/${y}/${m}`;let v=We(k,null,R);M(v)&&(v=this.fetchRawTile(f,y,m,e),je(k,null,R,v));const T=await v;if(M(T)||!((P=T.pixels)!=null&&P.length))return{location:h,value:null};const b=g*x+w;return this._processIdentifyResult(T,{srcLocation:h,position:b,pyramidLevel:f,useTransposedTile:!!d,requestSomeSlices:c,identifyOptions:e})}async fetchPixels(t,e,s,i={}){if(t=mi(t),(i=this._getRequestOptionsWithSliceId(i)).requestRawData)return this._fetchPixels(t,e,s,i);const r=xe(t.spatialReference),n=_e(t);if(M(r)||n===0||n===1&&this._isGlobalWrappableSource)return this._fetchPixels(t,e,s,i);if(n>=3)return{extent:t,pixelBlock:null};const a=[],{xmin:c,xmax:o}=t,l=Math.round(r/(o-c)*e),u=l-Math.round((r/2-c)/(o-c)*e);let h=0;const f=[];for(let m=0;m<=n;m++){const g=new q({xmin:m===0?c:-r/2,xmax:m===n?o-r*m:r/2,ymin:t.ymin,ymax:t.ymax,spatialReference:t.spatialReference}),w=m===0?l-u:m===n?e-h:l;h+=w,f.push(w);const x=i.disableWrapAround&&m>0?null:this._fetchPixels(g,w,s,i);a.push(x)}const d=(await Promise.all(a)).map(m=>m==null?void 0:m.pixelBlock);let p=null;const y={width:e,height:s};return this.rasterJobHandler?p=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:d,srcMosaicSize:y,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:f},i)).pixelBlock:p=Te(d,y,{blockWidths:f}),{extent:t,srcExtent:ke(t,this.rasterInfo.spatialReference,i.datumTransformation),pixelBlock:p}}async fetchRawPixels(t,e,s,i={}){e={x:Math.floor(e.x),y:Math.floor(e.y)};const r=await this._fetchRawTiles(t,e,s,i),{nativeExtent:n,nativePixelSize:a,storageInfo:c}=this.rasterInfo,o=2**t,l=a.x*o,u=a.y*o,h=new q({xmin:n.xmin+l*e.x,xmax:n.xmin+l*(e.x+s.width-1),ymin:n.ymax-u*(e.y+s.height-1),ymax:n.ymax-u*e.y,spatialReference:n.spatialReference});if(!r)return{extent:h,srcExtent:h,pixelBlock:null};const{pixelBlocks:f,mosaicSize:d}=r;if(f.length===1&&C(f[0])&&f[0].width===s.width&&f[0].height===s.height)return{extent:h,srcExtent:h,pixelBlock:r.pixelBlocks[0]};const p=t>0?c.pyramidBlockWidth:c.blockWidth,y=t>0?c.pyramidBlockHeight:c.blockHeight,m={x:e.x%p,y:e.y%y};let g;return this.rasterJobHandler?g=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:f,srcMosaicSize:d,destDimension:s,clipOffset:m,clipSize:s,coefs:null,sampleSpacing:null,interpolation:i.interpolation,alignmentInfo:null,blockWidths:null},i)).pixelBlock:g=Te(f,d,{clipOffset:m,clipSize:s}),{extent:h,srcExtent:h,pixelBlock:g}}fetchRawTile(t,e,s,i){throw new $("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(t){return ke(this.rasterInfo.extent,t)}decodePixelBlock(t,e){return!this.rasterJobHandler||e.useCanvas?Xt(t,e):this.rasterJobHandler.decode({data:t,options:e})}async request(t,e,s=0){var o;const{customFetchParameters:i}=this.ioConfig,{range:r,query:n,headers:a}=e;s=(o=s!=null?s:e.retryCount)!=null?o:this.ioConfig.retryCount;const c=r?{Range:`bytes=${r.from}-${r.to}`}:null;try{return await Ye(t,{...e,query:{...n,...i},headers:{...a,...c}})}catch(l){if(s>0)return s--,this.request(t,e,s);throw l}}getSliceIndex(t){const{multidimensionalInfo:e}=this.rasterInfo;return M(e)||M(t)||t.length===0?null:Ot(t,e)}getTileExtentFromTileInfo(t,e,s,i){const r=ct(i.lodAt(t));return this.getTileExtent({x:r.resolution,y:r.resolution},e,s,i.origin,i.spatialReference,i.size)}updateTileInfo(){const{storageInfo:t,spatialReference:e,extent:s,pixelSize:i}=this.rasterInfo;if(!t.tileInfo){const r=[],n=t.maximumPyramidLevel||0;let a=Math.max(i.x,i.y),c=1/.0254*96*a;for(let l=0;l<=n;l++)r.push({level:n-l,resolution:a,scale:c}),a*=2,c*=2;const o=new N({x:s.xmin,y:s.ymax,spatialReference:e});t.tileInfo=new de({origin:o,size:[t.blockWidth,t.blockHeight],spatialReference:e,lods:r}),t.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(t,e=512,s=512,i){const{width:r,height:n,nativeExtent:a,pixelSize:c,spatialReference:o}=t,l=new N({x:a.xmin,y:a.ymax,spatialReference:o});i==null&&(i=Math.max(0,Math.round(Math.log(Math.max(r,n))/Math.LN2-8)));const u=this.computeBlockBoundary(a,512,512,{x:a.xmin,y:a.ymax},[c],i);t.storageInfo=new me({blockWidth:e,blockHeight:s,pyramidBlockWidth:e,pyramidBlockHeight:s,origin:l,firstPyramidLevel:1,maximumPyramidLevel:i,blockBoundary:u})}async computeBestPyramidLevelForLocation(t,e={}){return 0}computeBlockBoundary(t,e,s,i,r,n=0,a=2){if(r.length===1&&n>0){r=[...r];let{x:u,y:h}=r[0];for(let f=0;f<n;f++)u*=a,h*=a,r.push({x:u,y:h})}const c=[],{x:o,y:l}=i;for(let u=0;u<r.length;u++){const{x:h,y:f}=r[u];c.push({minCol:Math.floor((t.xmin-o+.1*h)/e/h),maxCol:Math.floor((t.xmax-o-.1*h)/e/h),minRow:Math.floor((l-t.ymax+.1*f)/s/f),maxRow:Math.floor((l-t.ymin-.1*f)/s/f)})}return c}getPyramidPixelSize(t){const{nativePixelSize:e}=this.rasterInfo,{pyramidResolutions:s,pyramidScalingFactor:i}=this.rasterInfo.storageInfo;if(t===0)return e;if(C(s)&&s.length)return s[t-1];const r=i**t;return{x:e.x*r,y:e.y*r}}identifyPixelLocation(t,e,s,i){const{spatialReference:r,nativeExtent:n,storageInfo:a}=this.rasterInfo,{maximumPyramidLevel:c,origin:o,transposeInfo:l}=a,u=i&&C(l)?l.tileSize[0]:a.blockWidth,h=i&&C(l)?l.tileSize[1]:a.blockHeight,f=He(t,r,s);if(!n.intersects(f)||e<0||e>c)return null;const d=this.getPyramidPixelSize(e),{x:p,y}=d,m=(o.y-f.y)/y/h,g=(f.x-o.x)/p/u,w=Math.min(h-1,Math.floor((m-Math.floor(m))*h)),x=Math.min(u-1,Math.floor((g-Math.floor(g))*u));return{pyramidLevel:e,row:Math.floor(m),col:Math.floor(g),rowOffset:w,colOffset:x,blockWidth:u,srcLocation:f}}getTileExtent(t,e,s,i,r,n){const[a,c]=n,o=i.x+s*a*t.x,l=o+a*t.x,u=i.y-e*c*t.y,h=u-c*t.y;return new q({xmin:o,xmax:l,ymin:h,ymax:u,spatialReference:r})}getBlockWidthHeight(t){return{blockWidth:t>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:t>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(t,e,s){const i=this.rasterInfo.storageInfo.blockBoundary[t];return!i||i.maxRow<e||i.maxCol<s||i.minRow>e||i.minCol>s}async _fetchPixels(t,e,s,i={}){let r=_e(t);if(r>=2)return{extent:t,pixelBlock:null};const n=this._getSourceDataInfo(t,e,s,i),{pyramidLevel:a,pyramidResolution:c,srcResolution:o,srcExtent:l,srcWidth:u,srcHeight:h}=n;if(u===0||h===0)return{extent:t,srcExtent:l,pixelBlock:null};const f=X(this.rasterInfo.transform),d=(f==null?void 0:f.type)==="gcs-shift",p=C(xe(t.spatialReference));!d&&p||(r=_e(n.srcExtent,d));const y=this.rasterInfo.storageInfo,m={x:Math.floor((l.xmin-y.origin.x)/c.x+.1),y:Math.floor((y.origin.y-l.ymax)/c.y+.1)},g=await this._fetchRawTiles(a,m,{width:u,height:h,wrapCount:r},i);if(!g)return{extent:t,srcExtent:l,pixelBlock:null};const w=a>0?y.pyramidBlockWidth:y.blockWidth,x=a>0?y.pyramidBlockHeight:y.blockHeight,F=w===u&&x===h&&m.x%w==0&&m.y%x==0,k=new N({x:(t.xmax-t.xmin)/e,y:(t.ymax-t.ymin)/s,spatialReference:t.spatialReference}),R=!t.spatialReference.equals(this.rasterInfo.spatialReference),{datumTransformation:v}=i;if(!R&&F&&g.pixelBlocks.length===1&&w===e&&x===s&&o.x===k.x&&o.y===k.y)return{extent:t,srcExtent:l,pixelBlock:g.pixelBlocks[0]};const T=p&&C(xe(l.spatialReference)),b=i.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");b&&!this.rasterJobHandler&&await Ne();const _=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:t,srcBufferExtent:g.extent,pixelSize:k.toJSON(),datumTransformation:v,rasterTransform:f,hasWrapAround:r>0||T,isAdaptive:this.ioConfig.optimizeProjectionAccuracy!==!1,includeGCSGrid:b},i):pi({projectedExtent:t,srcBufferExtent:g.extent,pixelSize:k,datumTransformation:v,rasterTransform:f,hasWrapAround:r>0||T,isAdaptive:!1,includeGCSGrid:b});let P;const O=!i.requestRawData,U={rows:_.spacing[0],cols:_.spacing[1]},A=X(this._getRasterTileAlignmentInfo(a,g.extent.xmin)),{pixelBlocks:D,mosaicSize:L,isPartiallyFilled:W}=g;let E=null;if(this.rasterJobHandler)({pixelBlock:P,localNorthDirections:E}=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:D,srcMosaicSize:L,destDimension:O?{width:e,height:s}:null,coefs:O?_.coefficients:null,sampleSpacing:O?U:null,projectDirections:b,gcsGrid:b?_.gcsGrid:null,isUV:this.rasterInfo.dataType==="vector-uv",interpolation:i.interpolation,alignmentInfo:A,blockWidths:null},i));else{const j=Te(D,L,{alignmentInfo:A});P=O?Yt(j,{width:e,height:s},_.coefficients,U,i.interpolation):j,b&&_.gcsGrid&&(E=Kt({width:e,height:s},_.gcsGrid),P=Qt(P,this.rasterInfo.dataType,E))}return i.requestRawData||b?{srcExtent:l,pixelBlock:P,transformGrid:_,localNorthDirections:E,extent:t,isPartiallyFilled:W}:{srcExtent:l,extent:t,pixelBlock:P}}async _fetchRawTiles(t,e,s,i){const{origin:r,blockBoundary:n}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:c}=this.getBlockWidthHeight(t);let{x:o,y:l}=e,{width:u,height:h,wrapCount:f}=s;const d=this._getRasterTileAlignmentInfo(t,0);i.buffer&&(o-=i.buffer.cols,l-=i.buffer.rows,u+=2*i.buffer.cols,h+=2*i.buffer.rows);let p=0,y=0,m=0;f&&C(d)&&({worldColumnCountFromOrigin:y,originColumnOffset:m,rightPadding:p}=d,y*d.blockWidth-p>=o+u&&(p=0));const g=Math.floor(o/a),w=Math.floor(l/c),x=Math.floor((o+u+p-1)/a),F=Math.floor((l+h+p-1)/c),k=n[t];if(!k)return null;const{minRow:R,minCol:v,maxCol:T,maxRow:b}=k;if(f===0&&(F<R||x<v||w>b||g>T))return null;const _=new Array;let P=!1;const O=this.ioConfig.allowPartialFill==null?i.allowPartialFill:this.ioConfig.allowPartialFill;for(let j=w;j<=F;j++)for(let z=g;z<=x;z++){let ye=z;if(!i.disableWrapAround&&f&&C(d)&&y<=z&&(ye=z-y-m),j>=R&&ye>=v&&b>=j&&T>=ye){const Oe=this._fetchRawTile(t,j,ye,i);O?_.push(new Promise(De=>{Oe.then(at=>De(at)).catch(()=>{P=!0,De(null)})})):_.push(Oe)}else _.push(Promise.resolve(null))}if(_.length===0)return null;const U=await Promise.all(_),A={height:(F-w+1)*c,width:(x-g+1)*a},{spatialReference:D}=this.rasterInfo,L=this.getPyramidPixelSize(t),{x:W,y:E}=L;return{extent:new q({xmin:r.x+g*a*W,xmax:r.x+(x+1)*a*W,ymin:r.y-(F+1)*c*E,ymax:r.y-w*c*E,spatialReference:D}),pixelBlocks:U,mosaicSize:A,isPartiallyFilled:P}}_fetchRawTile(t,e,s,i){const r=this.rasterInfo.storageInfo.blockBoundary[t];if(!r)return Promise.resolve(null);const{minRow:n,minCol:a,maxCol:c,maxRow:o}=r;if(e<n||s<a||e>o||s>c)return Promise.resolve(null);const l=Le(this.url,i.sliceId),u=`${t}/${e}/${s}`;let h=We(l,i.registryId,u);if(M(h)){const f=new AbortController;h=this.fetchRawTile(t,e,s,{...i,signal:f.signal}),je(l,i.registryId,u,h,f),h.catch(()=>Ti(l,i.registryId,u))}return i.signal&&ut(i,()=>{Ri(l,i.registryId,u)}),h}_computeMagDirValues(t){var o;const{bandCount:e,dataType:s}=this.rasterInfo;if(!(e===2&&s==="vector-magdir"||s==="vector-uv")||(t==null?void 0:t.length)!==2||!((o=t[0])!=null&&o.length))return null;const i=t[0].length;if(s==="vector-magdir"){const l=t[1].map(u=>(u+360)%360);return[t[0],l]}const[r,n]=t,a=[],c=[];for(let l=0;l<i;l++){const[u,h]=Zt([r[l],n[l]]);a.push(u),c.push(h)}return[a,c]}_getRasterTileAlignmentInfo(t,e){return this._rasterTileAlighmentInfo==null&&(this._rasterTileAlighmentInfo=yi(this.rasterInfo)),M(this._rasterTileAlighmentInfo.pyramidsInfo)?null:{startX:e,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[t]}}_getSourceDataInfo(t,e,s,i={}){const r={datumTransformation:i.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0};i.srcResolution&&(r.srcResolution=i.srcResolution,this._updateSourceDataInfo(t,r));const n=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:a,srcHeight:c,pyramidLevel:o}=r,l=a/e,u=c/s,h=o<n&&l*u>=16;if(h||o===n&&(l>Ie||u>Ie)||a===0||c===0){const f=new N({x:(t.xmax-t.xmin)/e,y:(t.ymax-t.ymin)/s,spatialReference:t.spatialReference});let d=gi(f,this.rasterInfo.spatialReference,t,r.datumTransformation);const p=!d||i.srcResolution&&d.x+d.y<i.srcResolution.x+i.srcResolution.y;if(h&&i.srcResolution&&p){const y=Math.round(Math.log(Math.max(l,u))/Math.LN2)-1;if(n-o+3>=y){const m=2**y;d={x:i.srcResolution.x*m,y:i.srcResolution.y*m}}}d&&(r.srcResolution=d,this._updateSourceDataInfo(t,r))}return(r.srcWidth/e>Ie||r.srcHeight/s>Ie)&&(r.srcWidth=0,r.srcHeight=0),r}_updateSourceDataInfo(t,e){e.srcWidth=0,e.srcHeight=0;const s=this.rasterInfo.spatialReference,{srcResolution:i,datumTransformation:r}=e,{pyramidLevel:n,pyramidResolution:a,excessiveReading:c}=Ae(i,this.rasterInfo,this.ioConfig.sampling);if(c)return;let o=e.srcExtent||ke(t,s,r);if(o==null)return;const l=X(this.rasterInfo.transform);l&&(o=l.inverseTransform(o)),e.srcExtent=o;const u=Math.ceil((o.xmax-o.xmin)/a.x-.1),h=Math.ceil((o.ymax-o.ymin)/a.y-.1);e.pyramidLevel=n,e.pyramidResolution=a,e.srcWidth=u,e.srcHeight=h}_getRequestOptionsWithSliceId(t){return C(this.rasterInfo.multidimensionalInfo)&&t.sliceId==null&&(t={...t,sliceId:this.getSliceIndex(t.multidimensionalDefinition)}),t}_processIdentifyResult(t,e){const{srcLocation:s,position:i,pyramidLevel:r,useTransposedTile:n}=e,a=t.pixels[0].length/t.width/t.height;if(!(!t.mask||t.mask[i]))return{location:s,value:null};const{multidimensionalInfo:c}=this.rasterInfo;if(M(c)||!n){const d=t.pixels.map(m=>m[i]),p={location:s,value:d,pyramidLevel:r},y=this._computeMagDirValues(d.map(m=>[m]));return y!=null&&y.length&&(p.magdirValue=y.map(m=>m[0])),p}let o=t.pixels.map(d=>Array.prototype.slice.call(d,i*a,i*a+a)),l=this._computeMagDirValues(o);const{requestSomeSlices:u,identifyOptions:h}=e;let f=Dt(c,h.transposedVariableName);if(u){const d=zt(f,X(h.multidimensionalDefinition),X(h.timeExtent));o=o.map(p=>d.map(y=>p[y])),l=l==null?void 0:l.map(p=>d.map(y=>p[y])),f=d.map(p=>f[p])}return{location:s,value:null,dataSeries:f.map((d,p)=>{const y={value:o.map(m=>m[p]),multidimensionalDefinition:d.multidimensionalDefinition.map(m=>new tt({...m,isSlice:!0}))};return l!=null&&l.length&&(y.magdirValue=[l[0][p],l[1][p]]),y}),pyramidLevel:r}}};I([S()],V.prototype,"_rasterTileAlighmentInfo",void 0),I([S({readOnly:!0})],V.prototype,"_isGlobalWrappableSource",null),I([S(Ke)],V.prototype,"url",null),I([S({type:String,json:{write:!0}})],V.prototype,"datasetName",void 0),I([S({type:String,json:{write:!0}})],V.prototype,"datasetFormat",void 0),I([S()],V.prototype,"rasterInfo",void 0),I([S()],V.prototype,"ioConfig",void 0),I([S()],V.prototype,"sourceJSON",void 0),V=I([Q("esri.layers.support.rasterDatasets.BaseRaster")],V);const re=V;let ne=class extends re{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null,this._primaryRasters=null}async open(t){var c;await this.init();const{rasterFunction:e}=this,{rasters:s,rasterIds:i}=e.getPrimaryRasters(),r=s.map(o=>o.rasterInfo?void 0:o.open(t));await Promise.all(r);const n=s.map(({rasterInfo:o})=>o),a=e.bind({rasterInfos:n,rasterIds:i});if(!a.success)throw new $("raster-function:open",`cannot bind the function: ${(c=a.error)!=null?c:""}`);await this.syncJobHandler(),this.set("sourceJSON",s[0].sourceJSON),this.set("rasterInfo",e.rasterInfo)}async syncJobHandler(){const{rasterFunction:t}=this;if(this._primaryRasters=t.getPrimaryRasters(),this.rasterJobHandler)return this.rasterJobHandler.updateRasterFunction(t)}async fetchPixels(t,e,s,i={}){var h,f;const{rasters:r,rasterIds:n}=this._primaryRasters,a=r.map(d=>d.fetchPixels(t,e,s,i)),c=await Promise.all(a),o=c.map(d=>d.pixelBlock);if(o.every(d=>M(d)))return c[0];const l=(f=(h=c.find(d=>C(d.pixelBlock)))==null?void 0:h.extent)!=null?f:t,u=this.rasterJobHandler?await this.rasterJobHandler.process({extent:l,primaryPixelBlocks:o,primaryRasterIds:n}):this.rasterFunction.process({extent:l,primaryPixelBlocks:o,primaryRasterIds:n});return{...c[0],pixelBlock:u}}};I([S({type:String,json:{write:!0}})],ne.prototype,"datasetFormat",void 0),I([S()],ne.prototype,"tileType",void 0),I([S()],ne.prototype,"rasterFunction",void 0),ne=I([Q("esri.layers.support.rasterDatasets.FunctionRaster")],ne);const rt=ne,Ge=Xe.getLogger("esri.layers.mixins.ImageryTileMixin"),_i=t=>{let e=class extends t{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation="nearest",this.multidimensionalDefinition=null,this.multidimensionalSubset=null,this.raster=null,this.rasterFunction=null,this.sourceJSON=null,this.symbolizer=null}get fullExtent(){var i;return(i=this.rasterInfo)==null?void 0:i.extent}get rasterInfo(){var i;return(i=this.raster)==null?void 0:i.rasterInfo}get spatialReference(){var i,r;return(r=(i=this.rasterInfo)==null?void 0:i.spatialReference)!=null?r:H.WGS84}get tileInfo(){var i;return(i=this.rasterInfo)==null?void 0:i.storageInfo.tileInfo}set url(i){this._set("url",Ve(i,Ge))}set renderer(i){this._set("renderer",i),this.updateRenderer()}async convertVectorFieldData(i,r){if(M(i)||!this.rasterInfo)return null;const n=this._rasterJobHandler.instance,a=this.rasterInfo.dataType;return n?n.convertVectorFieldData({pixelBlock:i,dataType:a},r):ei(i,a)}async createFlowMesh(i,r){const n=this._rasterJobHandler.instance;return n?n.createFlowMesh(i,r):ti(i.meshType,i.simulationSettings,i.flowData,C(r.signal)?r.signal:new AbortController().signal)}normalizeRasterFetchOptions(i){var c,o,l;const{multidimensionalInfo:r}=(c=this.rasterInfo)!=null?c:{};if(M(r))return i;let n=i.multidimensionalDefinition||this.multidimensionalDefinition;!M(n)&&n.length||(n=ze(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const a=i.timeExtent||this.timeExtent;if(C(n)&&C(a)&&(C(a.start)||C(a.end))){n=n.map(w=>w.clone());const u=(l=(o=r.variables.find(({name:w})=>w===n[0].variableName))==null?void 0:o.dimensions)==null?void 0:l.find(({name:w})=>w==="StdTime"),h=n.find(({dimensionName:w})=>w==="StdTime");if(!u||!h)return{...i,multidimensionalDefinition:null};const{start:f,end:d}=a,p=M(f)?null:f.getTime(),y=M(d)?null:d.getTime(),m=p!=null?p:y,g=y!=null?y:p;if(C(u.values)){const w=u.values.filter(x=>{if(Array.isArray(x)){if(m===g)return x[0]<=m&&x[1]>=m;const F=x[0]<=m&&x[1]>m||x[0]<g&&x[1]>=g,k=x[0]>=m&&x[1]<=g||x[0]<m&&x[1]>g;return F||k}return m===g?x===m:x>=m&&x<=g});if(w.length){const x=w.sort((F,k)=>{var R,v,T,b;return m===g?((R=F[0])!=null?R:F)-((v=k[0])!=null?v:k):Math.abs(((T=F[1])!=null?T:F)-g)-Math.abs(((b=k[1])!=null?b:k)-g)})[0];h.values=[x]}else n=null}else if(u.hasRegularIntervals&&u.extent){const[w,x]=u.extent;m>x||g<w?n=null:h.values=m===g?[m]:[Math.max(w,m),Math.min(x,g)]}}return C(n)&&Nt(n,this.multidimensionalSubset)?{...i,multidimensionalDefinition:null}:{...i,multidimensionalDefinition:n}}async updateRenderer(){const{loaded:i,symbolizer:r}=this;if(!i||!r||JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const n=this._rasterJobHandler.instance;n&&(r.rendererJSON=Ee(this.renderer.toJSON()),r.bind(),await n.updateSymbolizer(r),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(i,r){var l;const n=i&&i.pixelBlock;if(!(C(n)&&n.pixels&&n.pixels.length>0))return null;let a;await this.updateRenderer();const c=this._rasterJobHandler.instance,o=(l=this.bandIds)!=null?l:[];return a=c?await c.symbolize({...i,simpleStretchParams:r,bandIds:o}):this.symbolizer.symbolize({...i,simpleStretchParams:r,bandIds:o}),a}getTileUrl(i,r,n){var a;return((a=this.raster)==null?void 0:a.datasetFormat)==="RasterTileServer"?`${this.url}/tile/${i}/${r}/${n}`:""}getCompatibleTileInfo(i,r,n=!1){if(!this.loaded||M(r))return null;if(n&&i.equals(this.spatialReference))return this.tileInfo;const a=ft(i);return de.create({size:256,spatialReference:i,origin:a?{x:a.origin[0],y:a.origin[1]}:{x:r.xmin,y:r.ymax}})}getCompatibleFullExtent(i){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(i)||(this._compatibleFullExtent=this.raster.computeExtent(i)),this._compatibleFullExtent):null}async fetchTile(i,r,n,a={}){if(s(this),a.requestAsImageElement){const c=this.getTileUrl(i,r,n);return Ye(c,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:a.signal}).then(o=>o.data)}if(C(this.rasterInfo.multidimensionalInfo)&&(a=this.normalizeRasterFetchOptions(a),M(a.multidimensionalDefinition))){const c=a.tileInfo||this.rasterInfo.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(i,r,n,c),pixelBlock:null}}return await this._initJobHandler(),await this._updateRasterFunction(),this.renderer.type==="raster-shaded-relief"&&(a={...a,buffer:{cols:1,rows:1}}),this.raster.fetchTile(i,r,n,a)}async fetchPixels(i,r,n,a={}){return C(this.rasterInfo.multidimensionalInfo)&&(a=this.normalizeRasterFetchOptions(a),M(a.multidimensionalDefinition))?{extent:i,pixelBlock:null}:(await this._initJobHandler(),await this._updateRasterFunction(),this.raster.fetchPixels(i,r,n,a))}async identify(i,r={}){return s(this),C(this.rasterInfo.multidimensionalInfo)&&!(this.rasterInfo.hasMultidimensionalTranspose&&!!(et(r.multidimensionalDefinition)||r.transposedVariableName||r.timeExtent))&&(r=this.normalizeRasterFetchOptions(r),M(r.multidimensionalDefinition))?{location:i,value:null}:this.raster.identify(i,r)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){var a,c,o;const i=(a=this.rasterInfo)==null?void 0:a.multidimensionalInfo;if(M(i)||((c=this.rasterInfo)==null?void 0:c.dataType)!=="standard-time")return!1;const r=this.multidimensionalDefinition,n=(o=r==null?void 0:r[0])==null?void 0:o.variableName;return i.variables.some(l=>l.name===n&&(!(r!=null&&r[0].dimensionName)||l.dimensions.some(u=>u.name==="StdTime")))}getStandardTimeValue(i){return new Date(24*(i-25569)*3600*1e3).toString()}getMultidimensionalSubsetVariables(i){const r=i!=null?i:this.rasterInfo.multidimensionalInfo;return Ht(this.multidimensionalSubset,r)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=ze(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this._configDefaultRenderer()}_initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const i=new jt;return this._rasterJobHandler.connectionPromise=i.initialize().then(()=>{s(this),this._rasterJobHandler.instance=i,this.raster.rasterJobHandler=i,this.renderer&&this.updateRenderer(),this.raster.datasetFormat==="Function"&&this.raster.syncJobHandler()}).catch(()=>{}),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){var i;if(this.interpolation==null){s(this);const r=At(this.rasterInfo,this.raster.tileType,(i=this.sourceJSON)==null?void 0:i.defaultResamplingMethod);this._set("interpolation",r)}}_configDefaultRenderer(){var n,a,c,o,l;s(this);const i=this.raster.rasterInfo;if(this.bandIds||(this.bandIds=Lt(i)),!this.renderer){const u=Wt(i,{bandIds:this.bandIds,variableName:C(this.multidimensionalDefinition)?(n=this.multidimensionalDefinition[0])==null?void 0:n.variableName:null});this.raster.datasetFormat==="WCSServer"&&u.type==="raster-stretch"&&(((c=(a=i.statistics)==null?void 0:a[0].max)!=null?c:0)>1e24||((l=(o=i.statistics)==null?void 0:o[0].min)!=null?l:0)<-1e24)&&(u.dynamicRangeAdjustment=!0,u.statistics=null,u.stretchType==="none"&&(u.stretchType="min-max")),this.renderer=u}this.symbolizer?(this.symbolizer.rendererJSON=Ee(this.renderer.toJSON()),this.symbolizer.rasterInfo=i):this.symbolizer=new ii({rendererJSON:this.renderer.toJSON(),rasterInfo:i});const r=this.symbolizer.bind();r.success||Ge.warn("imagery-tile-mixin",r.error||"The given renderer is not supported by the layer.")}async _updateRasterFunction(){var n;if(this.type!=="imagery-tile"||JSON.stringify(this.rasterFunction)===JSON.stringify(this._cachedRasterFunctionJson))return;let i=this.raster;(i==null?void 0:i.datasetFormat)==="Function"&&(i=i.rasterFunction.getPrimaryRasters().rasters[0]);const{rasterFunction:r}=this;if(r){const a=st(r.toJSON(),{raster:i}),c=new rt({rasterFunction:a});c.rasterJobHandler=this._rasterJobHandler.instance,await c.open(),this._cachedRasterFunctionJson=(n=this.rasterFunction)==null?void 0:n.toJSON(),this.raster=c}else this.raster=i}};function s(i){if(!i.raster||!i.rasterInfo)throw new $("imagery-tile","no raster")}return I([S()],e.prototype,"_cachedRendererJson",void 0),I([S()],e.prototype,"_cachedRasterFunctionJson",void 0),I([S()],e.prototype,"_compatibleFullExtent",void 0),I([S()],e.prototype,"_rasterJobHandler",void 0),I([S()],e.prototype,"bandIds",void 0),I([S({json:{origins:{service:{read:{source:"copyrightText"}}}}})],e.prototype,"copyright",void 0),I([S({json:{read:!1}})],e.prototype,"fullExtent",null),I([S()],e.prototype,"interpolation",void 0),I([S()],e.prototype,"ioConfig",void 0),I([S({type:[tt]})],e.prototype,"multidimensionalDefinition",void 0),I([S({type:Et,json:{write:!0}})],e.prototype,"multidimensionalSubset",void 0),I([S()],e.prototype,"raster",void 0),I([S({type:Jt})],e.prototype,"rasterFunction",void 0),I([S()],e.prototype,"rasterInfo",null),I([S()],e.prototype,"sourceJSON",void 0),I([S({json:{read:!1}})],e.prototype,"spatialReference",null),I([S({json:{read:!1}})],e.prototype,"tileInfo",null),I([S(Ke)],e.prototype,"url",null),I([S({types:it})],e.prototype,"renderer",null),I([S()],e.prototype,"symbolizer",void 0),e=I([Q("esri.layers.ImageryTileMixin")],e),e};function ki(t){const e=t.fields,s=t.records,i=e.some(l=>l.name.toLowerCase()==="oid")?"OBJECTID":"OID",r=[{name:i,type:"esriFieldTypeOID",alias:"OID"}].concat(e.map(l=>({name:l.name,type:"esriFieldType"+l.typeName,alias:l.name}))),n=r.map(l=>l.name),a=[];let c=0,o=0;return s.forEach(l=>{const u={};for(u[i]=c++,o=1;o<n.length;o++)u[n[o]]=l[o-1];a.push({attributes:u})}),{displayFieldName:"",fields:r,features:a}}class nt{static get supportedVersions(){return[5]}static parse(e){const s=new DataView(e),i=3&s.getUint8(0);if(i!==3)return{header:{version:i},recordSet:null};const r=s.getUint32(4,!0),n=s.getUint16(8,!0),a=s.getUint16(10,!0),c={version:i,recordCount:r,headerByteCount:n,recordByteCount:a};let o=32;const l=[],u=[];let h;if(i===3){for(;s.getUint8(o)!==13;)h=String.fromCharCode(s.getUint8(o+11)).trim(),l.push({name:Je(new Uint8Array(e,o,11)),type:h,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(h)],length:s.getUint8(o+16)}),o+=32;if(o+=1,l.length>0)for(;u.length<r&&e.byteLength-o>a;){const f=[];s.getUint8(o)===32?(o+=1,l.forEach(d=>{if(d.type==="C")f.push(Je(new Uint8Array(e,o,d.length)).trim());else if(d.type==="N")f.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,d.length)).trim(),10));else if(d.type==="F")f.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,d.length)).trim()));else if(d.type==="D"){const p=String.fromCharCode.apply(null,new Uint8Array(e,o,d.length)).trim();f.push(new Date(parseInt(p.substring(0,4),10),parseInt(p.substring(4,6),10)-1,parseInt(p.substring(6,8),10)))}o+=d.length}),u.push(f)):o+=a}}return{header:c,fields:l,records:u,recordSet:ki({fields:l,records:u})}}}const te=new Map;te.set("int16","esriFieldTypeSmallInteger"),te.set("int32","esriFieldTypeInteger"),te.set("int64","esriFieldTypeInteger"),te.set("float32","esriFieldTypeSingle"),te.set("float64","esriFieldTypeDouble"),te.set("text","esriFieldTypeString");const qe=8;let ce=class extends re{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(t){await this.init();const{data:e}=await this.request(this.url+"/conf.json",{signal:t==null?void 0:t.signal});if(!this._validateHeader(e))throw new $("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:s,rasterInfo:i}=this._parseHeader(e);if(i.dataType==="thematic"){const r=await this._fetchAuxiliaryInformation();i.attributeTable=r}this._set("storageInfo",s),this._set("rasterInfo",i),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(t,e,s,i={}){const{transposeInfo:r}=this.rasterInfo.storageInfo,{transposedVariableName:n}=i,a=!(!r||!n),c=a?0:this.rasterInfo.storageInfo.maximumPyramidLevel-t;if(c<0)return null;const o=this._buildCacheFilePath(c,e,s,i.multidimensionalDefinition,n),l=this._getIndexRecordFromBundle(e,s,a),u=await this.request(o,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:i.signal});if(!u)return null;const h=new Uint8Array(u.data),f=this._getTileEndAndContentType(h,l);if(f.recordSize===0)return null;const d=await this.request(o,{range:{from:f.position,to:f.position+f.recordSize},responseType:"array-buffer",signal:i.signal});if(!d)return null;const[p,y]=this._getTileSize(a);return this.decodePixelBlock(d.data,{width:p,height:y,planes:null,pixelType:null,returnInterleaved:a})}_validateHeader(t){const e=["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"];return t&&t.type==="RasterInfo"&&!e.some(s=>!t[s])}_parseHeader(t){var E,j;const e=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][t.pixelType],{bandCount:s,histograms:i,colormap:r,blockWidth:n,blockHeight:a,firstPyramidLevel:c,maximumPyramidLevel:o}=t,l=t.statistics&&t.statistics.map(z=>({min:z.min,max:z.max,avg:z.mean,stddev:z.standardDeviation,median:z.median,mode:z.mode})),u=t.extent.spatialReference,h=(E=t.geodataXform)==null?void 0:E.spatialReference,f=new H((u==null?void 0:u.wkid)||(u==null?void 0:u.wkt)?u:h);let d=new q({xmin:t.extent.xmin,ymin:t.extent.ymin,xmax:t.extent.xmax,ymax:t.extent.ymax,spatialReference:f});const p=new N({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:f}),y=Math.round((d.xmax-d.xmin)/p.x),m=Math.round((d.ymax-d.ymin)/p.y),g=this._parseTransform(t.geodataXform),w=g?d:null;g&&(d=g.forwardTransform(d),p.x=(d.xmax-d.xmin)/y,p.y=(d.ymax-d.ymin)/m);const x=(j=t.properties)!=null?j:{},F=t.format.toLowerCase().replace("cache/",""),k=new N(t.origin.x,t.origin.y,f);let R,v,T,b;if(r&&r.colors)for(R=[],v=0;v<r.colors.length;v++)T=r.colors[v],b=r.values?r.values[v]:v,R.push([b,255&T,T<<16>>>24,T<<8>>>24,T>>>24]);const _=t.LODInfos,P=[];for(v=0;v<_.levels.length;v++)P.push({level:_.levels[v],resolution:_.resolutions[v],scale:96/.0254*_.resolutions[v]});const O=new de({dpi:96,lods:P,format:F,origin:k,size:[n,a],spatialReference:f}),U={recordSize:qe,packetSize:t.packetSize,headerSize:t.packetSize*t.packetSize*qe+64},A=[{maxCol:Math.ceil(y/n)-1,maxRow:Math.ceil(m/a)-1,minCol:0,minRow:0}];let D=2;if(o>0)for(v=0;v<o;v++)A.push({maxCol:Math.ceil(y/D/n)-1,maxRow:Math.ceil(m/D/a)-1,minCol:0,minRow:0}),D*=2;const L=t.mdInfo;let W=null;if(L&&x._yxs){const z=x._yxs;W={packetSize:z.PacketSize,tileSize:[z.TileXSize,z.TileYSize]}}return{storageInfo:U,rasterInfo:new pe({width:y,height:m,pixelType:e,bandCount:s,extent:d,nativeExtent:w,transform:g,spatialReference:f,pixelSize:p,keyProperties:x,statistics:l,histograms:i,multidimensionalInfo:L,colormap:R,storageInfo:new me({blockWidth:n,blockHeight:a,pyramidBlockWidth:n,pyramidBlockHeight:a,origin:k,tileInfo:O,transposeInfo:W,firstPyramidLevel:c,maximumPyramidLevel:o,blockBoundary:A})})}}_parseTransform(t){var s,i;if(!xi(t))throw new $("cloudraster:open","the data contains unsupported geodata transform types");const e=Ii(t);if(e.type==="identity")return null;if(e.type!=="polynomial"||!((s=e.forwardCoefficients)!=null&&s.length)||!((i=e.inverseCoefficients)!=null&&i.length))throw new $("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return e}async _fetchAuxiliaryInformation(t){const e=this.request(this.url+"/conf.vat.json",{signal:t}).then(n=>n.data).catch(()=>null),s=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:t}).then(n=>n.data).catch(()=>null),i=await Promise.all([e,s]);let r;if(i[0]){let n=i[0].fields;const a=i[0].values;if(n&&a){n=n.map(o=>({type:o.name==="OID"?"esriFieldTypeOID":te.get(o.type),name:o.name,alias:o.alias||o.name}));const c=a.map(o=>({attributes:o}));n&&a&&(r={fields:n,features:c})}}return!r&&i[1]&&(r=nt.parse(i[1]).recordSet),Qe.fromJSON(r)}_buildCacheFilePath(t,e,s,i,r){const n=this._getPackageSize(!!r),a=Math.floor(e/n)*n,c=Math.floor(s/n)*n,o="R"+this._toHexString4(a)+"C"+this._toHexString4(c);let l="L";l+=t>=10?t.toString():"0"+t.toString();const{multidimensionalInfo:u}=this.rasterInfo,h=i==null?void 0:i[0];if(M(u)||!h)return`${this.url}/_alllayers/${l}/${o}.bundle`;let f="_yxs";if(!r){f=u.variables.find(y=>y.name===h.variableName).dimensions[0].values.indexOf(h.values[0]).toString(16);const p=4-f.length;for(let y=0;y<p;y++)f="0"+f;f="S"+f}const d=this._getVariableFolderName(r||h.variableName);return`${this.url}/_alllayers/${d}/${f}/${l}/${o}.bundle`}_getPackageSize(t=!1){var s;const{transposeInfo:e}=this.rasterInfo.storageInfo;return t&&C(e)?(s=e.packetSize)!=null?s:0:this.storageInfo.packetSize}_getTileSize(t=!1){const{storageInfo:e}=this.rasterInfo,{transposeInfo:s}=e;return t&&C(s)?s.tileSize:e.tileInfo.size}_getVariableFolderName(t){return(t=t.trim())===""?"_v":t.replace(/[\{|\}\-]/g,"_").replace("\\*","_v")}_getIndexRecordFromBundle(t,e,s=!1){const i=this._getPackageSize(s),r=i*(t%i)+e%i;if(r<0)throw"Invalid level / row / col";return 20+r*this.storageInfo.recordSize+44}_getTileEndAndContentType(t,e){const s=t.subarray(e,e+8);let i,r=0;for(i=0;i<5;i++)r|=(255&s[i])<<8*i;const n=0xffffffffff&r;for(r=0,i=5;i<8;i++)r|=(255&s[i])<<8*(i-5);return{position:n,recordSize:0xffffffffff&r}}_toHexString4(t){let e=t.toString(16);if(e.length!==4){let s=4-e.length;for(;s-- >0;)e="0"+e}return e}};I([S({readOnly:!0})],ce.prototype,"storageInfo",void 0),I([S({type:String,json:{write:!0}})],ce.prototype,"datasetFormat",void 0),ce=I([Q("esri.layers.support.rasterDatasets.CloudRaster")],ce);const Ci=ce;let ue=class extends re{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.data=null}async open(t){var m,g;await this.init();const e=this.data,{pixelBlock:s,statistics:i,histograms:r,name:n,keyProperties:a,nativeExtent:c,transform:o}=this.data,{width:l,height:u,pixelType:h}=s,f=(m=e.extent)!=null?m:new q({xmin:-.5,ymin:.5,xmax:l-.5,ymax:u-.5,spatialReference:new H({wkid:3857})}),d=(g=e.isPseudoSpatialReference)!=null?g:!e.extent,p={x:f.width/l,y:f.height/u},y=new pe({width:l,height:u,pixelType:h,extent:f,nativeExtent:c,transform:o,pixelSize:p,spatialReference:f.spatialReference,bandCount:3,keyProperties:a||{},statistics:i,isPseudoSpatialReference:d,histograms:r});this.createRemoteDatasetStorageInfo(y,512,512),this._set("rasterInfo",y),this.updateTileInfo(),await this._buildInMemoryRaster(s,{width:512,height:512},t),this.datasetName=n,this.url="/InMemory/"+n}fetchRawTile(t,e,s,i={}){const r=this._pixelBlockTiles.get(`${t}/${e}/${s}`);return Promise.resolve(r)}async _buildInMemoryRaster(t,e,s){var l,u;const i=this.rasterInfo.storageInfo.maximumPyramidLevel,r=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:t,tileSize:e,maximumPyramidLevel:i},s):Promise.resolve(si(t,e,i)),n=C(this.rasterInfo.statistics),a=C(this.rasterInfo.histograms),c=n?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:t},s):Promise.resolve(ri(t)),o=await Ze([r,c]);if(!o[0].value&&o[1].value)throw new $("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=o[0].value,n||(this.rasterInfo.statistics=(l=o[1].value)==null?void 0:l.statistics),a||(this.rasterInfo.histograms=(u=o[1].value)==null?void 0:u.histograms)}};I([S({type:String,json:{write:!0}})],ue.prototype,"datasetFormat",void 0),I([S()],ue.prototype,"data",void 0),ue=I([Q("esri.layers.support.rasterDatasets.InMemoryRaster")],ue);const Fi=ue;function oe(t,e){if(!t||!e)return[];let s=e;e.includes("/")?(s=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const i=[];if(e){const n=oe(t,s);for(let a=0;a<n.length;a++)oe(n[a],e).forEach(c=>i.push(c));return i}const r=t.getElementsByTagNameNS("*",s);if(!r||r.length===0)return[];for(let n=0;n<r.length;n++)i.push(r[n]||r.item[n]);return i}function G(t,e){if(!t||!e)return null;let s=e;e.includes("/")?(s=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const i=oe(t,s);return i.length>0?e?G(i[0],e):i[0]:null}function K(t,e=null){const s=e?G(t,e):t;let i;return s?(i=s.textContent||s.nodeValue,i?i.trim():null):null}function Pi(t,e){const s=oe(t,e),i=[];let r;for(let n=0;n<s.length;n++)r=s[n].textContent||s[n].nodeValue,r&&(r=r.trim(),r!==""&&i.push(r));return i}function we(t,e){return Pi(t,e).map(s=>Number(s))}function se(t,e){const s=K(t,e);return Number(s)}function Ce(t,e){var r;const s=(r=t==null?void 0:t.nodeName)==null?void 0:r.toLowerCase(),i=e.toLowerCase();return s.slice(s.lastIndexOf(":")+1)===i}function Ue(t,e){if(!t||!e)return null;const s=[];for(let i=0;i<t.length;i++)s.push(t[i]),s.push(e[i]);return s}function Mi(t){var u;const e=G(t,"GeodataXform"),s=Re(se(e,"SpatialReference/WKID")||K(e,"SpatialReference/WKT"));if(e.getAttribute("xsi:type")!=="typens:PolynomialXform")return{spatialReference:s,transform:null};const i=(u=se(e,"PolynomialOrder"))!=null?u:1,r=we(e,"CoeffX/Double"),n=we(e,"CoeffY/Double"),a=we(e,"InverseCoeffX/Double"),c=we(e,"InverseCoeffY/Double"),o=Ue(r,n),l=Ue(a,c);return{spatialReference:s,transform:o&&l&&o.length&&l.length?new $e({spatialReference:s,polynomialOrder:i,forwardCoefficients:o,inverseCoefficients:l}):null}}function $i(t){var f;const e=se(t,"NoDataValue"),s=G(t,"Histograms/HistItem"),i=se(s,"HistMin"),r=se(s,"HistMax"),n=se(s,"BucketCount"),a=(f=K(s,"HistCounts"))==null?void 0:f.split("|").map(d=>Number(d));let c,o,l,u;oe(t,"Metadata/MDI").forEach(d=>{var y;const p=Number((y=d.textContent)!=null?y:d.nodeValue);switch(d.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":c=p;break;case"STATISTICS_MAXIMUM":o=p;break;case"STATISTICS_MEAN":l=p;break;case"STATISTICS_STDDEV":u=p}});const h=se(t,"Metadata/SourceBandIndex");return{noDataValue:e,histogram:(a==null?void 0:a.length)&&i!=null&&r!=null?{min:i,max:r,size:n||a.length,counts:a}:null,sourceBandIndex:h,statistics:c!=null&&o!=null?{min:c,max:o,avg:l,stddev:u}:null}}function Re(t){if(!t)return null;let e=Number(t);if(!isNaN(e)&&e!==0)return new H({wkid:e});if((t=String(t)).startsWith("COMPD_CS")){if(!t.includes("VERTCS")||!t.includes("GEOGCS")&&!t.startsWith("PROJCS"))return null;const s=t.indexOf("VERTCS"),i=t.indexOf("PROJCS"),r=i>-1?i:t.indexOf("GEOGCS");if(r===-1)return null;const n=t.slice(r,t.lastIndexOf("]",s)+1).trim(),a=t.slice(s,t.lastIndexOf("]")).trim();e=Fe(n);const c=new H(e?{wkid:e}:{wkt:n}),o=Fe(a);return o&&(c.vcsWkid=o),c}return t.startsWith("GEOGCS")||t.startsWith("PROJCS")?(e=Fe(t),new H(e!==0?{wkid:e}:{wkt:t})):null}function Fe(t){var r;const e=t.replace(/\]/g,"[").replace(/\"/g,"").split("[").map(n=>n.trim()).filter(n=>n!==""),s=e[e.length-1].split(","),i=(r=s[0])==null?void 0:r.toLowerCase();if((i==="epsg"||i==="esri")&&t.endsWith('"]]')){const n=Number(s[1]);if(!isNaN(n)&&n!==0)return n}return 0}function Be(t){var i;if(((i=t==null?void 0:t.documentElement.tagName)==null?void 0:i.toLowerCase())!=="pamdataset")return{};const e={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};t.documentElement.childNodes.forEach(r=>{if(r.nodeType===1){if(Ce(r,"SRS")){if(!e.spatialReference){const n=K(r);e.spatialReference=Re(n)}}else if(Ce(r,"Metadata"))if(r.getAttribute("domain")==="xml:ESRI"){const{spatialReference:n,transform:a}=Mi(r);e.transform=a,e.spatialReference||(e.spatialReference=n)}else oe(r,"MDI").forEach(n=>e.metadata[n.getAttribute("key")]=K(n));else if(Ce(r,"PAMRasterBand")){const n=$i(r);n.sourceBandIndex!=null&&e.rasterBands[n.sourceBandIndex]==null?e.rasterBands[n.sourceBandIndex]=n:e.rasterBands.push(n)}}});const s=e.rasterBands;if(s.length){const r=!!s[0].statistics;e.statistics=r?s.map(a=>a.statistics).filter(C):null;const n=!!s[0].histogram;e.histograms=n?s.map(a=>a.histogram).filter(C):null}return e}let Se=class extends re{async open(t){await this.init();const e=await this._fetchData(t);let{spatialReference:s,statistics:i,histograms:r,transform:n}=await this._fetchAuxiliaryData(t);const a=!s;a&&(s=new H({wkid:3857})),(r==null?void 0:r.length)&&i==null&&(i=Me(r));const{width:c,height:o}=e;let l=new q({xmin:-.5,ymin:.5-o,xmax:c-.5,ymax:.5,spatialReference:s});const u=n?n.forwardTransform(l):l;let h=!0;if(n){const d=n.forwardCoefficients;h=d&&d[1]===0&&d[2]===0,h&&(n=null,l=u)}const f=new Fi({data:{extent:u,nativeExtent:l,transform:n,pixelBlock:e,statistics:i,histograms:r,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:a}});await f.open(),f.data=null,this._set("rasterInfo",f.rasterInfo),this._inMemoryRaster=f}fetchRawTile(t,e,s,i={}){return this._inMemoryRaster.fetchRawTile(t,e,s,i)}async _fetchData(t){const{data:e}=await this.request(this.url,{responseType:"array-buffer",signal:t==null?void 0:t.signal}),s=ni(e).toUpperCase();if(s!=="JPG"&&s!=="PNG"&&s!=="GIF"&&s!=="BMP")throw new $("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",s);const i=s.toLowerCase(),r=i==="gif"||i==="bmp"||!dt("ios");return await this.decodePixelBlock(e,{format:i,useCanvas:r,hasNoZlibMask:!0})}async _fetchAuxiliaryData(t){var l,u;const e=X(t==null?void 0:t.signal),s=(l=this.ioConfig.skipExtensions)!=null?l:[],i=s.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:e}),r=this.datasetFormat,n=r==="JPG"?"jgw":r==="PNG"?"pgw":r==="BMP"?"bpw":null,a=n&&s.includes(n)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+n,{responseType:"text",signal:e}),c=await Ze([i,a]);if(e!=null&&e.aborted)throw mt();const o=Be((u=c[0].value)==null?void 0:u.data);if(!o.transform){const h=c[1].value?c[1].value.data.split(`
`).slice(0,6).map(f=>Number(f)):null;o.transform=(h==null?void 0:h.length)===6?new $e({forwardCoefficients:[h[4],h[5],h[0],-h[1],h[2],-h[3]]}):null}return o}};I([S({type:String,json:{write:!0}})],Se.prototype,"datasetFormat",void 0),Se=I([Q("esri.layers.support.rasterDatasets.ImageAuxRaster")],Se);const be=Se;let he=class extends re{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}async open(t){var k,R,v,T;await this.init();const e=t&&t.signal,s=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:e});s.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const i=s.data;if(this.sourceJSON=i,!i)throw new $("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!i.tileInfo)throw new $("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();const r=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=i.cacheType,this.tileType==null&&(r.includes(i.tileInfo.format.toLowerCase())?this.tileType="Map":i.tileInfo.format.toLowerCase()==="lerc"?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=(R=(k=i.name)==null?void 0:k.slice(i.name.indexOf("/")+1))!=null?R:"";const n=await this._fetchRasterInfo({signal:e});if(M(n))throw new $("image-server-raster:open","cannot initialize image service");const a=this.tileType==="Map"?bi(i.tileInfo,i):de.fromJSON(i.tileInfo);pt(a);const[c,o]=this._computeMinMaxLOD(n,a),{extent:l,pixelSize:u}=n,h=.5/n.width*u.x,f=Math.max(u.x,u.y),{lods:d}=a;(this.tileType!=="Map"&&i.maxScale!==0||Math.abs(u.x-u.y)>h||!d.some(b=>Math.abs(b.resolution-f)<h))&&(u.x=u.y=c.resolution,n.width=Math.ceil((l.xmax-l.xmin)/u.x-.1),n.height=Math.ceil((l.ymax-l.ymin)/u.y-.1));const p=c.level-o.level,[y,m]=a.size,g=[];d.forEach(b=>{b.level>=o.level&&b.level<=c.level&&g.push({x:b.resolution,y:b.resolution})}),g.sort((b,_)=>b.x-_.x);const w=this.computeBlockBoundary(l,y,m,a.origin,g,p),x=g.length>1?g.slice(1):null;let F;if(i.transposeInfo&&(F={tileSize:[i.transposeInfo.rows,i.transposeInfo.cols],packetSize:(T=(v=n.keyProperties)==null?void 0:v._yxs.PacketSize)!=null?T:0}),n.storageInfo=new me({blockWidth:a.size[0],blockHeight:a.size[1],pyramidBlockWidth:a.size[0],pyramidBlockHeight:a.size[1],pyramidResolutions:x,compression:a.format,origin:a.origin,firstPyramidLevel:1,maximumPyramidLevel:p,tileInfo:a,transposeInfo:F,blockBoundary:w}),this._fixGCSShift(n),this._set("rasterInfo",n),i.capabilities.toLowerCase().includes("tilemap")){const b={tileInfo:n.storageInfo.tileInfo,parsedUrl:yt(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new Si({layer:b})}}async fetchRawTile(t,e,s,i={}){const{storageInfo:r,extent:n}=this.rasterInfo,{transposeInfo:a}=r,c=C(a)&&!!i.transposedVariableName;if(this._slices&&!c&&i.sliceId==null)return null;const o=c?0:r.maximumPyramidLevel-t+this._levelOffset,l=`${this.url}/tile/${o}/${e}/${s}`,u=this._slices?c?{variable:i.transposedVariableName}:{sliceId:i.sliceId||0}:null,{data:h}=await this.request(l,{query:u,responseType:"array-buffer",signal:i.signal});if(!h)return null;const f=c?a.tileSize:r.tileInfo.size,d=await this.decodePixelBlock(h,{width:f[0],height:f[1],planes:null,pixelType:null,isPoint:this.tileType==="Elevation",returnInterleaved:c}),p=r.blockBoundary[t];if(r.compression!=="jpg"||s>p.minCol&&s<p.maxCol&&e>p.minRow&&e<p.maxRow)return d;const{origin:y,blockWidth:m,blockHeight:g}=r,{x:w,y:x}=this.getPyramidPixelSize(t),F=Math.round((n.xmin-y.x)/w)%m,k=Math.round((n.xmax-y.x)/w)%m||m,R=Math.round((y.y-n.ymax)/x)%g,v=Math.round((y.y-n.ymin)/x)%g||g,T=s===p.minCol?F:0,b=e===p.minRow?R:0,_=s===p.maxCol?k:m,P=e===p.maxRow?v:g;return ai(d,{x:T,y:b},{width:_-T,height:P-b}),d}getSliceIndex(t){if(!this._slices||M(t)||t.length===0)return null;const e=t;for(let s=0;s<this._slices.length;s++){const i=this._slices[s].multidimensionalDefinition;if(i.length===e.length&&!i.some(r=>{const n=e.find(a=>r.variableName===a.variableName&&a.dimensionName===r.dimensionName);return n?(Array.isArray(r.values[0])?`${r.values[0][0]}-${r.values[0][1]}`:r.values[0])!==(Array.isArray(n.values[0])?`${n.values[0][0]}-${n.values[0][1]}`:n.values[0]):!0}))return s}return null}async fetchVariableStatisticsHistograms(t,e){const s=this.request(this.url+"/statistics",{query:{variable:t,f:"json"},signal:e}).then(n=>{var a;return(a=n.data)==null?void 0:a.statistics}),i=this.request(this.url+"/histograms",{query:{variable:t,f:"json"},signal:e}).then(n=>{var a;return(a=n.data)==null?void 0:a.histograms}),r=await Promise.all([s,i]);return r[0]&&r[0].forEach(n=>{n.avg=n.mean,n.stddev=n.standardDeviation}),{statistics:r[0]||null,histograms:r[1]||null}}async computeBestPyramidLevelForLocation(t,e={}){if(!this._tilemapCache)return 0;let s=this.identifyPixelLocation(t,0,X(e.datumTransformation));if(s===null)return null;let i=0;const{maximumPyramidLevel:r}=this.rasterInfo.storageInfo;let n=r-i+this._levelOffset;const a=s.srcLocation;for(;n>=0;){try{if(await this._tilemapCache.fetchAvailability(n,s.row,s.col,e)==="available")break}catch{}if(n--,i++,s=this.identifyPixelLocation(a,i,X(e.datumTransformation)),s===null)return null}return n===-1||s==null?null:i}async _fetchRasterInfo(t){const e=this.sourceJSON;if(this.tileType==="Map"){const a=e.fullExtent||e.extent,c=Math.ceil((a.xmax-a.xmin)/e.pixelSizeX-.1),o=Math.ceil((a.ymax-a.ymin)/e.pixelSizeY-.1),l=H.fromJSON(e.spatialReference||a.spatialReference),u=new N({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:l});return new pe({width:c,height:o,bandCount:3,extent:q.fromJSON(a),spatialReference:l,pixelSize:u,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:s}=t,i=Gt(this.url,this.sourceJSON,{signal:s,query:this.ioConfig.customFetchParameters}),r=e.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:s}).then(a=>a.data&&a.data.slices).catch(()=>null):null,n=await Promise.all([i,r]);return this._slices=n[1],n[0]}_fixScaleInServiceInfo(){const{sourceJSON:t}=this;t.minScale&&t.minScale<0&&(t.minScale=0),t.maxScale&&t.maxScale<0&&(t.maxScale=0)}_fixGCSShift(t){const{extent:e,spatialReference:s}=t;e.xmin>-1&&e.xmax>181&&(s==null?void 0:s.wkid)&&s.isGeographic&&(t.nativeExtent=t.extent,t.transform=new wi,t.extent=t.transform.forwardTransform(e))}_computeMinMaxLOD(t,e){var f,d,p;const{pixelSize:s}=t,i=.5/t.width*s.x,{lods:r}=e,n=e.lodAt(Math.max.apply(null,r.map(y=>y.level))),a=e.lodAt(Math.min.apply(null,r.map(y=>y.level))),{tileType:c}=this;if(c==="Map")return this._levelOffset=r[0].level,[n,a];if(c==="Raster")return[(f=r.find(y=>y.resolution===s.x))!=null?f:n,a];const{minScale:o,maxScale:l}=this.sourceJSON;let u=n;l>0&&(u=r.find(y=>Math.abs(y.scale-l)<i),u||(u=(d=r.filter(y=>y.scale>l).sort((y,m)=>y.scale>m.scale?1:-1)[0])!=null?d:n));let h=a;return o>0&&(h=(p=r.find(y=>Math.abs(y.scale-o)<i))!=null?p:a,this._levelOffset=h.level-a.level),[u,h]}};I([S({type:String,json:{write:!0}})],he.prototype,"datasetFormat",void 0),I([S()],he.prototype,"tileType",void 0),he=I([Q("esri.layers.support.rasterDatasets.ImageServerRaster")],he);const Bi=he,Y=new Map;Y.set("Int8","s8"),Y.set("UInt8","u8"),Y.set("Int16","s16"),Y.set("UInt16","u16"),Y.set("Int32","s32"),Y.set("UInt32","u32"),Y.set("Float32","f32"),Y.set("Float64","f32"),Y.set("Double64","f32");const Z=new Map;Z.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),Z.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),Z.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),Z.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let ae=class extends re{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(t){var y,m;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const e=t?X(t.signal):null,s=await this.request(this.url,{responseType:"xml",signal:e}),{rasterInfo:i,files:r}=this._parseHeader(s.data);if(((y=this.ioConfig.skipExtensions)==null?void 0:y.indexOf("aux.xml"))===-1){const g=await this._fetchAuxiliaryData(t);g!=null&&(i.statistics=(m=g.statistics)!=null?m:i.statistics,i.histograms=g.histograms,g.histograms&&M(i.statistics)&&(i.statistics=Me(g.histograms)))}this._set("rasterInfo",i),this._files=r;const n=await this.request(r.index,{responseType:"array-buffer",signal:e});this._storageIndex=this._parseIndex(n.data);const{blockWidth:a,blockHeight:c}=this.rasterInfo.storageInfo,o=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:l,height:u}=this.rasterInfo,h=[],f=this._getBandSegmentCount();let d=0,p=-1;for(;d<this._storageIndex.length;){p++;const g=Math.ceil(l/a/o**p)-1,w=Math.ceil(u/c/o**p)-1;d+=(g+1)*(w+1)*f*4,h.push({maxRow:w,maxCol:g,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=h,p>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=p),this.updateTileInfo()}async fetchRawTile(t,e,s,i={}){const{blockWidth:r,blockHeight:n,blockBoundary:a}=this.rasterInfo.storageInfo,c=a[t];if(!c||c.maxRow<e||c.maxCol<s||c.minRow>e||c.minCol>s)return null;const{bandCount:o,pixelType:l}=this.rasterInfo,{ranges:u,actualTileWidth:h,actualTileHeight:f}=this._getTileLocation(t,e,s);if(!u||u.length===0)return null;if(u[0].from===0&&u[0].to===0){const b=new Uint8Array(r*n);return new oi({width:r,height:n,pixels:null,mask:b,validPixelCount:0})}const{bandIds:d}=this.ioConfig,p=this._getBandSegmentCount(),y=[];let m=0;for(m=0;m<p;m++)(!d||d.indexOf[m]>-1)&&y.push(this.request(this._files.data,{range:{from:u[m].from,to:u[m].to},responseType:"array-buffer",signal:i.signal}));const g=await Promise.all(y),w=g.map(b=>b.data.byteLength).reduce((b,_)=>b+_),x=new Uint8Array(w);let F=0;for(m=0;m<p;m++)x.set(new Uint8Array(g[m].data),F),F+=g[m].data.byteLength;const k=Z.get(this.rasterInfo.storageInfo.compression).decoderFormat,R=await this.decodePixelBlock(x.buffer,{width:r,height:n,format:k,planes:(d==null?void 0:d.length)||o,pixelType:l});if(C(this.rasterInfo.noDataValue)&&k!=="lerc"&&!R.mask){const b=this.rasterInfo.noDataValue[0];if(b!=null){const _=R.width*R.height,P=new Uint8Array(_);if(Math.abs(b)>1e24)for(m=0;m<_;m++)Math.abs((R.pixels[0][m]-b)/b)>1e-6&&(P[m]=1);else for(m=0;m<_;m++)R.pixels[0][m]!==b&&(P[m]=1);R.mask=P}}let v=0,T=0;if(h!==r||f!==n){let b=R.mask;if(b)for(m=0;m<n;m++)if(T=m*r,m<f)for(v=h;v<r;v++)b[T+v]=0;else for(v=0;v<r;v++)b[T+v]=0;else for(b=new Uint8Array(r*n),R.mask=b,m=0;m<f;m++)for(T=m*r,v=0;v<h;v++)b[T+v]=1}return R}_parseIndex(t){if(t.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let e,s,i,r,n,a;if(li){for(s=new Uint8Array(t),r=new ArrayBuffer(t.byteLength),i=new Uint8Array(r),n=0;n<t.byteLength/4;n++)for(a=0;a<4;a++)i[4*n+a]=s[4*n+3-a];e=new Uint32Array(r)}else e=new Uint32Array(t);return e}_getBandSegmentCount(){return Z.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(t,e,s){const{blockWidth:i,blockHeight:r,pyramidScalingFactor:n}=this.rasterInfo.storageInfo,{width:a,height:c}=this.rasterInfo,o=this._getBandSegmentCount();let l,u,h,f=0,d=0;for(h=0;h<t;h++)d=n**h,l=Math.ceil(a/i/d),u=Math.ceil(c/r/d),f+=l*u;d=n**t,l=Math.ceil(a/i/d),u=Math.ceil(c/r/d),f+=e*l+s,f*=4*o;const p=this._storageIndex.subarray(f,f+4*o);let y=0,m=0;const g=[];for(let w=0;w<o;w++)y=p[4*w+0]*2**32+p[4*w+1],m=y+p[4*w+2]*2**32+p[4*w+3],g.push({from:y,to:m});return{ranges:g,actualTileWidth:s<l-1?i:Math.ceil(a/d)-i*(l-1),actualTileHeight:e<u-1?r:Math.ceil(c/d)-r*(u-1)}}_parseHeader(t){var P;const e=G(t,"MRF_META/Raster");if(!e)throw new $("mrf:open","not a valid MRF format");const s=G(e,"Size"),i=parseInt(s.getAttribute("x"),10),r=parseInt(s.getAttribute("y"),10),n=parseInt(s.getAttribute("c"),10),a=(K(e,"Compression")||"none").toLowerCase();if(!Z.has(a))throw new $("mrf:open","currently does not support compression "+a);const c=K(e,"DataType")||"UInt8",o=Y.get(c);if(o==null)throw new $("mrf:open","currently does not support pixel type "+c);const l=G(e,"PageSize"),u=parseInt(l.getAttribute("x"),10),h=parseInt(l.getAttribute("y"),10),f=G(e,"DataValues");let d,p;if(f&&(p=f.getAttribute("NoData"),p!=null&&(d=p.trim().split(" ").map(O=>parseFloat(O)))),G(t,"MRF_META/CachedSource"))throw new $("mrf:open","currently does not support MRF referencing other data files");const y=G(t,"MRF_META/GeoTags"),m=G(y,"BoundingBox");let g,w=!1;if(m!=null){const O=parseFloat(m.getAttribute("minx")),U=parseFloat(m.getAttribute("miny")),A=parseFloat(m.getAttribute("maxx")),D=parseFloat(m.getAttribute("maxy")),L=K(y,"Projection")||"";let W=H.WGS84;if(L!=="LOCAL_CS[]")if(L.toLowerCase().startsWith("epsg:")){const E=Number(L.slice(5));isNaN(E)||E===0||(W=new H({wkid:E}))}else W=(P=Re(L))!=null?P:H.WGS84;else w=!0,W=new H({wkid:3857});g=new q(O,U,A,D),g.spatialReference=W}else w=!0,g=new q({xmin:-.5,ymin:.5-r,xmax:i-.5,ymax:.5,spatialReference:new H({wkid:3857})});const x=G(t,"MRF_META/Rsets"),F=parseInt(x&&x.getAttribute("scale")||"2",10),k=g.spatialReference,R=new me({origin:new N({x:g.xmin,y:g.ymax,spatialReference:k}),blockWidth:u,blockHeight:h,pyramidBlockWidth:u,pyramidBlockHeight:h,compression:a,pyramidScalingFactor:F}),v=new N({x:g.width/i,y:g.height/r,spatialReference:k}),T=new pe({width:i,height:r,extent:g,isPseudoSpatialReference:w,spatialReference:k,bandCount:n,pixelType:o,pixelSize:v,noDataValue:d,storageInfo:R}),b=K(t,"datafile"),_=K(t,"IndexFile");return{rasterInfo:T,files:{mrf:this.url,index:_||this.url.replace(".mrf",".idx"),data:b||this.url.replace(".mrf",Z.get(a).blobExtension)}}}async _fetchAuxiliaryData(t){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:t==null?void 0:t.signal});return Be(e)}catch{return null}}};I([S()],ae.prototype,"_files",void 0),I([S()],ae.prototype,"_storageIndex",void 0),I([S({type:String,json:{write:!0}})],ae.prototype,"datasetFormat",void 0),ae=I([Q("esri.layers.support.rasterIO.MRFRaster")],ae);const Oi=ae,Pe=(t,e)=>{var s;return(s=t.get(e))==null?void 0:s.values},le=(t,e)=>{var s,i;return(i=(s=t.get(e))==null?void 0:s.values)==null?void 0:i[0]};let ie=class extends re{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(t){await this.init();const e=t?X(t.signal):null,{data:s}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:e});if(!s)throw new $("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:i,firstIFDPos:r,isBigTiff:n}=ci(s),a=[];await this._readIFDs(a,s,i,r,0,n?8:4,e);const{imageInfo:c,rasterInfo:o}=this._parseIFDs(a);if(this._headerInfo={littleEndian:i,isBigTiff:n,ifds:a,...c},this._set("rasterInfo",o),!c.isSupported)throw new $("tiffraster:open","this tiff is not supported: "+c.message);if(!c.tileWidth)throw new $("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");const{skipExtensions:l=[]}=this.ioConfig;if(!l.includes("aux.xml")){const u=await this._fetchAuxiliaryMetaData(t);u!=null&&this._processPAMInfo(u,o)}l.includes("vat.dbf")||o.bandCount!==1||o.pixelType!=="u8"||(o.attributeTable=await this._fetchAuxiliaryTable(t),C(o.attributeTable)&&(o.keyProperties.DataType="thematic")),this.updateTileInfo()}async fetchRawTile(t,e,s,i={}){var k;if(!((k=this._headerInfo)!=null&&k.isSupported)||this.isBlockOutside(t,e,s))return null;const r=this._getTileLocation(t,e,s);if(!r)return null;const{ranges:n,actualTileWidth:a,actualTileHeight:c,ifd:o}=r,l=n.map(R=>this.request(this.url,{range:R,responseType:"array-buffer",signal:i.signal})),u=await Promise.all(l),h=u.map(R=>R.data.byteLength).reduce((R,v)=>R+v),f=u.length===1?u[0].data:new ArrayBuffer(h),d=[0],p=[0];if(u.length>1){const R=new Uint8Array(f);for(let v=0,T=0;v<u.length;v++){const b=u[v].data;R.set(new Uint8Array(b),T),d[v]=T,T+=b.byteLength,p[v]=b.byteLength}}const{blockWidth:y,blockHeight:m}=this.getBlockWidthHeight(t),g=await this.decodePixelBlock(f,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:o,offsets:d,sizes:p},width:y,height:m,planes:null,pixelType:null});let w,x,F;if(a!==y||c!==m){let R=g.mask;if(R)for(w=0;w<m;w++)if(F=w*y,w<c)for(x=a;x<y;x++)R[F+x]=0;else for(x=0;x<y;x++)R[F+x]=0;else for(R=new Uint8Array(y*m),g.mask=R,w=0;w<c;w++)for(F=w*y,x=0;x<a;x++)R[F+x]=1}return g}_parseIFDs(t){var O,U;const e=ui(t),{width:s,height:i,tileWidth:r,tileHeight:n,planes:a,pixelType:c,compression:o,firstPyramidLevel:l,maximumPyramidLevel:u,pyramidBlockWidth:h,pyramidBlockHeight:f,tileBoundary:d,affine:p,metadata:y}=e,m=((O=e.extent.spatialReference)==null?void 0:O.wkt)||((U=e.extent.spatialReference)==null?void 0:U.wkid);let g=Re(m),w=!1;g==null&&(w=!0,g=new H({wkid:3857}));const x=new q({...e.extent,spatialReference:g}),F=new N(x?{x:x.xmin,y:x.ymax,spatialReference:g}:{x:0,y:0}),k=new me({blockWidth:r,blockHeight:n,pyramidBlockWidth:h,pyramidBlockHeight:f,compression:o,origin:F,firstPyramidLevel:l,maximumPyramidLevel:u,blockBoundary:d}),R=new N({x:(x.xmax-x.xmin)/s,y:(x.ymax-x.ymin)/i,spatialReference:g}),v=y?{BandProperties:y.bandProperties,DataType:y.dataType}:{};let T=null;const b=le(t[0],"PHOTOMETRICINTERPRETATION"),_=Pe(t[0],"COLORMAP");if(b===3&&(_==null?void 0:_.length)>3&&_.length%3==0){T=[];const A=_.length/3;for(let D=0;D<A;D++)T.push([D,_[D]>>>8,_[D+A]>>>8,_[D+2*A]>>>8])}const P=new pe({width:s,height:i,bandCount:a,pixelType:c,pixelSize:R,storageInfo:k,spatialReference:g,isPseudoSpatialReference:w,keyProperties:v,extent:x,colormap:T,statistics:y?y.statistics:null});return p!=null&&p.length&&(P.nativeExtent=new q({xmin:-.5,ymin:.5-i,xmax:s-.5,ymax:.5,spatialReference:g}),P.transform=new $e({polynomialOrder:1,forwardCoefficients:[p[2]+p[0]/2,p[5]-p[3]/2,p[0],p[3],-p[1],-p[4]]}),P.extent=P.transform.forwardTransform(P.nativeExtent),P.pixelSize=new N({x:(x.xmax-x.xmin)/s,y:(x.ymax-x.ymin)/i,spatialReference:g}),k.origin.x=-.5,k.origin.y=.5),{imageInfo:e,rasterInfo:P}}_processPAMInfo(t,e){var s;if(e.statistics=(s=t.statistics)!=null?s:e.statistics,e.histograms=t.histograms,t.histograms&&M(e.statistics)&&(e.statistics=Me(t.histograms)),t.transform&&M(e.transform)){e.transform=t.transform,e.nativeExtent=e.extent;const i=e.transform.forwardTransform(e.nativeExtent);e.pixelSize=new N({x:(i.xmax-i.xmin)/e.width,y:(i.ymax-i.ymin)/e.height,spatialReference:e.spatialReference}),e.extent=i}e.spatialReference||(e.spatialReference=t.spatialReference)}async _readIFDs(t,e,s,i,r,n=4,a){if(!i)return null;(i>=e.byteLength||i<0)&&(e=(await this.request(this.url,{range:{from:i+r,to:i+r+this._bufferSize},responseType:"array-buffer",signal:a})).data,r=i+r,i=0);const c=await this._readIFD(e,s,i,r,ge.TIFF_TAGS,n,a);if(t.push(c.ifd),!c.nextIFD)return null;await this._readIFDs(t,e,s,c.nextIFD-r,r,n,a)}async _readIFD(t,e,s,i,r=ge.TIFF_TAGS,n=4,a){var o,l;if(!t)return null;const c=hi(t,e,s,i,r,n);if(c.success){const u=[];if((o=c.ifd)==null||o.forEach(h=>{h.values||u.push(h)}),u.length>0){const h=u.map(d=>d.offlineOffsetSize).filter(C),f=Math.min.apply(null,h.map(d=>d[0]));if(Math.min.apply(null,h.map(d=>d[0]+d[1]))-f<=this._bufferSize){const{data:d}=await this.request(this.url,{range:{from:f,to:f+this._bufferSize},responseType:"array-buffer",signal:a});t=d,i=f,u.forEach(p=>fi(t,e,p,i))}}if((l=c.ifd)!=null&&l.has("GEOKEYDIRECTORY")){const h=c.ifd.get("GEOKEYDIRECTORY"),f=h==null?void 0:h.values;if(f&&f.length>4){const d=f[0]+"."+f[1]+"."+f[2],p=await this._readIFD(t,e,h.valueOffset+6-i,i,ge.GEO_KEYS,2,a);h.data=p.ifd,h.data&&h.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[d]})}}return c}if(c.requiredBufferSize&&c.requiredBufferSize!==t.byteLength)return(t=(await this.request(this.url,{range:{from:i,to:i+c.requiredBufferSize+4},responseType:"array-buffer",signal:a})).data).byteLength<c.requiredBufferSize?null:this._readIFD(t,e,0,i,ge.TIFF_TAGS,4,a)}_getTileLocation(t,e,s){var v;const{firstPyramidLevel:i,blockBoundary:r}=this.rasterInfo.storageInfo,n=t===0?0:t-(i-1),a=(v=this._headerInfo)==null?void 0:v.ifds[n];if(!a)return null;const c=di(a,this._headerInfo),o=Pe(a,"TILEOFFSETS");if(o===void 0)return null;const l=Pe(a,"TILEBYTECOUNTS"),{minRow:u,minCol:h,maxRow:f,maxCol:d}=r[n];if(e>f||s>d||e<u||s<h)return null;const p=le(a,"IMAGEWIDTH"),y=le(a,"IMAGELENGTH"),m=le(a,"TILEWIDTH"),g=le(a,"TILELENGTH"),w=c?this.rasterInfo.bandCount:1,x=w*e*(d+1)+s,F=[{from:o[x],to:o[x+w-1]+l[x+w-1]-1}];if(c){let T=!0;for(let b=0;b<w;b++)if(o[x+b]+l[x+b]!==o[x+b+1]){T=!1;break}if(!T)for(let b=0;b<w;b++)F[b]={from:o[x+b],to:o[x+b]+l[x+b]-1}}const k=o[x],R=l[x];return k==null||R==null?null:{ranges:F,ifd:a,actualTileWidth:s===d&&p%m||m,actualTileHeight:e===f&&y%g||g}}async _fetchAuxiliaryMetaData(t){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:t==null?void 0:t.signal});return Be(e)}catch{return null}}async _fetchAuxiliaryTable(t){try{const{data:e}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:t==null?void 0:t.signal}),s=nt.parse(e);return s!=null&&s.recordSet?Qe.fromJSON(s.recordSet):null}catch{return null}}};I([S()],ie.prototype,"_files",void 0),I([S()],ie.prototype,"_headerInfo",void 0),I([S()],ie.prototype,"_bufferSize",void 0),I([S({type:String,json:{write:!0}})],ie.prototype,"datasetFormat",void 0),ie=I([Q("esri.layers.support.rasterDatasets.TIFFRaster")],ie);const Di=ie,J=new Map;J.set("CRF",{desc:"Cloud Raster Format",constructor:Ci}),J.set("MRF",{desc:"Meta Raster Format",constructor:Oi}),J.set("TIFF",{desc:"GeoTIFF",constructor:Di}),J.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Bi}),J.set("JPG",{desc:"JPG Raster Format",constructor:be}),J.set("PNG",{desc:"PNG Raster Format",constructor:be}),J.set("GIF",{desc:"GIF Raster Format",constructor:be}),J.set("BMP",{desc:"BMP Raster Format",constructor:be});class zi{static get supportedFormats(){const e=new Set;return J.forEach((s,i)=>e.add(i)),e}static async open(e){const{url:s,ioConfig:i,sourceJSON:r}=e;let n=e.datasetFormat;n==null&&s.lastIndexOf(".")&&(n=s.slice(s.lastIndexOf(".")+1).toUpperCase()),n==="OVR"||n==="TIF"?n="TIFF":n!=="JPG"&&n!=="JPEG"&&n!=="JFIF"||(n="JPG"),s.toLowerCase().includes("/imageserver")&&!s.toLowerCase().includes("/wcsserver")&&(n="RasterTileServer");const a={url:s,sourceJSON:r,datasetFormat:n,ioConfig:i!=null?i:{bandIds:null,sampling:null}};let c,o;if(n&&this.supportedFormats.has(n)){if(n==="CRF"&&!(i!=null&&i.enableCRF))throw new $("rasterfactory:open",`cannot open raster: ${s}`);return c=J.get(n).constructor,o=new c(a),await o.open({signal:e.signal}),o}if(n)throw new $("rasterfactory:open","not a supported format "+n);const l=Array.from(J.keys());let u=0;const h=()=>(n=l[u++],n&&(n!=="CRF"||(i==null?void 0:i.enableCRF))?(c=J.get(n).constructor,o=new c(a),o.open({signal:e.signal}).then(()=>o).catch(()=>h())):null);return h()}static register(e,s,i){J.has(e.toUpperCase())||J.set(e.toUpperCase(),{desc:s,constructor:i})}}let B=class extends gt(xt(It(wt(bt(_i(St(vt(Rt(Bt))))))))){constructor(...t){super(...t),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(t,e){return typeof t=="string"?{url:t,...e}:t}load(t){const e=C(t)?t.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},t).catch(Tt).then(()=>this._openRaster(e))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var c;let t=[new fe({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const{rasterInfo:e}=this,{attributeTable:s}=e,i=C(s)?s.fields:null,r="Raster.";if(i){const o=i.filter(l=>l.type!=="oid"&&l.name.toLowerCase()!=="value").map(l=>{const u=l.clone();return u.name=r+l.name,u});t=t.concat(o)}const{dataType:n,multidimensionalInfo:a}=e;if((n==="vector-magdir"||n==="vector-uv")&&C(a)){const o=(c=a.variables[0].unit)==null?void 0:c.trim(),l="Magnitude"+(o?` (${o})`:"");t.push(new fe({name:"Raster.Magnitude",alias:l,domain:null,editable:!1,type:"double"})),t.push(new fe({name:"Raster.Direction",alias:"Direction (\xB0)",domain:null,editable:!1,type:"double"}))}return t}set renderer(t){this._set("renderer",t),this.updateRenderer()}readRenderer(t,e,s){const i=e&&e.layerDefinition&&e.layerDefinition.drawingInfo&&e.layerDefinition.drawingInfo.renderer,r=qt(i,s)||void 0;if(r!=null)return r}createPopupTemplate(t){return _t({fields:this.rasterFields,title:this.title},t)}write(t,e){const{raster:s}=this;if(this.loaded?s.datasetFormat==="RasterTileServer"&&(s.tileType==="Raster"||s.tileType==="Map"):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(t,e);if(e&&e.messages){const i=`${e.origin}/${e.layerContainerType||"operational-layers"}`;e.messages.push(new $("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${i}'`,{layer:this}))}return null}async _openRaster(t){if(this.raster)this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url;else{const s=await zi.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:t});if(this.rasterFunction){const i=st(this.rasterFunction.toJSON(),{raster:s}),r=new rt({rasterFunction:i});await r.open(),this.raster=r}else this.raster=s}const{rasterInfo:e}=this.raster;if(!e)throw new $("imagery-tile-layer:load","cannot load resources on "+this.url);if(this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,this.sourceJSON!=null){const s=this.raster.tileType==="Map"&&this.sourceJSON.minLOD!=null&&this.sourceJSON.maxLOD!=null?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(s,{origin:"service"})}this.title==null&&(this.title=this.raster.datasetName),this.raster.tileType==="Map"&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles(kt(()=>this.customParameters,s=>{this.raster.ioConfig.customFetchParameters=s}))}};I([S({type:[Ct],json:{write:{overridePolicy(){var t;return{enabled:!this.loaded||this.raster.tileType==="Raster"||((t=this.bandIds)==null?void 0:t.join(","))!=="0,1,2"}}}}})],B.prototype,"bandIds",void 0),I([S({json:{write:{overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"||this.interpolation!=="bilinear"}}}}}),Ft(Ut)],B.prototype,"interpolation",void 0),I([S({json:{write:!0}})],B.prototype,"multidimensionalDefinition",void 0),I([S(Pt)],B.prototype,"legendEnabled",void 0),I([S({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],B.prototype,"isReference",void 0),I([S({type:["show","hide"]})],B.prototype,"listMode",void 0),I([S({json:{read:!0,write:!0}})],B.prototype,"blendMode",void 0),I([S()],B.prototype,"sourceJSON",void 0),I([S({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],B.prototype,"version",void 0),I([S()],B.prototype,"title",void 0),I([S({readOnly:!0,json:{read:!1}})],B.prototype,"type",void 0),I([S({type:["ArcGISTiledImageServiceLayer"]})],B.prototype,"operationalLayerType",void 0),I([S({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(t,e)=>!e.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}},writer(t,e,s){e[s]=!t}}}})],B.prototype,"popupEnabled",void 0),I([S({type:Mt,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}}}}})],B.prototype,"popupTemplate",void 0),I([S({readOnly:!0})],B.prototype,"defaultPopupTemplate",null),I([S({readOnly:!0,type:[fe]})],B.prototype,"fields",void 0),I([S({readOnly:!0,type:[fe]})],B.prototype,"rasterFields",null),I([S({types:it,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){var e;const t=((e=this.renderer)==null?void 0:e.type)==="raster-stretch"&&this.renderer.stretchType==="none"&&!this.renderer.useGamma;return{enabled:!this.loaded||this.raster.tileType==="Raster"||!t}}},origins:{"web-scene":{types:Vt,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:t=>({enabled:t&&t.type!=="vector-field"&&t.type!=="flow"})}}}}})],B.prototype,"renderer",null),I([$t("renderer")],B.prototype,"readRenderer",null),B=I([Q("esri.layers.ImageryTileLayer")],B);const Gi=B;export{Gi as default};
