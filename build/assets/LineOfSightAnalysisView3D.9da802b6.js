import{e as n,f as o,l as u,k as L,m as S,aq as m,y as te,ls as ve,m_ as je,kY as Ue,k$ as We,m$ as Be,lO as De,af as qe,ag as de,mc as Je,mG as Ze,md as Xe,t as h,n0 as Ye,ev as X,n1 as ue,n2 as Ke,n3 as le,r as d,a4 as Qe,an as P,k8 as ye,aU as B,aT as q,i_ as _e,ak as me,a3 as ke,c as fe,au as Ce,b as Y,aH as ie,fS as et,n4 as tt,n5 as it,fg as ee,n6 as W,aV as nt,lz as we,dU as ne,ip as oe,h as k,dR as Oe,gq as ot,m1 as st,O as ze,aj as rt,ap as at,bf as lt,mi as Te,n7 as dt,n8 as ut,lD as K,lW as ct,lN as pt,G as ht,N as gt,z as I,eI as xe,lP as vt,n9 as ce,na as Ie,eb as Ve,kX as x,eu as yt,j as _t}from"./index.d2d38865.js";import{a as Pe,c as pe,b as mt}from"./LineVisualElement.c1761bad.js";import{l as he,u as Le,f as Se}from"./LineOfSightAnalysisTarget.574371a2.js";import{b as Re,f as bt,g as ft}from"./elevationInfoUtils.6a873162.js";import{i as Ct,A as wt,a as Ot,d as Ee,s as Tt,m as It}from"./analysisViewUtils.05b8035f.js";import{d as Vt,S as Ae}from"./PointVisualElement.733bb765.js";import"./ImageMaterial.62e90caa.js";let $=class extends S{constructor(e){super(e),this.innerWidth=2,this.outerWidth=8,this.visibleInnerColor=new u([3,252,111,1]),this.visibleOuterColor=new u([3,252,111,.15]),this.occludedInnerColor=new u([252,3,69,1]),this.occludedOuterColor=new u([252,3,69,.1]),this.undefinedInnerColor=new u([255,255,255,1]),this.undefinedOuterColor=new u([127,127,127,.2])}};n([o({type:Number})],$.prototype,"innerWidth",void 0),n([o({type:Number})],$.prototype,"outerWidth",void 0),n([o({type:u})],$.prototype,"visibleInnerColor",void 0),n([o({type:u})],$.prototype,"visibleOuterColor",void 0),n([o({type:u})],$.prototype,"occludedInnerColor",void 0),n([o({type:u})],$.prototype,"occludedOuterColor",void 0),n([o({type:u})],$.prototype,"undefinedInnerColor",void 0),n([o({type:u})],$.prototype,"undefinedOuterColor",void 0),$=n([L("esri.views.3d.analysis.LineOfSight.LineOfSightConfiguration")],$);let F=class extends S{constructor(e){super(e),this.target=null,this.intersectedGraphic=null,this.intersectedLocation=null,this.elevationAlignedTargetLocation=null,this.visible=void 0}};n([o()],F.prototype,"target",void 0),n([o()],F.prototype,"intersectedGraphic",void 0),n([o()],F.prototype,"intersectedLocation",void 0),n([o()],F.prototype,"elevationAlignedTargetLocation",void 0),n([o({type:Boolean})],F.prototype,"visible",void 0),F=n([L("esri.views.3d.analysis.LineOfSightAnalysisResult")],F);let G=class extends S{constructor(e){super(e),this.elevationAlignedTargetLocation=null,this.inputPoints={isValid:!1,observer:m(),observerSurfaceNormal:null,observerFeatureId:null,target:m(),targetSurfaceNormal:null,targetFeatureId:null,observerAdjusted:m(),targetAdjusted:m()},this.computationResult={start:m(),end:m(),intersection:m(),isValid:!1,isTargetVisible:!1},this.result=null}notifyResultChanged(){this.notifyChange("computationResult")}notifyInputPointsChanged(){this.notifyChange("inputPoints")}};n([o()],G.prototype,"target",void 0),n([o()],G.prototype,"elevationAlignedTargetLocation",void 0),n([o()],G.prototype,"inputPoints",void 0),n([o()],G.prototype,"computationResult",void 0),n([o()],G.prototype,"result",void 0),G=n([L("esri.views.3d.analysis.LineOfSight.LineOfSightComputation")],G);var be;let E=be=class extends S{constructor(e){super(e)}clone(){return new be({type:this.type,id:te(this.id),mapPoint:te(this.mapPoint),renderPoint:ve(this.renderPoint),normal:te(this.normal),ray:te(this.ray),graphic:this.graphic})}equals(e){return this.type===e.type&&this.id===e.id&&je(this.mapPoint,e.mapPoint)&&Ue(this.renderPoint,e.renderPoint)&&We(this.normal,e.normal)&&Be(this.ray,e.ray)&&this.graphic===e.graphic}};n([o()],E.prototype,"type",void 0),n([o({constructOnly:!0})],E.prototype,"id",void 0),n([o({constructOnly:!0})],E.prototype,"mapPoint",void 0),n([o({constructOnly:!0})],E.prototype,"renderPoint",void 0),n([o({constructOnly:!0})],E.prototype,"normal",void 0),n([o({constructOnly:!0})],E.prototype,"graphic",void 0),n([o({constructOnly:!0})],E.prototype,"ray",void 0),E=be=n([L("esri.views.3d.analysis.LineOfSight.LineOfSightIntersectionResult")],E);let J=class extends S{constructor(e){super(e),this._terrainIntersectionOptionsLayerUids=new Set(["terrain"])}initialize(){this.intersector=qe(this.view.state.viewingMode),this.intersector.options.hud=!1,this.intersector.options.store=de.MIN}getScreenPointIntersection(e){const t=Je(e,Ze.get()),i=Xe(this.view.state.camera,t,ge);return this._getRayIntersection(i)}_getRayIntersection(e,t){if(h(e)||h(this.view.sceneIntersectionHelper))return null;this.intersector.options.store=de.MIN,this.view.sceneIntersectionHelper.intersectToolIntersectorRay(e,this.intersector,t);const i=this.intersector.results.min,s=m();if(!i.getIntersectionPoint(s))return null;const r=this.view.renderCoordsHelper.fromRenderCoords(s,this.view.spatialReference),l=ve(i.normal);if(Ye(i))return new E({type:X.OBJECT,id:`${i.target.layerUid}/${i.target.nodeIndex}/${i.target.componentIndex}`,mapPoint:r,renderPoint:s,normal:l,ray:ue(e),graphic:null});if(Ke(i))return new E({type:X.TERRAIN,id:i.target.lij.slice(),mapPoint:r,renderPoint:s,normal:l,ray:ue(e),graphic:null});const a=le(i,this.view);if(d(a)){const v=a.layer,g=a.sourceLayer;let c;return g&&g.type==="scene"?c=Qe(a,g.objectIdField):c=a.uid,new E({type:X.OBJECT,id:`${v.uid}/${c}`,mapPoint:r,renderPoint:s,normal:l,ray:ue(e),graphic:a})}return null}updateFromGroundIntersection(e,t,i){const s=Pt,r=Lt,l=St,a=Rt;P(r,e),this.view.renderCoordsHelper.worldUpAtPosition(r,l),ye(l,l);const v=this.view.basemapTerrain.visibleElevationBounds,g=v?Math.abs(v.max-v.min):100,c=t>=0?1:-1;B(a,l,c*(g+Math.abs(t))),q(s,r,a),_e(s,r,ge);const p=this._getRayIntersection(ge,{include:this._terrainIntersectionOptionsLayerUids});return d(p)?(B(a,l,c*t),q(i,p.renderPoint,a),ve(p.normal)):(P(i,e),null)}};n([o()],J.prototype,"view",void 0),n([o()],J.prototype,"intersector",void 0),J=n([L("esri.views.3d.analysis.LineOfSight.LineOfSightRayIntersector")],J);const Pt=m(),Lt=m(),St=m(),Rt=m(),ge=De(),Fe="esri.views.3d.analysis.LineOfSight.LineOfSightController",$e=me.getLogger(Fe);let f=class extends ke.EventedMixin(S){constructor(e){super(e),this.updateOnCameraChange=!0,this._effectiveObserverElevationMode="absolute-height",this._observerFeatureId=null,this._updatingHandles=new fe,this._frameTask=Ce,this._handles=new Y,this._computationHandles=new Y,this._externalObserverUpdate=!0}initialize(){var t;const e=(t=this.view.resourceController)==null?void 0:t.scheduler;this._frameTask=e?e.registerTask(ie.LINE_OF_SIGHT_TOOL):Ce,this._intersector=new J({view:this.view}),this._handles.add([this._connectObserver(),this._connectComputations(),this._connectTargets()])}destroy(){this._handles.destroy(),this._computationHandles.destroy(),this._computations.removeAll(),this._updatingHandles.destroy()}get updating(){return this._frameTask.updating||this._updatingHandles.updating}get priority(){return this._frameTask.priority}set priority(e){this._frameTask.priority=e}get _computations(){return this.analysisViewData.computations}get _elevationAlignedObserverPositionRenderSpace(){return this.analysisViewData.observerEngineLocation}set _elevationAlignedObserverPositionRenderSpace(e){this.analysisViewData.observerEngineLocation=e}get _screenPixelSize(){return this.view.state.camera.computeScreenPixelSizeAt(this._elevationAlignedObserverPositionRenderSpace)}_computeResult(e){const t=e.computation,{inputPoints:i,computationResult:s}=t,{observerAdjusted:r,targetAdjusted:l}=i,{start:a,end:v}=s;P(a,r),P(v,l),this._canCompute(t)?this._computeIntersection(e):this._interpolateIntersection(e),t.notifyResultChanged(),this.emit("result-changed",{target:e.computation.target,result:t.result})}_updateAdjustedPointsFromFeatures(e){const t=this.view,{sceneIntersectionHelper:i}=t,{inputPoints:s}=e,{observerAdjusted:r,observerFeatureId:l,targetFeatureId:a,targetAdjusted:v}=s;if(h(l)&&h(a))return;const g=et(r,v),c=this._intersector.intersector,p=_e(s.observer,s.target,He);c.options.store=de.ALL,i.intersectToolIntersectorRay(p,c);let _=null,y=null,V=null,T=null;for(const O of c.results.all){const b=le(O,this.view);if(h(b)||h(O.distanceInRenderSpace))continue;const A=he(b);h(A)||(d(l)&&A===l&&(h(_)&&(_=this._getFeatureDistanceThreshold(O,t,g)),O.distanceInRenderSpace<_&&(V=O)),d(a)&&A===a&&(h(y)&&(y=this._getFeatureDistanceThreshold(O,t,g)),h(T)&&O.distanceInRenderSpace<g&&g-O.distanceInRenderSpace<y&&(T=O)))}d(V)&&V.getIntersectionPoint(r)&&(s.observerSurfaceNormal=V.getTransformedNormal(m())),d(T)&&T.getIntersectionPoint(v)&&(s.targetSurfaceNormal=T.getTransformedNormal(m()))}_getFeatureDistanceThreshold(e,t,i){if(tt(e)){const s=it(e,t);if(d(s))return Math.min(s*At,i)}return 1e-5*i}_adjustStartEndPositions(e){const t=this._screenPixelSize,i=this.view,{inputPoints:s}=e,{observer:r,observerSurfaceNormal:l,target:a,targetSurfaceNormal:v,observerAdjusted:g,targetAdjusted:c}=s,p=se;P(g,r),P(c,a),this._updateAdjustedPointsFromFeatures(e),d(l)?P(p,l):ee(p,c,g);const _=t;ye(p,p),B(p,p,Math.min(_,1)),q(g,g,p),d(v)?P(p,v):ee(p,g,c);const y=i.state.camera.computeScreenPixelSizeAt(c);ye(p,p),B(p,p,Math.min(y,1)),q(c,c,p)}_computeIntersection({computation:e,interpolationInfo:t}){const{view:i}=this,{sceneIntersectionHelper:s,renderCoordsHelper:r}=i;if(h(s))return;const l=this._intersector.intersector,{computationResult:a,inputPoints:v}=e,{observer:g,target:c}=v,{start:p,end:_}=a,y=_e(p,_,He);l.options.store=de.MIN,s.intersectToolIntersectorRay(y,l);const V=l.results.min,T=a.intersection,O=se;let b=!0;if(d(V)&&V.getIntersectionPoint(T)){P(t.originalIntersection,T),P(t.originalObserver,p),P(t.originalTarget,_),r.fromRenderCoords(T,O,i.spatialReference);const R=1-W(_,c)/W(p,c);b=W(g,T)>=R*W(g,c)}const A=new nt(O,i.spatialReference);{const{result:R,target:z}=e;d(R)?(R.target=z,R.intersectedGraphic=b?null:le(V,i),R.intersectedLocation=b?null:A,R.visible=b):e.result=new F({target:z,elevationAlignedTargetLocation:e.elevationAlignedTargetLocation,intersectedGraphic:b?null:le(V,i),intersectedLocation:b?null:A,visible:b})}a.isValid=v.isValid=!0,a.isTargetVisible=b}_interpolateIntersection({computation:e,interpolationInfo:t}){const{computationResult:i,inputPoints:s}=e,{start:r,end:l,intersection:a}=i,{originalIntersection:v,originalObserver:g,originalTarget:c}=t;if(P(a,v),s.isValid){const p=se,_=W(g,v)/W(g,c);we(p,r,g),B(p,p,1-_),q(a,a,p),we(p,l,c),B(p,p,_),q(a,a,p),i.isValid=!0}else e.result=null,i.isValid=!1,i.isTargetVisible=!1}_canCompute(e){const t=this.analysisViewData.elevationAlignedObserver,i=this.view.frustum;if(h(t)||h(e.elevationAlignedTargetLocation)||h(i))return!1;const{observerAdjusted:s,targetAdjusted:r}=e.inputPoints,l=i.intersectsPoint(s),a=i.intersectsPoint(r);return l&&a}_onObserverPositionChange(e,t,i,s,r){if(this._externalObserverUpdate=r,h(e))return this.analysisViewData.elevationAlignedObserver=null,void(this._observerFeatureId=null);if(h(t))return Pe(this.analysis,e.spatialReference,$e),void(this.analysisViewData.elevationAlignedObserver=null);const l=this._getEffectiveElevationInfo(t,i),{absoluteZ:a,elevation:v}=Re(t.x,t.y,t.z,this.view.spatialReference,this.view,l),g=t.clone();g.z=a,this._effectiveObserverElevationMode=l.mode,this.analysisViewData.elevationAlignedObserver=g;const c=m();this.view.renderCoordsHelper.toRenderCoords(g,c),this._elevationAlignedObserverPositionRenderSpace=c,this._observerGroundOffsetRenderSpace=a-v,this._observerFeatureId=he(s),this.priority=ie.LINE_OF_SIGHT_TOOL_INTERACTIVE}_onObserverRenderSpacePositionChangeForComputation(e,t,i,s,r){const{inputPoints:l}=e;switch(P(l.observer,t),l.observerFeatureId=r,l.observerSurfaceNormal=null,s){case"on-the-ground":case"relative-to-ground":{const a=this._intersector.updateFromGroundIntersection(l.observer,i,l.observer);h(l.observerFeatureId)&&(l.observerSurfaceNormal=a)}}this._adjustStartEndPositions(e),e.notifyInputPointsChanged(),this.priority=ie.LINE_OF_SIGHT_TOOL_INTERACTIVE}_onTargetPositionChange(e,t,i,s,r,l=!0){const a=e.inputPoints;if(l&&(a.isValid=!1),h(i))return d(t)&&Pe(this.analysis,t.spatialReference,$e),e.elevationAlignedTargetLocation=null,void e.notifyInputPointsChanged();const v=this._getEffectiveElevationInfo(i,s),{absoluteZ:g,elevation:c}=Re(i.x,i.y,i.z,this.view.spatialReference,this.view,v),p=i.clone();switch(p.z=g,e.elevationAlignedTargetLocation=p,this.view.renderCoordsHelper.toRenderCoords(e.elevationAlignedTargetLocation,a.target),a.targetFeatureId=he(r),a.targetSurfaceNormal=null,v.mode){case"on-the-ground":case"relative-to-ground":{const _=this._intersector.updateFromGroundIntersection(a.target,g-c,a.target);h(a.targetFeatureId)&&(a.targetSurfaceNormal=_)}}this._adjustStartEndPositions(e),e.notifyInputPointsChanged(),this.priority=ie.LINE_OF_SIGHT_TOOL_INTERACTIVE}_connectComputationToTarget(e){return ne([this._updatingHandles.add(()=>({computation:e,targetPosition:e.target.position,targetElevationInfo:e.target.elevationInfo,targetFeatureInfo:e.target.feature,projectedTargetPosition:oe(e.target.position,this.view.spatialReference)}),({computation:t,targetPosition:i,targetElevationInfo:s,targetFeatureInfo:r,projectedTargetPosition:l})=>{d(l.pending)?this._updatingHandles.addPromise(l.pending):this._onTargetPositionChange(t,i,l.geometry,s,r)},k)])}_connectComputationToObserver(e){return this._updatingHandles.add(()=>({computation:e,observer:this.analysisViewData.elevationAlignedObserver}),({computation:t})=>{this._externalObserverUpdate&&(t.inputPoints.isValid=!1,t.notifyInputPointsChanged())},k)}_connectComputationToRenderSpaceObserver(e){return this._updatingHandles.add(()=>({computation:e,observer:this._elevationAlignedObserverPositionRenderSpace,observerGroundOffset:this._observerGroundOffsetRenderSpace,observerElevationMode:this._effectiveObserverElevationMode,observerFeatureId:this._observerFeatureId}),({computation:t,observer:i,observerGroundOffset:s,observerElevationMode:r,observerFeatureId:l})=>{this._onObserverRenderSpacePositionChangeForComputation(t,i,s,r,l)},k)}_connectComputationToCamera(e){return this._updatingHandles.add(()=>({camera:this.view.state.camera,isDirty:this._isCameraDirty}),({isDirty:t})=>{!this.updateOnCameraChange||e.inputPoints.isValid&&!t||e.notifyInputPointsChanged()})}_connectComputationToSlicePlane(e){return this._updatingHandles.add(()=>this.view.slicePlane,()=>{e.inputPoints.isValid=!1,e.notifyInputPointsChanged()})}_connectComputationToElevation(e){const t=(i,s)=>{const r=this.analysis.observer,l=e.target;let a=null,v=null,g=null,c=null,p=null,_=null;if(d(r)&&d(r.position)){const y=oe(r.position,this.view.spatialReference);if(d(y.pending))return this._updatingHandles.addPromise(y.pending),void y.pending.finally(()=>t(i,s));a=y.geometry,v=r.elevationInfo,g=r.feature}if(d(l.position)){const y=oe(l.position,this.view.spatialReference);if(d(y.pending))return this._updatingHandles.addPromise(y.pending),void y.pending.finally(()=>t(i,s));c=y.geometry,p=l.elevationInfo,_=l.feature}h(a)&&h(c)||(lt(i,s,re,this.view.spatialReference),d(a)&&Te(re,a)&&this._onObserverPositionChange(d(r)?r.position:null,a,v,g,!1),d(c)&&Te(re,c)&&this._onTargetPositionChange(e,l.position,c,p,_,!1),d(a)&&d(c)&&dt(re,a,c)&&e.notifyInputPointsChanged())};return this.view.elevationProvider.on("elevation-change",i=>t(i.extent,i.spatialReference))}_connectComputationToTask(e){let t=ut;const i={computation:e,interpolationInfo:{originalIntersection:m(),originalObserver:m(),originalTarget:m()}};return ne([this._updatingHandles.add(()=>e.inputPoints,()=>{t=Oe(t),t=ot(async s=>{await st(this._frameTask.schedule(()=>this._computeResult(i),s))})},{initial:!0,equals:()=>!1}),ze(()=>t=Oe(t))])}_connectComputation(e){const t=this._computationHandles;t.has(e)||t.add([this._connectComputationToTarget(e),this._connectComputationToObserver(e),this._connectComputationToRenderSpaceObserver(e),this._connectComputationToCamera(e),this._connectComputationToSlicePlane(e),this._connectComputationToElevation(e),this._connectComputationToTask(e)],e)}_disconnectComputation(e){this._computationHandles.remove(e)}_onComputationCollectionChange({added:e,removed:t}){for(const i of t)this._disconnectComputation(i);for(const i of e)this._connectComputation(i)}_onTargetCollectionChange({added:e,removed:t}){for(const i of t)this._removeTarget(i);for(const i of e)this._addTarget(i)}_onCursorTargetChange(e,t){d(t)&&this._removeTarget(t),d(e)&&this._addTarget(e)}_addTarget(e){this._computations.some(t=>t.target===e)||this._computations.add(new G({target:e}))}_removeTarget(e){const t=this._computations.findIndex(i=>i.target===e);this._computations.removeAt(t)}_connectObserver(){return ne([this._updatingHandles.add(()=>({observerPosition:d(this.analysis.observer)?this.analysis.observer.position:null,projectedObserverPosition:oe(d(this.analysis.observer)?this.analysis.observer.position:null,this.view.spatialReference),observerElevationInfo:d(this.analysis.observer)?this.analysis.observer.elevationInfo:null,observerFeatureInfo:d(this.analysis.observer)?this.analysis.observer.feature:null}),({observerPosition:e,projectedObserverPosition:t,observerElevationInfo:i,observerFeatureInfo:s})=>{d(t.pending)?this._updatingHandles.addPromise(t.pending):this._onObserverPositionChange(e,t.geometry,i,s,!0)},k)])}_connectComputations(){return this._updatingHandles.addOnCollectionChange(()=>this._computations,e=>this._onComputationCollectionChange(e),{initial:!0,final:!0})}_connectTargets(){return ne([this._updatingHandles.addOnCollectionChange(()=>this.analysis.targets,e=>this._onTargetCollectionChange(e),{initial:!0,final:!0}),this._updatingHandles.add(()=>this.analysisViewData.cursorTarget,(e,t)=>{this._onCursorTargetChange(e,t)})])}get _isCameraDirty(){const e=this.analysisViewData.elevationAlignedObserver,{view:t}=this,{renderCoordsHelper:i}=t;if(h(e)||h(i))return!1;const s=se;i.toRenderCoords(e,s);const r=t.state.camera.computeScreenPixelSizeAt(s);return Math.abs((r-this._screenPixelSize)/this._screenPixelSize)>Et}_getEffectiveElevationInfo(e,t){return e.hasZ?rt(t,{mode:"absolute-height",offset:0}):{mode:"on-the-ground",offset:0}}};n([o({constructOnly:!0})],f.prototype,"analysis",void 0),n([o({constructOnly:!0})],f.prototype,"analysisViewData",void 0),n([o({constructOnly:!0})],f.prototype,"view",void 0),n([o()],f.prototype,"updating",null),n([o()],f.prototype,"priority",null),n([o()],f.prototype,"updateOnCameraChange",void 0),n([o()],f.prototype,"_computations",null),n([o()],f.prototype,"_elevationAlignedObserverPositionRenderSpace",null),n([o()],f.prototype,"_observerGroundOffsetRenderSpace",void 0),n([o()],f.prototype,"_effectiveObserverElevationMode",void 0),n([o()],f.prototype,"_observerFeatureId",void 0),n([o()],f.prototype,"_screenPixelSize",null),n([o({readOnly:!0})],f.prototype,"_updatingHandles",void 0),n([o()],f.prototype,"_frameTask",void 0),n([o()],f.prototype,"_isCameraDirty",null),f=n([L(Fe)],f);const Et=.1,se=m(),He=De(),re=at(),At=.05;let M=class extends S{constructor(e){super(e),this.enabled=!0,this.glowColor=new u([255,127,0]),this.glowWidth=8,this.innerColor=new u([255,255,255]),this.innerWidth=.75,this.globalAlpha=.75}};n([o({type:Boolean})],M.prototype,"enabled",void 0),n([o({type:u})],M.prototype,"glowColor",void 0),n([o({type:Number})],M.prototype,"glowWidth",void 0),n([o({type:u})],M.prototype,"innerColor",void 0),n([o({type:Number})],M.prototype,"innerWidth",void 0),n([o({type:Number})],M.prototype,"globalAlpha",void 0),M=n([L("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightLaserLineConfiguration")],M);let Z=class extends S{constructor(e){super(e),this.size=.5,this.color=new u([255,127,0,.75])}};n([o({type:Number})],Z.prototype,"size",void 0),n([o({type:u})],Z.prototype,"color",void 0),Z=n([L("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightObserverConfiguration")],Z);let N=class extends S{constructor(e){super(e),this.size=.5,this.visibleColor=new u([3,252,111,.75]),this.occludedColor=new u([252,3,69,.75]),this.undefinedColor=new u([127,127,127,.75])}};n([o({type:Number})],N.prototype,"size",void 0),n([o({type:u})],N.prototype,"visibleColor",void 0),n([o({type:u})],N.prototype,"occludedColor",void 0),n([o({type:u})],N.prototype,"undefinedColor",void 0),N=n([L("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightTargetConfiguration")],N);class D extends S{constructor(t){super(t),this.innerWidth=2,this.outerWidth=8,this.visibleInnerColor=new u([3,252,111,1]),this.visibleOuterColor=new u([3,252,111,.15]),this.occludedInnerColor=new u([252,3,69,1]),this.occludedOuterColor=new u([252,3,69,.1]),this.undefinedInnerColor=new u([255,255,255,1]),this.undefinedOuterColor=new u([127,127,127,.2])}}n([o({type:Number})],D.prototype,"innerWidth",void 0),n([o({type:Number})],D.prototype,"outerWidth",void 0),n([o({type:u})],D.prototype,"visibleInnerColor",void 0),n([o({type:u})],D.prototype,"visibleOuterColor",void 0),n([o({type:u})],D.prototype,"occludedInnerColor",void 0),n([o({type:u})],D.prototype,"occludedOuterColor",void 0),n([o({type:u})],D.prototype,"undefinedInnerColor",void 0),n([o({type:u})],D.prototype,"undefinedOuterColor",void 0);let j=class extends S{constructor(e){super(e),this.laserLine=new M,this.observer=new Z,this.target=new N,this.lineOfSight=new D}};n([o({type:M})],j.prototype,"laserLine",void 0),n([o({type:Z})],j.prototype,"observer",void 0),n([o({type:N})],j.prototype,"target",void 0),n([o({type:D})],j.prototype,"lineOfSight",void 0),j=n([L("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightToolConfiguration")],j);function $t(e,t){let i=null;const s=e.events.on("grab-changed",r=>{d(i)&&(i.remove(),i=null),r.action==="start"&&(i=e.disableDisplay()),t&&t(r)});return{remove(){d(i)&&i.remove(),s.remove()}}}function ae(e,t,i){return{geometry:ct(e,32,32),material:wt(u.toUnitRGBA(t)),stateMask:i}}function Ge(e){const t=[];return e.customColor1&&t.push(ae(e.size,e.customColor1,K.Custom1)),e.customColor2&&t.push(ae(e.size,e.customColor2,K.Custom2)),e.customColor3&&t.push(ae(e.size,e.customColor3,K.Custom3)),e.color&&t.push(ae(e.size,e.color)),t}function Ht(e,t){const i=Ge(t),s=new Ct({view:e,renderObjects:i,elevationInfo:{mode:"absolute-height",offset:0}});return $t(s),s}var U;(function(e){e.Ready="ready",e.Creating="creating",e.Created="created"})(U||(U={}));let w=class extends Ot{constructor(e){super(e),this.removeIncompleteOnCancel=!1,this.configuration=new j,this.analysisViewData=null,this._laserlineVisualElement=null,this._grabbedManipulator=null,this._analysisHandles=new Y,this._handles=new Y,this._updatingHandles=new fe,this._manipulatorHandles=new Y,this._targetTrackerManipulator=null}initialize(){this._intersector=new J({view:this.view}),this._handles.add(ht(()=>this.state,e=>{e===U.Created&&this.finishToolCreation()},gt)),this._observerManipulator=this._createObserverManipulator(),this._handles.add([this._updatingHandles.add(()=>({...this.configuration.observer}),()=>this._updateObserverManipulatorStyle()),this._updatingHandles.add(()=>this.analysisViewData.elevationAlignedObserver,e=>this._onObserverLocationChange(e),k),this._updatingHandles.add(()=>({...this.configuration.laserLine}),()=>this._createVisualElements(),k),this._updatingHandles.add(()=>this._laserLineRendererDependencies(),e=>this._updateLaserLineRenderer(e)),this._connectComputations(),this._updatingHandles.addWhen(()=>!this._shouldRenderTracker,()=>this._clearCursorTracker(),k)])}destroy(){this._updatingHandles=I(this._updatingHandles),this._handles=I(this._handles),this._manipulatorHandles=I(this._manipulatorHandles),this._analysisHandles=I(this._analysisHandles),this._observerManipulator=null,this._clearCursorTracker(),this._removeVisualElements(),this._intersector=null,this._set("analysis",null)}get state(){return this.active?this.hasGrabbedManipulators?U.Created:U.Creating:d(this.analysis.observer)&&d(this.analysis.observer.position)?U.Created:U.Ready}get cursor(){return this.active&&this._showTracker?"crosshair":null}get updating(){return d(this.analysisViewData)&&this.analysisViewData.updating||this._updatingHandles.updating}get _showTracker(){return this.active&&this._latestPointerMovePointerType==="mouse"}get _shouldRenderTracker(){return this._showTracker&&d(this.analysis.observer)&&d(this.analysis.observer.position)&&!this.hasGrabbedManipulators}continue(){this.view.activeTool=this}stop(){this.view.activeTool=null}onEditableChange(){this.analysisViewData.editable=this.internallyEditable}onInputEvent(e){switch(e.type){case"immediate-double-click":this._doubleClickHandler(e);break;case"key-down":this._keyDownHandler(e);break;case"pointer-move":this._pointerMoveHandler(e)}}onInputEventAfter(e){e.type==="immediate-click"&&this._clickHandler(e)}onShow(){}onHide(){}onDeactivate(){this._clearCursorTracker()}_connectComputations(){return this._updatingHandles.addOnCollectionChange(()=>this.analysisViewData.computations,e=>this._onComputationsCollectionChange(e),{initial:!0,final:!0})}_onComputationsCollectionChange({added:e,removed:t}){for(const i of t)this._disconnectComputation(i);for(const i of e)this._connectComputation(i)}_connectComputation(e){if(this.destroyed)return void me.getLogger(this.declaredClass).warn("Attempting to connect an analysis to a destroyed LineOfSight tool. Ignoring.");const t=this._analysisHandles;if(t.has(e))return;const i=this._createTargetManipulator(e.target);h(this._targetTrackerManipulator)&&i.metadata.target===this.analysisViewData.cursorTarget&&(this._targetTrackerManipulator=i,this._targetTrackerManipulator.available=!1,this._targetTrackerManipulator.interactive=!1,this._updateLaserLineRenderer()),t.add([this._updatingHandles.add(()=>this._getLineOfSightManipulatorStateDependencies(e),()=>this._updateManipulatorState(i,e),k),this._updatingHandles.add(()=>e.elevationAlignedTargetLocation,s=>this._onTargetLocationChange(s,i),k)],e)}_disconnectComputation(e){if(this.destroyed)return void me.getLogger(this.declaredClass).warn("Attempting to disconnect an analysis from a destroyed LineOfSight tool. Ignoring.");this._analysisHandles.remove(e);const t=this._getTargetManipulator(e.target);d(t)&&(this.manipulators.remove(t),this._manipulatorHandles.remove(t),d(this._targetTrackerManipulator)&&this._targetTrackerManipulator===t&&(this._targetTrackerManipulator=null))}_clearCursorTracker(){this.analysisViewData.cursorTarget=I(this.analysisViewData.cursorTarget)}_createManipulator(e,t,i){const s=Ht(this.view,e);return s.metadata=i,this._manipulatorHandles.add([t(s),s.events.on("grab-changed",r=>this._manipulatorGrabChanged(s,r)),s.events.on("immediate-click",r=>this._manipulatorClick(s,r))],s),this.manipulators.add(s),s}_createTargetManipulator(e){const t=this.configuration,i={size:t.target.size,customColor1:t.target.visibleColor,customColor2:t.target.occludedColor,customColor3:t.target.undefinedColor,visible:!0},s={target:e,type:"target"},r=this._createManipulator(i,l=>this._createTargetManipulatorDragPipeline(l),s);return d(e.position)?r.elevationAlignedLocation=e.position:r.available=!1,r}_getTargetManipulator(e){let t=null;return this.manipulators.forEach(i=>{const s=i.manipulator;h(t)&&s.metadata.type==="target"&&s.metadata.target===e&&(t=s)}),t}_createObserverManipulator(){const e=this.configuration,t={size:e.observer.size,color:e.observer.color,visible:!0};return this._createManipulator(t,i=>this._createObserverManipulatorDragPipeline(i),{type:"observer",intersection:null})}_updateObserverManipulatorStyle(){const e=this._observerManipulator,t=this.configuration.observer,i={size:t.size,color:t.color,visible:e.available};e.renderObjects=Ge(i)}_screenToIntersection(){return e=>{const t=this._intersector.getScreenPointIntersection(e.screenEnd);return h(t)?null:{...e,intersection:t}}}_createTargetManipulatorDragPipeline(e){return Ee(e,(t,i,s)=>{i.next(this._screenToIntersection()).next(this._updateTargetDragStep(e)).next(()=>this._updateLaserLineRenderer()),s.next(this._cancelTargetDragStep(e.metadata.target)).next(()=>this._updateLaserLineRenderer())})}_createObserverManipulatorDragPipeline(e){return Ee(e,(t,i,s)=>{i.next(this._screenToIntersection()).next(this._updateObserverDragStep()).next(()=>this._updateLaserLineRenderer()),s.next(this._cancelObserverDragStep()).next(()=>this._updateLaserLineRenderer())})}_updateObserverDragStep(){return e=>(d(e.intersection.mapPoint)?(h(this.analysis.observer)&&(this.analysis.observer=new Le),this._updateFromIntersection(this.analysis.observer,e.intersection)):this.analysis.observer=null,e)}_cancelObserverDragStep(){const e=d(this.analysis.observer)&&d(this.analysis.observer.position)?this.analysis.observer.clone():null;return t=>(this.analysis.observer=e,t)}_updateTargetDragStep(e){return t=>{this._updateFromIntersection(e.metadata.target,t.intersection);const i=t.intersection.mapPoint;return d(i)&&(e.elevationAlignedLocation=i),t}}_cancelTargetDragStep(e){const t=xe(e.position,i=>i.clone());return i=>(e.position=t,i)}_manipulatorGrabChanged(e,t){switch(t.action){case"start":this._grabbedManipulator=e;break;case"end":this._grabbedManipulator===e&&(this._grabbedManipulator=null)}}_updateManipulatorState(e,t){const{isValid:i,isTargetVisible:s}=t.computationResult;e.state=i?s?K.Custom1:K.Custom2:K.Custom3}_getLineOfSightManipulatorStateDependencies(e){const{isValid:t,isTargetVisible:i}=e.computationResult;return{isValid:t,isTargetVisible:i}}_laserLineRendererDependencies(){return{laserlineVisualElement:this._laserlineVisualElement,grabbedManipulator:this._grabbedManipulator,shouldRenderTracker:this._shouldRenderTracker,observerPosition:d(this.analysis.observer)?this.analysis.observer.position:null,visible:this.visible}}_updateLaserLineRenderer(e=this._laserLineRendererDependencies()){const{laserlineVisualElement:t,grabbedManipulator:i,shouldRenderTracker:s,observerPosition:r,visible:l}=e;if(h(t))return;const a=d(i)?i:s&&d(r)?this._targetTrackerManipulator:null;this.configuration.laserLine.enabled&&d(a)&&l?(t.visible=!0,t.heightManifoldTarget=a.renderLocation,a!==this._observerManipulator?t.lineVerticalPlaneSegment=vt(this._observerManipulator.renderLocation,a.renderLocation,Mt):t.lineVerticalPlaneSegment=null):(t.visible=!1,t.heightManifoldTarget=null,t.lineVerticalPlaneSegment=null)}_createVisualElements(){const e=this.configuration.laserLine;this._removeVisualElements(),this._laserlineVisualElement=new Vt({view:this.view,attached:!0,visible:this.visible,style:{glowColor:u.toUnitRGB(e.glowColor),glowWidth:e.glowWidth,innerColor:u.toUnitRGB(e.innerColor),innerWidth:e.innerWidth,globalAlpha:e.globalAlpha}})}_removeVisualElements(){d(this._laserlineVisualElement)&&(this._laserlineVisualElement.destroy(),this._laserlineVisualElement=null)}_onObserverLocationChange(e){h(e)?this._observerManipulator.available=!1:(this._observerManipulator.metadata.intersection=null,this._observerManipulator.available=!0,this._observerManipulator.elevationAlignedLocation=e)}_onTargetLocationChange(e,t){d(e)?(t.elevationAlignedLocation=e,t!==this._targetTrackerManipulator&&(t.available=!0)):t.available=!1}_addPointFromClickEvent(e){const t=this._intersector.getScreenPointIntersection(e);if(!h(t)&&!h(t.mapPoint))if(d(this.analysis.observer)&&d(this.analysis.observer.position)){this._clearCursorTracker();const i=new Se;this._updateFromIntersection(i,t),this.analysis.targets.add(i)}else{const i=new Le;this._updateFromIntersection(i,t),this.analysis.observer=i}}_clickHandler(e){this.active&&e.button!==ce.Right&&(this._addPointFromClickEvent(Ie(e)),e.stopPropagation())}_doubleClickHandler(e){this.active&&e.button!==ce.Right&&(this.stop(),e.stopPropagation())}_keyDownHandler(e){this.active&&e.key==="Escape"&&(this.stop(),e.stopPropagation())}_pointerMoveHandler(e){if(this.hasGrabbedManipulators||(this._latestPointerMovePointerType=e.pointerType,this._updateLaserLineRenderer(),!this._showTracker||h(this.analysis.observer)||h(this.analysis.observer.position)))return;const t=Ie(e),i=this._intersector.getScreenPointIntersection(t);d(i)&&d(i.mapPoint)&&(h(this.analysisViewData.cursorTarget)&&(this.analysisViewData.cursorTarget=new Se),this._updateFromIntersection(this.analysisViewData.cursorTarget,i),this._updateLaserLineRenderer())}_updateFromIntersection(e,t){if(h(t.mapPoint))return e.position=null,e.elevationInfo=null,void(e.feature=null);switch(t.type){case X.OBJECT:if(d(t.graphic)){const s=t.graphic,r=bt(s);r.mode==="on-the-ground"&&(r.mode="relative-to-ground",r.offset=0),e.elevationInfo=new Ve(r),e.feature=s}else e.elevationInfo=null,e.feature=null;break;case X.TERRAIN:case X.I3S:e.elevationInfo=new Ve({mode:"on-the-ground"}),e.feature=null;break;default:e.elevationInfo=null,e.feature=null}const i=t.mapPoint.clone();i.z=ft(this.view,i,{mode:"absolute-height",offset:0},e.elevationInfo),e.position=i}_manipulatorClick(e,t){if(e.metadata.type==="observer"||e.grabbing||e.dragging||t.button!==ce.Right||this.analysis.targets.length<=1)return;const{target:i}=e.metadata;this.analysis.targets.remove(i),t.stopPropagation()}get testInfo(){return{laserLineVisualElement:this._laserlineVisualElement}}};n([o({constructOnly:!0})],w.prototype,"view",void 0),n([o({constructOnly:!0})],w.prototype,"analysis",void 0),n([o({readOnly:!0})],w.prototype,"state",null),n([o({readOnly:!0})],w.prototype,"cursor",null),n([o()],w.prototype,"removeIncompleteOnCancel",void 0),n([o({readOnly:!0})],w.prototype,"updating",null),n([o({type:j})],w.prototype,"configuration",void 0),n([o({constructOnly:!0})],w.prototype,"analysisViewData",void 0),n([o({readOnly:!0})],w.prototype,"_showTracker",null),n([o()],w.prototype,"_latestPointerMovePointerType",void 0),n([o()],w.prototype,"_shouldRenderTracker",null),n([o()],w.prototype,"_laserlineVisualElement",void 0),n([o()],w.prototype,"_grabbedManipulator",void 0),w=n([L("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightTool")],w);const Mt=pt();let H=class extends S{constructor(e){super(e),this._lineOfSightVisualizations=[],this._computationHandles=new Y,this._updatingHandles=new fe}initialize(){this.addHandles(this._connectComputations()),this._createObserverVisualization()}destroy(){this._updatingHandles=I(this._updatingHandles),this._computationHandles=I(this._computationHandles),this._observerVisualElement=I(this._observerVisualElement)}get visible(){return this.analysisViewData.visible}get updating(){return this._updatingHandles.updating}get interactiveAndEditable(){return this.analysisViewData.interactive&&this.analysisViewData.editable}get testInfo(){return{visualizations:this._lineOfSightVisualizations}}get _configuration(){return this.analysisViewData.configuration}_createLineOfSightVisualization(){const e=this._configuration,t=this.view,i={view:t,attached:!0,width:e.outerWidth,innerWidth:e.innerWidth},s=u.toUnitRGBA(e.visibleOuterColor),r=u.toUnitRGBA(e.visibleInnerColor),l=u.toUnitRGBA(e.occludedOuterColor),a=u.toUnitRGBA(e.occludedInnerColor),v=u.toUnitRGBA(e.undefinedOuterColor),g=u.toUnitRGBA(e.undefinedInnerColor),c={visibleLineVisualElement:new pe({...i,color:s,innerColor:r}),occludedLineVisualElement:new pe({...i,color:l,innerColor:a}),undefinedLineVisualElement:new pe({...i,color:v,innerColor:g}),targetVisualElement:new Ae({view:t,attached:!0,...Me,size:8})};return this._lineOfSightVisualizations.push(c),c}_destroyLineOfSightVisualization(e){e.visibleLineVisualElement=I(e.visibleLineVisualElement),e.occludedLineVisualElement=I(e.occludedLineVisualElement),e.undefinedLineVisualElement=I(e.undefinedLineVisualElement),e.targetVisualElement=I(e.targetVisualElement),this._lineOfSightVisualizations.splice(this._lineOfSightVisualizations.indexOf(e),1)}_updateLineOfSightVisualization(e,t,i){const s=this._configuration,{computationResult:r,inputPoints:l}=e,{start:a,end:v,intersection:g,isValid:c,isTargetVisible:p}=r,{observer:_}=l,y=xt;y[12]=_[0],y[13]=_[1],y[14]=_[2];const V=ee(Dt,a,_),T=ee(kt,v,_),O=ee(zt,g,_),{visibleLineVisualElement:b,occludedLineVisualElement:A,undefinedLineVisualElement:R,targetVisualElement:z}=t,Ne=h(this.analysisViewData.elevationAlignedObserver)||h(e.elevationAlignedTargetLocation),Q=this.visible&&!Ne;b.visible=Q,A.visible=Q,R.visible=Q,z.visible=Q,z.attached=!i.interactiveAndEditable,Q&&(b.geometry=null,A.geometry=null,R.geometry=null,z.geometry=e.elevationAlignedTargetLocation,c?p?(b.geometry=[[x(V),x(T)]],b.transform=y,b.color=u.toUnitRGBA(s.visibleOuterColor),z.color=u.toUnitRGBA(s.visibleInnerColor)):(b.geometry=[[x(V),x(O)]],b.transform=y,b.color=u.toUnitRGBA(s.occludedOuterColor),A.geometry=[[x(O),x(T)]],A.transform=y,z.color=u.toUnitRGBA(s.occludedInnerColor)):(R.geometry=[[x(V),x(T)]],R.transform=y,z.color=u.toUnitRGBA(s.undefinedInnerColor)))}_getLineOfSightVisualizationDependencies(e){const{computationResult:t}=e,{occludedOuterColor:i,visibleOuterColor:s}=this._configuration;return{computationResult:t,occludedOuterColor:i,visibleOuterColor:s,visible:this.visible,interactiveAndEditable:this.interactiveAndEditable}}_connectComputation(e){const t=this._computationHandles;if(t.has(e))return;const i=this._createLineOfSightVisualization();t.add([this._updatingHandles.add(()=>this._getLineOfSightVisualizationDependencies(e),s=>this._updateLineOfSightVisualization(e,i,s),{initial:!0,equals:()=>!1}),ze(()=>this._destroyLineOfSightVisualization(i))],e)}_disconnectComputation(e){this._computationHandles.remove(e)}_connectComputations(){return this._updatingHandles.addOnCollectionChange(()=>this.analysisViewData.computations,e=>this._onComputationsCollectionChange(e),{initial:!0,final:!0})}_onComputationsCollectionChange({added:e,removed:t}){for(const i of t)this._disconnectComputation(i);for(const i of e)this._connectComputation(i)}_createObserverVisualization(){const e=u.toUnitRGBA(this._configuration.visibleInnerColor),t=new Ae({view:this.view,attached:!1,color:e,...Me});this._observerVisualElement=t,this.addHandles(this._updatingHandles.add(()=>({observer:this.analysisViewData.elevationAlignedObserver,interactiveAndEditable:this.interactiveAndEditable,visible:this.visible}),({observer:i,interactiveAndEditable:s,visible:r})=>{h(i)||s||!r?t.attached=!1:(t.geometry=i,this._observerVisualElement.attached=!0)},k))}};n([o({constructOnly:!0})],H.prototype,"analysis",void 0),n([o({constructOnly:!0})],H.prototype,"analysisViewData",void 0),n([o({constructOnly:!0})],H.prototype,"view",void 0),n([o({readOnly:!0})],H.prototype,"visible",null),n([o()],H.prototype,"updating",null),n([o()],H.prototype,"interactiveAndEditable",null),n([o()],H.prototype,"testInfo",null),n([o()],H.prototype,"_configuration",null),H=n([L("esri.views.3d.analysis.LineOfSight.LineOfSightVisualization")],H);const Me={size:6,pixelSnappingEnabled:!1,primitive:"circle",elevationInfo:{mode:"absolute-height",offset:0},outlineSize:0},Dt=m(),kt=m(),zt=m(),xt=yt();let C=class extends mt(ke.EventedMixin(S)){constructor(e){super(e),this.type="line-of-sight-view-3d",this.analysis=null,this.tool=null,this.computations=new _t,this.elevationAlignedObserver=null,this.configuration=new $,this.observerEngineLocation=m(),this.cursorTarget=null,this.editable=!0}initialize(){const e=this.view,t=this.analysis;this._analysisController=new f({analysis:t,analysisViewData:this,view:e}),this._analysisVisualization=new H({analysis:t,analysisViewData:this,view:e}),this.addHandles([this._analysisController.on("result-changed",i=>{i.target!==this.cursorTarget&&this.emit("result-changed",i)}),Tt(this,w)])}destroy(){It(this),this._analysisController=I(this._analysisController),this._analysisVisualization=I(this._analysisVisualization)}get results(){return this.computations.map(e=>e.result)}get priority(){return this._analysisController.priority}set priority(e){this._analysisController.priority=e}get updating(){return d(this._analysisController)&&this._analysisController.updating||d(this._analysisVisualization)&&this._analysisVisualization.updating}getResultForTarget(e){const t=this.computations.find(i=>i.target===e);return xe(t,i=>i.result)}get testInfo(){return{visualization:this._analysisVisualization,controller:this._analysisController}}};n([o({readOnly:!0})],C.prototype,"type",void 0),n([o({constructOnly:!0,nonNullable:!0})],C.prototype,"analysis",void 0),n([o()],C.prototype,"tool",void 0),n([o({readOnly:!0})],C.prototype,"results",null),n([o()],C.prototype,"priority",null),n([o()],C.prototype,"computations",void 0),n([o()],C.prototype,"elevationAlignedObserver",void 0),n([o()],C.prototype,"configuration",void 0),n([o()],C.prototype,"observerEngineLocation",void 0),n([o()],C.prototype,"cursorTarget",void 0),n([o()],C.prototype,"updating",null),n([o()],C.prototype,"editable",void 0),n([o()],C.prototype,"_analysisController",void 0),n([o()],C.prototype,"_analysisVisualization",void 0),C=n([L("esri.views.3d.analysis.LineOfSightAnalysisView3D")],C);const qt=C;export{qt as default};
