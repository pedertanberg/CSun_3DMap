import{t as c,es as b,an as a,be as u,et as p,i as d,e as o,f,k as v,eu as g,aq as m}from"./index.bd80e406.js";import{b as y}from"./TileTreeDebugger.3f4f1391.js";let h=class extends y{constructor(n){super(n)}getTiles(){const n=this.lv.getVisibleNodes(),i=this.view.renderSpatialReference,l=this.nodeSR;return n.map(t=>z(t,i,l)).sort((t,s)=>t.lij[0]===s.lij[0]?t.label>s.label?-1:1:t.lij[0]-s.lij[0])}};function z(n,i,l){const t=n.serviceObb;if(c(t)||c(i))return null;b(r,t.quaternion),a(e,t.center),u(e,l,0,e,i,0,1),r[12]=e[0],r[13]=e[1],r[14]=e[2];const s=[[],[],[]];a(e,t.halfSize),p(e,e,r),u(e,i,0,e,l,0,1),s[0].push([e[0],e[1]]),a(e,t.halfSize),e[0]=-e[0],p(e,e,r),u(e,i,0,e,l,0,1),s[0].push([e[0],e[1]]),a(e,t.halfSize),e[0]=-e[0],e[1]=-e[1],p(e,e,r),u(e,i,0,e,l,0,1),s[0].push([e[0],e[1]]),a(e,t.halfSize),e[1]=-e[1],p(e,e,r),u(e,i,0,e,l,0,1),s[0].push([e[0],e[1]]),s[1].push(s[0][0]),s[1].push(s[0][1]),a(e,t.halfSize),e[0]=-e[0],e[2]=-e[2],p(e,e,r),u(e,i,0,e,l,0,1),s[1].push([e[0],e[1]]),a(e,t.halfSize),e[2]=-e[2],p(e,e,r),u(e,i,0,e,l,0,1),s[1].push([e[0],e[1]]),s[2].push(s[0][0]),s[2].push(s[0][3]),a(e,t.halfSize),e[1]=-e[1],e[2]=-e[2],p(e,e,r),u(e,i,0,e,l,0,1),s[2].push([e[0],e[1]]),s[2].push(s[1][3]);const S=new d({rings:s,spatialReference:l});return{lij:[n.level,n.childCount,0],label:n.id,geometry:S}}o([f({constructOnly:!0})],h.prototype,"lv",void 0),o([f({constructOnly:!0})],h.prototype,"nodeSR",void 0),h=o([v("esri.views.3d.layers.support.I3STreeDebugger")],h);const r=g(),e=m();export{h as I3STreeDebugger};
