import{lA as _,fS as p,aT as m,mN as x,pJ as g,e as L,k as v,pK as f,lN as V,aq as c,ab as j,t as b,aj as P,oC as S,lP as T,pL as I,pM as C,ls as u}from"./index.bd80e406.js";import{q as E}from"./QueryEngineResult.4c6bf2ad.js";import"./WhereClause.1de2b7ed.js";import"./utils.f5f6ea5f.js";import"./generateRendererUtils.f392357a.js";import"./json.879c9adc.js";const N=1e3;function $(t,e,n){const s=x(),o=g(s);return _(o,o,t,.5),_(o,o,e,.5),s[3]=p(o,t),m(o,o,n),s}let l=class{constructor(){this._idToComponent=new Map,this._components=new f(t=>t.bounds),this._edges=new f(t=>t.bounds),this._tmpLineSegment=V(),this._tmpP1=c(),this._tmpP2=c(),this._tmpP3=c(),this.remoteClient=null}async fetchCandidates(t,e){await Promise.resolve(),j(e),await this._ensureEdgeLocations(t,e);const n=[];return this._edges.forEachNeighbor(s=>(this._addCandidates(t,s,n),n.length<N),t.bounds),{result:{candidates:n}}}async _ensureEdgeLocations(t,e){const n=[];if(this._components.forEachNeighbor(i=>{if(b(i.info)){const{id:a,uid:d}=i;n.push({id:a,uid:d})}return!0},t.bounds),!n.length)return;const s={components:n},o=await this.remoteClient.invoke("fetchAllEdgeLocations",s,P(e,{}));for(const i of o.components)this._setFetchEdgeLocations(i)}async add(t){const e=new h(t.id,t.bounds);return this._idToComponent.set(e.id,e),this._components.add([e]),{result:{}}}async remove(t){const e=this._idToComponent.get(t.id);if(e){const n=[];this._edges.forEachNeighbor(s=>(s.component===e&&n.push(s),!0),e.bounds),this._edges.remove(n),this._components.remove([e]),this._idToComponent.delete(e.id)}return{result:{}}}_setFetchEdgeLocations(t){const e=this._idToComponent.get(t.id);if(b(e)||t.uid!==e.uid)return;const n=S.createView(t.locations),s=new Array(n.count),o=c(),i=c();for(let r=0;r<n.count;r++){n.position0.getVec(r,o),n.position1.getVec(r,i);const y=$(o,i,t.origin),w=new k(e,r,y);s[r]=w}this._edges.add(s);const{objectIds:a,origin:d}=t;e.info={locations:n,objectIds:a,origin:d}}_addCandidates(t,e,n){const{locations:s,origin:o,objectIds:i}=e.component.info,a=s.position0.getVec(e.index,this._tmpP1),d=s.position1.getVec(e.index,this._tmpP2);m(a,a,o),m(d,d,o);const r=i[s.componentIndex.get(e.index)];this._addEdgeCandidate(t,r,a,d,n),this._addVertexCandidate(t,r,a,n),this._addVertexCandidate(t,r,d,n)}_addEdgeCandidate(t,e,n,s,o){if(!(t.types&E.EDGE))return;const i=g(t.bounds),a=T(n,s,this._tmpLineSegment),d=I(a,i,this._tmpP3);if(!C(t.bounds,d))return null;o.push({type:"edge",objectId:e,target:u(d),distance:p(i,d),start:u(n),end:u(s)})}_addVertexCandidate(t,e,n,s){if(!(t.types&E.VERTEX))return;const o=g(t.bounds);if(!C(t.bounds,n))return null;s.push({type:"vertex",objectId:e,target:u(n),distance:p(o,n)})}};l=L([v("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],l);const D=l;class h{constructor(e,n){this.id=e,this.bounds=n,this.info=null,this.uid=++h.uid}}h.uid=0;class k{constructor(e,n,s){this.component=e,this.index=n,this.bounds=s}}export{D as default};
