import{f1 as C,a6 as q,bA as z,bB as F,bc as D,e as I,iH as G,gj as O,iI as $,r as A,c3 as B}from"./index.347f2ee6.js";import{a as E}from"./elevationInfoUtils.85d694b1.js";async function k(s,p,f,m,o){const{elevationProvider:h,renderCoordsHelper:r,spatialReference:w}=s,{elevationInfo:y}=p,b=z(y,!0),j=await F(b,w,o);D(o);const c=[],u=new Set,l=new Set;for(const{objectId:i,points:e}of m){const n=f(i);if(I(n)){for(const a of e)c.push(a[2]);u.add(i);continue}n.isDraped&&l.add(i);const t=n.graphic.geometry;S.setFromElevationInfo(E(t,y)),S.updateFeatureExpressionInfoContext(j,n.graphic,p),g.spatialReference=s.spatialReference;for(const{x:a,y:d,z:v}of e)g.x=a,g.y=d,g.z=v!=null?v:0,G(g,h,S,r,R),c.push(R.z)}return{elevations:c,drapedObjectIds:l,failedObjectIds:u}}const S=new O,g=C(0,0,0,q.WGS84),R=new $;async function W(s,p,f){var i;if(I(s)||p.candidates.length===0)return x;const m=(i=s.graphics3DGraphicsByObjectID)!=null?i:s.graphics3DGraphics,o=[],h=[],{renderer:r}=s,w=A(r)&&"arcadeRequired"in r&&r.arcadeRequired?B():null,y=async(e,{graphic:n,graphics3DSymbol:t})=>{const a=await w,d=await s.getRenderingInfoAsync(n,r,a,{signal:f});return I(d)?[]:t.queryForSnapping(e,j,d,f)},{candidates:b,spatialReference:j}=p;for(let e=0;e<b.length;++e){const n=b[e],{objectId:t}=n,a=typeof t=="number"?m.get(t):void 0;if(I(a))continue;const{graphics3DSymbol:d}=a;d.symbologySnappingSupported&&(o.push(y(n,a)),h.push(e))}if(o.length===0)return x;const c=await Promise.all(o);D(f);const u=[],l=[];for(let e=0;e<c.length;++e){const n=c[e],t=h[e];for(const a of n)u.push(a),l.push(t)}return{candidates:u,sourceCandidateIndices:l}}const x={candidates:[],sourceCandidateIndices:[]};export{W as a,k as m};
