import{y as m,c_ as L,df as J,da as W,U as A,bq as M,eZ as E,sq as g,hW as S,c9 as U,a6 as G,b4 as q,ne as D,bD as _,aK as w,aJ as C,bN as j,r as k,G as O,sr as H,j as I,P as o,Q as a,ss as V,eF as $,R as N,$ as B,ry as Q,rA as Z,rz as X,oj as Y,ok as ee,ol as te,jP as se,di as re,cP as oe,gN as ie,oo as le,aN as ae}from"./index.347f2ee6.js";const ne={esriGeometryPoint:"points",esriGeometryPolyline:"polylines",esriGeometryPolygon:"polygons"};function R(e){const s=e.folders||[],r=s.slice(),t=new Map,l=new Map,f=new Map,b=new Map,c=new Map,y={esriGeometryPoint:l,esriGeometryPolyline:f,esriGeometryPolygon:b};(e.featureCollection&&e.featureCollection.layers||[]).forEach(i=>{const d=m(i);d.featureSet.features=[];const p=i.featureSet.geometryType;t.set(p,d);const x=i.layerDefinition.objectIdField;p==="esriGeometryPoint"?P(l,x,i.featureSet.features):p==="esriGeometryPolyline"?P(f,x,i.featureSet.features):p==="esriGeometryPolygon"&&P(b,x,i.featureSet.features)}),e.groundOverlays&&e.groundOverlays.forEach(i=>{c.set(i.id,i)}),s.forEach(i=>{i.networkLinkIds.forEach(d=>{const p=ye(d,i.id,e.networkLinks);p&&r.push(p)})}),r.forEach(i=>{if(i.featureInfos){i.points=m(t.get("esriGeometryPoint")),i.polylines=m(t.get("esriGeometryPolyline")),i.polygons=m(t.get("esriGeometryPolygon")),i.mapImages=[];for(const d of i.featureInfos)switch(d.type){case"esriGeometryPoint":case"esriGeometryPolyline":case"esriGeometryPolygon":{const p=y[d.type].get(d.id);p&&i[ne[d.type]].featureSet.features.push(p);break}case"GroundOverlay":{const p=c.get(d.id);p&&i.mapImages.push(p);break}}i.fullExtent=F([i])}});const h=F(r);return{folders:s,sublayers:r,extent:h}}function T(e,s,r,t){const l=L&&L.findCredential(e);e=J(e,{token:l&&l.token});const f=W.kmlServiceUrl;return A(f,{query:{url:e,model:"simple",folders:"",refresh:r!==0||void 0,outSR:JSON.stringify(s)},responseType:"json",signal:t})}function K(e,s,r=null,t=[]){const l=[],f={},b=s.sublayers,c=s.folders.map(y=>y.id);return b.forEach(y=>{const h=new e;if(r?h.read(y,r):h.read(y),t.length&&c.includes(h.id)&&(h.visible=t.includes(h.id)),f[y.id]=h,y.parentFolderId!=null&&y.parentFolderId!==-1){const i=f[y.parentFolderId];i.sublayers||(i.sublayers=[]),i.sublayers.unshift(h)}else l.unshift(h)}),l}function P(e,s,r){r.forEach(t=>{e.set(t.attributes[s],t)})}function ue(e,s){let r;return s.some(t=>t.id===e&&(r=t,!0)),r}function ye(e,s,r){const t=ue(e,r);return t&&(t.parentFolderId=s,t.networkLink=t),t}function F(e){const s=M(E),r=M(E);for(const t of e){if(t.polygons&&t.polygons.featureSet&&t.polygons.featureSet.features)for(const l of t.polygons.featureSet.features)g(s,l.geometry),S(r,s);if(t.polylines&&t.polylines.featureSet&&t.polylines.featureSet.features)for(const l of t.polylines.featureSet.features)g(s,l.geometry),S(r,s);if(t.points&&t.points.featureSet&&t.points.featureSet.features)for(const l of t.points.featureSet.features)g(s,l.geometry),S(r,s);if(t.mapImages)for(const l of t.mapImages)g(s,l.extent),S(r,s)}return U(r,E)?null:{xmin:r[0],ymin:r[1],zmin:r[2],xmax:r[3],ymax:r[4],zmax:r[5],spatialReference:G.WGS84}}var v;let u=v=class extends q.EventedMixin(D(B)){constructor(...e){super(...e),this.description=null,this.id=null,this.networkLink=null,this.sublayers=null,this.title=null,this.sourceJSON=null,this.fullExtent=null,this.addHandles([_(()=>this.sublayers,"after-add",({item:s})=>{s.parent=this,s.layer=this.layer},w),_(()=>this.sublayers,"after-remove",({item:s})=>{s.layer=s.parent=null},w),C(()=>this.sublayers,(s,r)=>{if(r)for(const t of r)t.layer=t.parent=null;if(s)for(const t of s)t.parent=this,t.layer=this.layer},w)])}initialize(){j(()=>this.networkLink).then(()=>j(()=>this.visible===!0)).then(()=>this.load())}load(e){var t,l;if(!this.networkLink||this.networkLink.viewFormat)return;const s=k(e)?e.signal:null,r=this._fetchService((l=(t=this._get("networkLink"))==null?void 0:t.href)!=null?l:"",s).then(f=>{var y;const b=F(f.sublayers);this.fullExtent=O.fromJSON(b),this.sourceJSON=f;const c=H(I.ofType(v),K(v,f));this.sublayers?this.sublayers.addMany(c):this.sublayers=c,(y=this.layer)==null||y.emit("sublayer-update"),this.layer&&this.layer.notifyChange("visibleSublayers")});return this.addResolvingPromise(r),Promise.resolve(this)}get visible(){return this._get("visible")}set visible(e){this._get("visible")!==e&&(this._set("visible",e),this.layer&&this.layer.notifyChange("visibleSublayers"))}readVisible(e,s){return!!s.visibility}set layer(e){this._set("layer",e),this.sublayers&&this.sublayers.forEach(s=>s.layer=e)}_fetchService(e,s){return T(e,this.layer.outSpatialReference,this.layer.refreshInterval,s).then(r=>R(r.data))}};o([a()],u.prototype,"description",void 0),o([a()],u.prototype,"id",void 0),o([a({readOnly:!0,value:null})],u.prototype,"networkLink",void 0),o([a({json:{write:{allowNull:!0}}})],u.prototype,"parent",void 0),o([a({type:I.ofType(v),json:{write:{allowNull:!0}}})],u.prototype,"sublayers",void 0),o([a({value:null,json:{read:{source:"name",reader:e=>V(e)}}})],u.prototype,"title",void 0),o([a({value:!0})],u.prototype,"visible",null),o([$("visible",["visibility"])],u.prototype,"readVisible",null),o([a()],u.prototype,"sourceJSON",void 0),o([a({value:null})],u.prototype,"layer",null),o([a({type:O})],u.prototype,"fullExtent",void 0),u=v=o([N("esri.layers.support.KMLSublayer")],u);const z=u,pe=["kml","xml"];let n=class extends Q(Z(X(Y(ee(te(ae)))))){constructor(...e){super(...e),this._visibleFolders=[],this.allSublayers=new se({getCollections:()=>[this.sublayers],getChildrenFunction:s=>s.sublayers}),this.outSpatialReference=G.WGS84,this.path=null,this.legendEnabled=!1,this.operationalLayerType="KML",this.sublayers=null,this.type="kml",this.url=null}initialize(){this.addHandles([C(()=>this.sublayers,(e,s)=>{s&&s.forEach(r=>{r.parent=null,r.layer=null}),e&&e.forEach(r=>{r.parent=this,r.layer=this})},w),this.on("sublayer-update",()=>this.notifyChange("fullExtent"))])}normalizeCtorArgs(e,s){return typeof e=="string"?{url:e,...s}:e}readSublayersFromItemOrWebMap(e,s){this._visibleFolders=s.visibleFolders}readSublayers(e,s,r){return K(z,s,r,this._visibleFolders)}writeSublayers(e,s){const r=[],t=e.toArray();for(;t.length;){const l=t[0];l.networkLink||(l.visible&&r.push(l.id),l.sublayers&&t.push(...l.sublayers.toArray())),t.shift()}s.visibleFolders=r}get title(){const e=this._get("title");return e&&this.originOf("title")!=="defaults"?e:this.url?re(this.url,pe)||"KML":e||""}set title(e){this._set("title",e)}get visibleSublayers(){const e=this.sublayers,s=[],r=t=>{t.visible&&(s.push(t),t.sublayers&&t.sublayers.forEach(r))};return e&&e.forEach(r),s}get fullExtent(){return this._recomputeFullExtent()}load(e){const s=k(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["KML"],supportsData:!1},e).catch(oe).then(()=>this._fetchService(s))),Promise.resolve(this)}destroy(){super.destroy(),this.allSublayers.destroy()}async _fetchService(e){const s=await Promise.resolve().then(()=>{var t;return this.resourceInfo?{ssl:!1,data:this.resourceInfo}:T((t=this.url)!=null?t:"",this.outSpatialReference,this.refreshInterval,e)}),r=R(s.data);r&&this.read(r,{origin:"service"})}_recomputeFullExtent(){let e=null;k(this.extent)&&(e=this.extent.clone());const s=r=>{if(r.sublayers)for(const t of r.sublayers.items)s(t),t.visible&&t.fullExtent&&(k(e)?e.union(t.fullExtent):e=t.fullExtent.clone())};return s(this),e}};o([a({readOnly:!0})],n.prototype,"allSublayers",void 0),o([a({type:G})],n.prototype,"outSpatialReference",void 0),o([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],n.prototype,"path",void 0),o([a({readOnly:!0,json:{read:!1,write:!1}})],n.prototype,"legendEnabled",void 0),o([a({type:["show","hide","hide-children"]})],n.prototype,"listMode",void 0),o([a({type:["KML"]})],n.prototype,"operationalLayerType",void 0),o([a({})],n.prototype,"resourceInfo",void 0),o([a({type:I.ofType(z),json:{write:{ignoreOrigin:!0}}})],n.prototype,"sublayers",void 0),o([$(["web-map","portal-item"],"sublayers",["visibleFolders"])],n.prototype,"readSublayersFromItemOrWebMap",null),o([$("service","sublayers",["sublayers"])],n.prototype,"readSublayers",null),o([ie("sublayers")],n.prototype,"writeSublayers",null),o([a({readOnly:!0,json:{read:!1}})],n.prototype,"type",void 0),o([a({json:{origins:{"web-map":{read:{source:"title"}}},write:{ignoreOrigin:!0}}})],n.prototype,"title",null),o([a(le)],n.prototype,"url",void 0),o([a({readOnly:!0})],n.prototype,"visibleSublayers",null),o([a({type:O})],n.prototype,"extent",void 0),o([a()],n.prototype,"fullExtent",null),n=o([N("esri.layers.KMLLayer")],n);const he=n;export{he as default};
