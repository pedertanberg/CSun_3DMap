import{ds as v,dt as S,du as j,dv as V,dw as q,dx as p,aF as W,aG as B,a0 as k,aI as I,ad as w,aR as Q,e as T,dy as Y,c7 as D,aj as Z,G as P,dz as J,dA as K,d1 as X,d2 as ee,dB as $,cd as C,r as N,dC as M,dD as te,dE as z,bb as ae,dF as _,bc as F,dG as ie,dH as se,dI as re,bN as ne,P as x,Q as R,R as oe}from"./index.347f2ee6.js";import{n as le}from"./LayerView3D.f1da0554.js";import{l as he}from"./projectExtentUtils.4964cd94.js";import{p as de}from"./ImageMaterial.d515ca27.js";import{u as ce}from"./LayerView.936aa3b6.js";import{i as ue}from"./RefreshableLayerView.7541f643.js";function ge(e,t,a){const s=v(e)/S(e),i={width:a,height:a};return s>1.0001?i.height=a/s:s<.9999&&(i.width=a*s),i.width=Math.round(i.width/(v(e)/v(t))),i.height=Math.round(i.height/(S(e)/S(t))),i}function H(e){return j([[e[0],e[1],-1],[e[2],e[1],-1],[e[2],e[3],-1],[e[0],e[3],-1]])}function me(e,t){if(!V(e,t))return H(t);const a=[e[1]-t[1],Math.min(e[3],t[3])-Math.max(e[1],t[1]),t[3]-e[3],123456],s=[e[0]-t[0],Math.min(e[2],t[2])-Math.max(e[0],t[0]),t[2]-e[2],123456],i=t[2]-t[0],o=t[3]-t[1],r=s[0]>0&&s[2]>0?3:2,n=a[0]>0&&a[2]>0?3:2,d=(n+1)*(r+1),l=new Float64Array(3*d),c=new Float32Array(2*d),h=new Array(6*(n*r-1));let E=0,A=0,G=0,u=0,m=0;for(let f=0;f<4;f++){const L=a[f];if(L<=0)continue;let b=0;for(let y=0;y<4;y++){const O=s[y];O<=0||(l[A++]=t[0]+b,l[A++]=t[1]+E,l[A++]=-1,c[G++]=b/i,c[G++]=E/o,y<3&&f<3&&(y!==1||f!==1)&&(h[m++]=u,h[m++]=u+1,h[m++]=u+r+1,h[m++]=u+1,h[m++]=u+r+2,h[m++]=u+r+1),u++,b+=O)}E+=L}const U=new Array(h.length);return new q([[p.POSITION,{size:3,data:l,exclusive:!0}],[p.NORMAL,{size:3,data:pe,exclusive:!0}],[p.UV0,{size:2,data:c,exclusive:!0}]],[[p.POSITION,h],[p.NORMAL,U],[p.UV0,h]])}const pe=[0,0,1];let g=class extends ue(le(ce)){constructor(){super(...arguments),this.drapeSourceType=W.RasterImage,this.updatePolicy=B.SYNC,this.fullExtentInLocalViewSpatialReference=null,this.maximumDataResolution=null,this._images=new Array,this._extents=new Array,this._overlays=new Array,this.updateWhenStationary=!0,this._drapeSourceRenderer=null,this.refreshDebounced=k(async e=>{this.destroyed||await this._doRefresh(e).catch(t=>{I(t)||w.getLogger(this.declaredClass).error(t)})},2e3)}initialize(){this._drapeSourceRenderer=this.view.basemapTerrain.overlayManager.registerGeometryDrapeSource(this),this.handles.add(Q(()=>this.view.basemapTerrain.overlayManager.unregisterDrapeSource(this))),this.addResolvingPromise(he(this).then(e=>this._set("fullExtentInLocalViewSpatialReference",e))),this.updatingHandles.add(()=>this.suspended,()=>this._suspendedChangeHandler()),this.handles.add(this.view.resourceController.scheduler.registerIdleStateCallbacks(()=>{this._isScaleRangeActive()&&this.notifyChange("suspended")},()=>{})),this._isScaleRangeLayer()&&this.updatingHandles.add(()=>this.layer.effectiveScaleRange,()=>this.notifyChange("suspended"))}destroy(){this.clear()}setDrapingExtent(e,t){this._spatialReference=t,e.forEach(a=>{this._overlays[a.index]=a,this._updateImageExtent(a)})}_updateImageExtent(e){const t=this._clippedExtent(e.extent,fe);if(T(t))return;const a=ge(e.extent,t,e.resolution);let s=e.pixelRatio*this.view.state.pixelRatio;if("imageMaxWidth"in this.layer||"imageMaxHeight"in this.layer){const o=this.layer.imageMaxWidth,r=this.layer.imageMaxHeight;if(a.width>o){const n=o/a.width;a.height=Math.floor(a.height*n),a.width=o,s*=n}if(a.height>r){const n=r/a.height;a.width=Math.floor(a.width*n),a.height=r,s*=n}}const i=this._extents[e.index];i&&Y(i.extent,t)&&this._imageSizeEquals(t,i.imageSize,a)||(this._extents[e.index]={extent:D(t),imageSize:a,pixelRatio:s},this.suspended||this._fetch(e.index).catch(o=>{I(o)||w.getLogger(this.declaredClass).error(o)}))}clear(){for(let e=0;e<this._images.length;e++)this._clearImage(e)}async doRefresh(){return this._doRefresh()}async _doRefresh(e){if(this.suspended)return;const t=[];for(let a=0;a<this._extents.length;a++)this._extents[a]&&t.push(this._fetch(a,e));await Z(t)}canResume(){if(!super.canResume())return!1;const e=this.layer;if(this._isScaleRangeActive()){const{minScale:t,maxScale:a}=e.effectiveScaleRange,s=this.view.scale;if(s<a||t>0&&s>t)return!1}return!0}isUpdating(){return this._images.some(e=>!!e.loadingPromise)}async processResult(e,t,a){(t instanceof HTMLImageElement||t instanceof HTMLCanvasElement)&&(e.image=t)}findExtentInfoAt(e){for(const t of this._extents){const a=t.extent;if(new P(a[0],a[1],a[2],a[3],this._spatialReference).contains(e))return t}return null}getFetchOptions(){}async redraw(e,t){await J(this._images,async(a,s)=>{a&&(await e(a,t),await this._createStageObjects(s,a.image,t))})}_imageSizeEquals(e,t,a){if(!this.maximumDataResolution)return!1;const s=v(e)/this.maximumDataResolution.x,i=S(e)/this.maximumDataResolution.y,o=s/t.width,r=i/t.height,n=s/a.width,d=i/a.height,l=Math.abs(o-n),c=Math.abs(r-d),h=K.TESTS_DISABLE_OPTIMIZATIONS?0:1.5;return l<=h&&c<=h}async _fetch(e,t){if(this.suspended)return;const a=this._extents[e],s=a.extent;this._images[e]||(this._images[e]={texture:null,material:null,renderGeometry:null,loadingPromise:null,loadingAbortController:null,image:null,pixelData:null,renderExtent:D(s)});const i=this._images[e];i.loadingAbortController&&(i.loadingAbortController.abort(),i.loadingAbortController=null);const o=new P(s[0],s[1],s[2],s[3],this._spatialReference);if(o.width===0||o.height===0)return void this._clearImage(e);const r=new AbortController;i.loadingAbortController=r,X(t,()=>r.abort());const n=r.signal,d=this._waitFetchReady(n).then(async()=>{const l={requestAsImageElement:!0,pixelRatio:this._overlays[e].pixelRatio,...this.getFetchOptions(),signal:n},{height:c,width:h}=a.imageSize;return this.layer.fetchImage(o,h,c,l)}).then(l=>{if(ee(n))throw w.getLogger(this.declaredClass).warnOnce("A call to fetchImage resolved even though the request was aborted. fetchImage should not resolve if options.signal.aborted is true."),$();return this.processResult(i,l)}).then(()=>{C(i.renderExtent,s)}).finally(()=>{d===i.loadingPromise&&(i.loadingPromise=null,i.loadingAbortController=null)});i.loadingPromise=d,this.notifyChange("updating"),await d.then(async()=>{if(n.aborted)throw $();await this._createStageObjects(e,i.image,n),this.notifyChange("updating")}).catch(l=>{throw l&&!I(l)&&w.getLogger(this.declaredClass).error(l),this.notifyChange("updating"),l})}_clearImage(e){const t=this._images[e];if(t){N(t.renderGeometry)&&(this._drapeSourceRenderer.removeGeometries([t.renderGeometry],M.UPDATE),t.renderGeometry=null);const a=this.view._stage;a.remove(t.texture),t.texture=null,a.remove(t.material),t.material=null,t.loadingAbortController&&(t.loadingAbortController.abort(),t.loadingAbortController=null),t.loadingPromise=null,t.image=null,t.pixelData=null}}async _createStageObjects(e,t,a){const s=this.view._stage,i=this._images[e],o=()=>{s.remove(i.texture),i.texture=null,N(i.renderGeometry)&&(this._drapeSourceRenderer.removeGeometries([i.renderGeometry],M.UPDATE),i.renderGeometry=null)};if(t){const r=new te(t,{width:t.width,height:t.height,preMultiplyAlpha:!0,wrap:{s:z.CLAMP_TO_EDGE,t:z.CLAMP_TO_EDGE}});let n;if(await ae(this._images[e===_.INNER?_.OUTER:_.INNER].loadingPromise),F(a),e===_.INNER)n=H(i.renderExtent);else{const d=this._images[0].renderExtent;if(!d)return void o();n=me(d,i.renderExtent)}o(),s.add(r),await s.loadImmediate(r),i.texture=r,T(i.material)?(i.material=new de({transparent:!0,textureId:r.id}),s.add(i.material)):i.material.setParameters({textureId:r.id}),i.renderGeometry=new ie(n,i.material),i.renderGeometry.origin=this._overlays[e].renderLocalOrigin,this._drapeSourceRenderer.addGeometries([i.renderGeometry],M.UPDATE)}else o(),s.remove(i.material),i.material=null}_isScaleRangeLayer(){return"effectiveScaleRange"in this.layer}_isScaleRangeActive(){const e=this.layer;if(!this._isScaleRangeLayer())return!1;const{minScale:t,maxScale:a}=e.effectiveScaleRange;return se(t,a)}_clippedExtent(e,t){if(this.view.viewingMode!=="local")return C(t,e);const a=this.view.basemapTerrain;return a.ready?re(e,a.extent,t):C(t,e)}_suspendedChangeHandler(){this.suspended?this.clear():this.refreshDebounced()}async _waitFetchReady(e){await ne(()=>this.view.stationary,e),F(e)}};x([R()],g.prototype,"layer",void 0),x([R()],g.prototype,"suspended",void 0),x([R({readOnly:!0})],g.prototype,"fullExtentInLocalViewSpatialReference",void 0),x([R()],g.prototype,"updating",void 0),g=x([oe("esri.views.3d.layers.DynamicLayerView3D")],g);const Se=g,fe=D();export{Se as F};
