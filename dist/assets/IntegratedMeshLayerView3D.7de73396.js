import{i9 as m,h as n,g as l,t as d,e as i,f as e,cD as h,k as u}from"./index.bd80e406.js";import{y as c}from"./I3SMeshView3D.039699bd.js";import{n as g}from"./LayerView3D.a3a76aef.js";import{u as y}from"./LayerView.3c9ee51e.js";import"./I3SOverrides.79afa1a6.js";import"./I3SNode.fe35cb92.js";import"./RenderTexture.a43b4357.js";import"./FeatureLayerView3D.c7f11177.js";import"./FeatureLayerViewBase3D.837649f8.js";import"./FeatureLikeLayerView3D.0f7f8ea7.js";import"./dehydratedFeatureComparison.bf816e19.js";import"./queryForSymbologySnapping.68821d8a.js";import"./elevationInfoUtils.a285b3d7.js";import"./hash.e6424875.js";import"./Graphics3DObjectStates.edd82032.js";import"./optimizedFeatureQueryEngineAdapter.a0958f7c.js";import"./centroid.129e9ea2.js";import"./PooledRBush.59eafee8.js";import"./quickselect.3948ea39.js";import"./floorFilterUtils.05eb8c6a.js";import"./QueryEngine.41213df3.js";import"./QueryEngineResult.4c6bf2ad.js";import"./WhereClause.1de2b7ed.js";import"./utils.f5f6ea5f.js";import"./generateRendererUtils.f392357a.js";import"./json.879c9adc.js";import"./QueryEngineCapabilities.78217f95.js";import"./FeatureStore.920b73a0.js";import"./projectExtentUtils.f3988d8f.js";import"./EventedSet.bde0a713.js";import"./RefreshableLayerView.befc29a9.js";import"./SceneModification.ad55feb5.js";import"./SceneLayerWorker.2c8611d1.js";const f=.2;let r=class extends c(g(y)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=m.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var t,o;return(o=(t=this._controller)==null?void 0:t.updatingProgress)!=null?o:0}get lodFactor(){var t,o,a,s,p;return(p=(s=(a=(o=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)!=null?p:1}get progressiveLoadFactor(){return this.lodFactor>=1?f:1}get layerPopupEnabled(){return!1}initialize(){this.updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),n),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const t=new l;return t.layer=this.layer,t.sourceLayer=this.layer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),d(this.layer.modifications))return void(this._modifications=[]);const t=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(()=>t,()=>this._modifications=t.toArray(),n),"modifications")}};i([e()],r.prototype,"layer",void 0),i([e()],r.prototype,"i3slayer",null),i([e(h)],r.prototype,"updatingProgress",void 0),i([e()],r.prototype,"updatingProgressValue",null),i([e()],r.prototype,"lodFactor",null),i([e({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([u("esri.views.3d.layers.SceneLayerView3D")],r);const X=r;export{X as default};
