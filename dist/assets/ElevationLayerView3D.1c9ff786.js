import{s as c,P as i,Q as y,R as h}from"./index.347f2ee6.js";import{n as u}from"./LayerView3D.f1da0554.js";import{c as v}from"./TiledLayerView3D.1a5598ab.js";import{u as f}from"./LayerView.936aa3b6.js";let e=class extends v(u(f)){constructor(){super(...arguments),this.type="elevation-3d"}get tileInfo(){return this.layer.tileInfo}initialize(){var s,o,a,l,n;const t=(o=(s=this.view)==null?void 0:s.map)==null?void 0:o.allLayers,d=t&&t.includes(this.layer),r=(n=(l=(a=this.view)==null?void 0:a.map)==null?void 0:l.ground)==null?void 0:n.layers,m=r&&r.includes(this.layer);if(d&&!m){const p=new c("layerview:elevation-layer-only","3D elevation layer '"+this.layer.id+"' can only be added to layers in map.ground");this.addResolvingPromise(Promise.reject(p))}this._addTilingSchemeMatchPromise()}};i([y()],e.prototype,"layer",void 0),i([y()],e.prototype,"tileInfo",null),e=i([h("esri.views.3d.layers.ElevationLayerView3D")],e);const $=e;export{$ as default};
