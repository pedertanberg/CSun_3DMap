import{e as d,r as s,gG as h,at as p,aC as m,ad as F,z as u,bF as I,ew as v,g as b,fW as w,P as n,Q as a,dm as E,ex as x,R as C}from"./index.347f2ee6.js";import{WhereClause as S}from"./WhereClause.b191b7a3.js";import{o as Q}from"./floorFilterUtils.05eb8c6a.js";import{y as j,u as A,L as q,I as c}from"./I3SMeshView3D.cf880255.js";import{n as O}from"./LayerView3D.f1da0554.js";import{c as H,i as R,a as L,u as D,b as $,E as N}from"./SceneLayerView.2f49acea.js";import{L as g,d as P,f as U,n as G}from"./I3SQueryFeatureStore.d4cb3fbd.js";import{n as y}from"./I3SNode.c9dda13d.js";import{t as V}from"./DefinitionExpressionSceneLayerView.edff38b3.js";import{c as M}from"./PopupSceneLayerView.2ab81202.js";import"./I3SOverrides.23567206.js";import"./RenderTexture.01478576.js";import"./FeatureLayerView3D.1d7d300a.js";import"./FeatureLayerViewBase3D.03d2caaa.js";import"./FeatureLikeLayerView3D.0bbb378c.js";import"./dehydratedFeatureComparison.f850b7c4.js";import"./queryForSymbologySnapping.35ee0400.js";import"./elevationInfoUtils.85d694b1.js";import"./hash.e6424875.js";import"./Graphics3DObjectStates.3d505bbe.js";import"./optimizedFeatureQueryEngineAdapter.d1f0d432.js";import"./centroid.28bc38cc.js";import"./PooledRBush.1f2f3da2.js";import"./quickselect.3948ea39.js";import"./QueryEngine.cce283e7.js";import"./QueryEngineResult.fb48dac5.js";import"./utils.40423a49.js";import"./generateRendererUtils.a175dd7f.js";import"./json.879c9adc.js";import"./QueryEngineCapabilities.78217f95.js";import"./FeatureStore.d33bd861.js";import"./projectExtentUtils.4964cd94.js";import"./EventedSet.fd44f218.js";import"./LayerView.936aa3b6.js";import"./RefreshableLayerView.7541f643.js";import"./SceneModification.d9d56272.js";import"./SceneLayerWorker.bca20aca.js";const f=$();let i=class extends j(V(M(O(N)))){constructor(){super(...arguments),this.type="scene-layer-3d",this.progressiveLoadFactor=1,this._elevationContext="scene",this._isIntegratedMesh=!1,this._supportsLabeling=!0,this._interactiveEditingSessions=new Map,this._queryEngine=null}get i3slayer(){return this.layer}get layerPopupEnabled(){return this.layer.popupEnabled}get filter(){return this._get("filter")}set filter(e){this._set("filter",g.checkSupport(e)?e:null)}get viewFilter(){const e=this.filter,t=this.layerFilter;if(d(e)&&d(t))return null;const r=this._get("viewFilter");return d(r)?new g({layerFilter:t,viewFilter:e,layerFieldsIndex:this.layer.fieldsIndex,loadAsyncModule:l=>this._loadAsyncModule(l),addSqlFilter:(l,o)=>this.addSqlFilter(l,o,this.logError)}):(r.viewFilter=e,r.layerFilter=t,r)}get requiredFields(){var e,t;return(t=(e=this._fieldsHelper)==null?void 0:e.requiredFields)!=null?t:[]}get _floorFilterClause(){const e=Q(this);return s(e)?S.create(e,this.layer.fieldsIndex):null}get _excludeObjectIdsSorted(){let e=this.layer.excludeObjectIds.toArray();return h()&&this.i3sOverrides.geometryChangedObjectIds.length>0&&(e=e.concat(this.i3sOverrides.geometryChangedObjectIds)),e.length?e.sort((t,r)=>t-r):null}get _objectQualitySettings(){var e,t,r;return(r=(t=(e=this.view)==null?void 0:e.qualitySettings)==null?void 0:t.sceneService)==null?void 0:r.object}get lodFactor(){var e,t;return(t=(e=this._objectQualitySettings)==null?void 0:e.lodFactor)!=null?t:1}get lodCrossfadeinDuration(){var e;return(e=this._objectQualitySettings.lodCrossfadeinDuration)!=null?e:0}get lodCrossfadeoutDuration(){var e;return(e=this._objectQualitySettings.lodCrossfadeoutDuration)!=null?e:0}get lodCrossfadeUncoveredDuration(){var e;return(e=this._objectQualitySettings.lodCrossfadeUncoveredDuration)!=null?e:0}get updatingProgressValue(){var e,t;return(t=(e=this._controller)==null?void 0:e.updatingProgress)!=null?t:0}initialize(){this._fieldsHelper=new H({layerView:this}),this.updatingHandles.add(()=>this.layer.rangeInfos,t=>this._rangeInfosChanged(t),p),this.updatingHandles.add(()=>this.layer.renderer,t=>this.updatingHandles.addPromise(this._rendererChange(t)),p);const e=()=>this._filterChange();this.updatingHandles.add(()=>this.parsedDefinitionExpression,e),this.updatingHandles.add(()=>this.filter,e),this.updatingHandles.add(()=>this._floorFilterClause,e),this.updatingHandles.add(()=>this._excludeObjectIdsSorted,e),this.updatingHandles.add(()=>s(this.viewFilter)?this.viewFilter.sortedObjectIds:null,e),this.updatingHandles.add(()=>s(this.viewFilter)?this.viewFilter.parsedWhereClause:null,e),this.updatingHandles.add(()=>[s(this.viewFilter)?this.viewFilter.parsedGeometry:null,s(this.filter)?this.filter.spatialRelationship:null,s(this.layer.filter)?this.layer.filter.spatialRelationship:null],()=>this._geometryFilterChange()),this.handles.add(this.layer.on("apply-edits",t=>this.updatingHandles.addPromise(t.result))),this.handles.add(this.layer.on("edits",t=>this._handleEdits(t)))}destroy(){this._fieldsHelper=m(this._fieldsHelper)}_rangeInfosChanged(e){e!=null&&e.length>0&&F.getLogger(this.declaredClass).warn("Unsupported property: rangeInfos are currently only serialized to and from web scenes but do not affect rendering.")}createQuery(){const e={outFields:["*"],returnGeometry:!1,outSpatialReference:this.view.spatialReference};return s(this.filter)?this.filter.createQuery(e):new u(e)}queryExtent(e,t){return this._ensureQueryEngine().executeQueryForExtent(this._ensureQuery(e),t==null?void 0:t.signal)}queryFeatureCount(e,t){return this._ensureQueryEngine().executeQueryForCount(this._ensureQuery(e),t==null?void 0:t.signal)}queryFeatures(e,t){return this._ensureQueryEngine().executeQuery(this._ensureQuery(e),t==null?void 0:t.signal).then(r=>{if(!(r!=null&&r.features))return r;const l=this.layer;for(const o of r.features)o.layer=l,o.sourceLayer=l;return r})}queryObjectIds(e,t){return this._ensureQueryEngine().executeQueryForIds(this._ensureQuery(e),t==null?void 0:t.signal)}_ensureQueryEngine(){return this._queryEngine||(this._queryEngine=this._createQueryEngine()),this._queryEngine}_createQueryEngine(){const e=A(this.view.spatialReference,this.view.renderSpatialReference,this._collection);return new P({layerView:this,priority:I.FEATURE_QUERY_ENGINE,spatialIndex:new U({featureAdapter:new G({objectIdField:this.layer.objectIdField,attributeStorageInfo:this.layer.attributeStorageInfo,getFeatureExtent:e}),toArray:()=>{const t=new Array;return this._forAllFeatures((r,l,o)=>(t.push({id:r,index:l,meta:o}),q.CONTINUE),null,c.ALL_IN_CLIPPING_AREA),t},forAllFeatures:(t,r)=>this._forAllFeatures((l,o,_)=>t({id:l,index:o,meta:_}),r,c.ALL_IN_CLIPPING_AREA),getFeatureExtent:e,sourceSpatialReference:v(this.layer),viewSpatialReference:this.view.spatialReference})})}highlight(e){const t=this._highlights;if(e instanceof u){const{set:r,handle:l}=t.acquireSet();return this.queryObjectIds(e).then(o=>t.setFeatureIds(r,o)),l}return super.highlight(e)}createInteractiveEditSession(e){return R(this._attributeEditingContext,e)}_createLayerGraphic(e){const t=new b(null,null,e);return t.layer=this.layer,t.sourceLayer=this.layer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}getFilters(){const e=super.getFilters(),t=this._excludeObjectIdsSorted;return s(t)&&e.push(r=>w(t,!1,r)),this._floorFilterClause&&this.addSqlFilter(e,this._floorFilterClause,this.logError),this.addSqlFilter(e,this.parsedDefinitionExpression,this.logError),s(this.viewFilter)&&this.viewFilter.addFilters(e,this.view,this._controller.crsIndex,this._collection),e}isUpdating(){return super.isUpdating()||this.layerFilterUpdating||s(this.viewFilter)&&this.viewFilter.updating||s(this.i3sOverrides)&&this.i3sOverrides.updating}_ensureQuery(e){return this._addDefinitionExpressionToQuery(d(e)?this.createQuery():u.from(e))}get _attributeEditingContext(){return{sessions:this._interactiveEditingSessions,fieldsIndex:this.layer.fieldsIndex,objectIdField:this._getObjectIdField(),forEachNode:e=>this._forAllNodes(t=>s(t)?e(t.node,t.featureIds):null),attributeStorageInfo:this.i3slayer.attributeStorageInfo,i3sOverrides:this.i3sOverrides,getAttributeData:e=>this.getAttributeData(e),setAttributeData:(e,t)=>this.setAttributeData(e,t),clearMemCache:()=>this.clearMemCache()}}_handleEdits(e){h()&&L(this._attributeEditingContext,e),D(this._attributeEditingContext,e)}get hasGeometryFilter(){const e=this.viewFilter;return s(e)&&s(e.parsedGeometry)}computeNodeFiltering(e){const t=this.viewFilter;return d(t)||t.isMBSGeometryVisible(e,this.view.spatialReference,this._controller.crsIndex)?y.Unmodified:y.Culled}};n([a()],i.prototype,"i3slayer",null),n([a(E)],i.prototype,"updatingProgress",void 0),n([a({type:x})],i.prototype,"filter",null),n([a({readOnly:!0})],i.prototype,"viewFilter",null),n([a(f.requiredFields)],i.prototype,"requiredFields",null),n([a(f.availableFields)],i.prototype,"availableFields",void 0),n([a()],i.prototype,"_fieldsHelper",void 0),n([a()],i.prototype,"_floorFilterClause",null),n([a()],i.prototype,"_excludeObjectIdsSorted",null),n([a()],i.prototype,"_objectQualitySettings",null),n([a()],i.prototype,"lodFactor",null),n([a()],i.prototype,"updatingProgressValue",null),i=n([C("esri.views.3d.layers.SceneLayerView3D")],i);const Se=i;export{Se as default};
