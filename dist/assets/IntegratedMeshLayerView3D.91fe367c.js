import{iM as m,at as n,g as l,e as d,P as i,Q as e,dm as h,R as u}from"./index.347f2ee6.js";import{y as c}from"./I3SMeshView3D.cf880255.js";import{n as g}from"./LayerView3D.f1da0554.js";import{u as y}from"./LayerView.936aa3b6.js";import"./I3SOverrides.23567206.js";import"./I3SNode.c9dda13d.js";import"./RenderTexture.01478576.js";import"./FeatureLayerView3D.1d7d300a.js";import"./FeatureLayerViewBase3D.03d2caaa.js";import"./FeatureLikeLayerView3D.0bbb378c.js";import"./dehydratedFeatureComparison.f850b7c4.js";import"./queryForSymbologySnapping.35ee0400.js";import"./elevationInfoUtils.85d694b1.js";import"./hash.e6424875.js";import"./Graphics3DObjectStates.3d505bbe.js";import"./optimizedFeatureQueryEngineAdapter.d1f0d432.js";import"./centroid.28bc38cc.js";import"./PooledRBush.1f2f3da2.js";import"./quickselect.3948ea39.js";import"./floorFilterUtils.05eb8c6a.js";import"./QueryEngine.cce283e7.js";import"./QueryEngineResult.fb48dac5.js";import"./WhereClause.b191b7a3.js";import"./utils.40423a49.js";import"./generateRendererUtils.a175dd7f.js";import"./json.879c9adc.js";import"./QueryEngineCapabilities.78217f95.js";import"./FeatureStore.d33bd861.js";import"./projectExtentUtils.4964cd94.js";import"./EventedSet.fd44f218.js";import"./RefreshableLayerView.7541f643.js";import"./SceneModification.d9d56272.js";import"./SceneLayerWorker.bca20aca.js";const f=.2;let r=class extends c(g(y)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=m.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var t,o;return(o=(t=this._controller)==null?void 0:t.updatingProgress)!=null?o:0}get lodFactor(){var t,o,a,s,p;return(p=(s=(a=(o=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:o.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)!=null?p:1}get progressiveLoadFactor(){return this.lodFactor>=1?f:1}get layerPopupEnabled(){return!1}initialize(){this.updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),n),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const t=new l;return t.layer=this.layer,t.sourceLayer=this.layer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),d(this.layer.modifications))return void(this._modifications=[]);const t=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(()=>t,()=>this._modifications=t.toArray(),n),"modifications")}};i([e()],r.prototype,"layer",void 0),i([e()],r.prototype,"i3slayer",null),i([e(h)],r.prototype,"updatingProgress",void 0),i([e()],r.prototype,"updatingProgressValue",null),i([e()],r.prototype,"lodFactor",null),i([e({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([u("esri.views.3d.layers.SceneLayerView3D")],r);const X=r;export{X as default};
