import{mc as l,gu as p,bQ as m,nq as x,q1 as g,P as q,R as v,q2 as f,mq as L,bp as r,bc as V,e as b,bj as j,oW as P,ms as S,q3 as I,q4 as C,m4 as u}from"./index.347f2ee6.js";import{q as E}from"./QueryEngineResult.fb48dac5.js";import"./WhereClause.b191b7a3.js";import"./utils.40423a49.js";import"./generateRendererUtils.a175dd7f.js";import"./json.879c9adc.js";const T=1e3;function $(t,e,n){const s=x(),o=g(s);return l(o,o,t,.5),l(o,o,e,.5),s[3]=p(o,t),m(o,o,n),s}let _=class{constructor(){this._idToComponent=new Map,this._components=new f(t=>t.bounds),this._edges=new f(t=>t.bounds),this._tmpLineSegment=L(),this._tmpP1=r(),this._tmpP2=r(),this._tmpP3=r(),this.remoteClient=null}async fetchCandidates(t,e){await Promise.resolve(),V(e),await this._ensureEdgeLocations(t,e);const n=[];return this._edges.forEachNeighbor(s=>(this._addCandidates(t,s,n),n.length<T),t.bounds),{result:{candidates:n}}}async _ensureEdgeLocations(t,e){const n=[];if(this._components.forEachNeighbor(i=>{if(b(i.info)){const{id:a,uid:d}=i;n.push({id:a,uid:d})}return!0},t.bounds),!n.length)return;const s={components:n},o=await this.remoteClient.invoke("fetchAllEdgeLocations",s,j(e,{}));for(const i of o.components)this._setFetchEdgeLocations(i)}async add(t){const e=new h(t.id,t.bounds);return this._idToComponent.set(e.id,e),this._components.add([e]),{result:{}}}async remove(t){const e=this._idToComponent.get(t.id);if(e){const n=[];this._edges.forEachNeighbor(s=>(s.component===e&&n.push(s),!0),e.bounds),this._edges.remove(n),this._components.remove([e]),this._idToComponent.delete(e.id)}return{result:{}}}_setFetchEdgeLocations(t){const e=this._idToComponent.get(t.id);if(b(e)||t.uid!==e.uid)return;const n=P.createView(t.locations),s=new Array(n.count),o=r(),i=r();for(let c=0;c<n.count;c++){n.position0.getVec(c,o),n.position1.getVec(c,i);const y=$(o,i,t.origin),w=new N(e,c,y);s[c]=w}this._edges.add(s);const{objectIds:a,origin:d}=t;e.info={locations:n,objectIds:a,origin:d}}_addCandidates(t,e,n){const{locations:s,origin:o,objectIds:i}=e.component.info,a=s.position0.getVec(e.index,this._tmpP1),d=s.position1.getVec(e.index,this._tmpP2);m(a,a,o),m(d,d,o);const c=i[s.componentIndex.get(e.index)];this._addEdgeCandidate(t,c,a,d,n),this._addVertexCandidate(t,c,a,n),this._addVertexCandidate(t,c,d,n)}_addEdgeCandidate(t,e,n,s,o){if(!(t.types&E.EDGE))return;const i=g(t.bounds),a=S(n,s,this._tmpLineSegment),d=I(a,i,this._tmpP3);if(!C(t.bounds,d))return null;o.push({type:"edge",objectId:e,target:u(d),distance:p(i,d),start:u(n),end:u(s)})}_addVertexCandidate(t,e,n,s){if(!(t.types&E.VERTEX))return;const o=g(t.bounds);if(!C(t.bounds,n))return null;s.push({type:"vertex",objectId:e,target:u(n),distance:p(o,n)})}};_=q([v("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],_);const D=_;class h{constructor(e,n){this.id=e,this.bounds=n,this.info=null,this.uid=++h.uid}}h.uid=0;class N{constructor(e,n,s){this.component=e,this.index=n,this.bounds=s}}export{D as default};
