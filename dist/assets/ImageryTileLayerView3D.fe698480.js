import{P as n,Q as o,is as P,R as z,a2 as w,s as v,eu as L,e as I,r as T,g as O,bN as _,k5 as j,k6 as G}from"./index.347f2ee6.js";import{n as k}from"./LayerView3D.f1da0554.js";import{c as M}from"./TiledLayerView3D.1a5598ab.js";import{v as S,J as A}from"./rasterProjectionHelper.756a5400.js";import{u as J}from"./LayerView.936aa3b6.js";import{i as V}from"./RefreshableLayerView.7541f643.js";import{a as W}from"./drapedUtils.8f9216e3.js";const $=r=>{let e=class extends r{constructor(){super(...arguments),this._rasterFieldPrefix="Raster.",this.layer=null,this.view=null,this.tileInfo=null}get fullExtent(){return this._getfullExtent()}_getfullExtent(){return this.projectFullExtent(this.view.spatialReference)}get hasTilingEffects(){return this.layer.renderer&&"dynamicRangeAdjustment"in this.layer.renderer&&this.layer.renderer.dynamicRangeAdjustment}get datumTransformation(){return S(w(this.layer.fullExtent),this.view.spatialReference,!0)}supportsSpatialReference(t){return!!this.projectFullExtent(t)}projectFullExtent(t){const a=w(this.layer.fullExtent),i=S(a,t,!1);return A(a,t,i)}async fetchPopupFeatures(t,a){const{layer:i}=this;if(!t)throw new v("imageryTileLayerView:fetchPopupFeatures","Nothing to fetch without area",{layer:i});const{popupEnabled:m}=i,y=L(i,a);if(!m||I(y))throw new v("imageryTileLayerView:fetchPopupFeatures","Missing required popupTemplate or popupEnabled",{popupEnabled:m,popupTemplate:y});const p=[],{value:l,magdirValue:s}=await i.identify(t,{timeExtent:this.timeExtent});let g="";if(l&&l.length){g=i.type==="imagery-tile"&&i.hasStandardTime()&&l[0]!=null?l.map(b=>i.getStandardTimeValue(b)).join(", "):l.join(", ");const d={ObjectId:0};d["Raster.ServicePixelValue"]=g;const x=i.rasterInfo.attributeTable;if(T(x)){const{fields:b,features:F}=x,E=b.find(({name:h})=>h.toLowerCase()==="value"),f=E?F.find(h=>String(h.attributes[E.name])===g):null;if(f)for(const h in f.attributes)f.attributes.hasOwnProperty(h)&&(d[this._rasterFieldPrefix+h]=f.attributes[h])}const R=i.rasterInfo.dataType;R!=="vector-magdir"&&R!=="vector-uv"||(d["Raster.Magnitude"]=s==null?void 0:s[0],d["Raster.Direction"]=s==null?void 0:s[1]);const c=new O(this.fullExtent.clone(),null,d);c.layer=i,c.sourceLayer=c.layer,p.push(c)}return p}};return n([o()],e.prototype,"layer",void 0),n([o(P)],e.prototype,"timeExtent",void 0),n([o()],e.prototype,"view",void 0),n([o()],e.prototype,"fullExtent",null),n([o()],e.prototype,"tileInfo",void 0),n([o({readOnly:!0})],e.prototype,"hasTilingEffects",null),e=n([z("esri.views.layers.ImageryTileLayerView")],e),e};let u=class extends $(V(M(k(J)))){constructor(){super(...arguments),this.type="imagery-tile-3d",this.isAlignedMapTile=!0}initialize(){this.layer.increaseRasterJobHandlerUsage(),this.fullExtent==null&&this.addResolvingPromise(Promise.reject(new v("layerview:spatial-reference-incompatible","The layer extent cannot be projected to the view's spatial reference",{layer:this.layer})));const r=_(()=>{var e,t;return(t=(e=this.view)==null?void 0:e.basemapTerrain)==null?void 0:t.tilingSchemeLocked}).then(()=>{const e=this.view.basemapTerrain.tilingScheme,{tileInfo:t}=this.layer,a=["png","png24","png32","jpg","mixed"].includes(t.format)&&e.compatibleWith(t);this.isAlignedMapTile=a;const i=a?t:e.toTileInfo();this.tileInfo=i,this.updatingHandles.add(()=>[this.layer.renderer,this.layer.interpolation,this.layer.bandIds,this.layer.multidimensionalDefinition,this.layer.multidimensionalSubset,this.layer.rasterFunction],()=>this.refresh())});this.addResolvingPromise(r)}destroy(){this.layer.decreaseRasterJobHandlerUsage(),this.view=null}get _blankTile(){const r=document.createElement("canvas"),e=r.getContext("2d"),[t,a]=this.tileInfo.size;return r.width=t,r.height=a,e.clearRect(0,0,t,a),e.getImageData(0,0,t,a)}get imageFormatIsOpaque(){return this.layer.tileInfo.format==="jpg"}get hasMixedImageFormats(){return this.layer.tileInfo.format==="mixed"}get dataLevelRange(){const r=this.tileInfo.lods,e=this.layer.tileInfo.lods,t=r[0].scale,a=e[e.length-1].scale;return this.levelRangeFromScaleRange(t,a)}_getfullExtent(){return this.projectFullExtent(this.view.basemapTerrain&&T(this.view.basemapTerrain.spatialReference)?this.view.basemapTerrain.spatialReference:this.view.spatialReference)}async fetchTile(r,e,t,a){const i=this.tileInfo,m=this._canSymbolizeInWebGL(),y={tileInfo:i,requestRawData:m,signal:w(a.signal),requestAsImageElement:this.isAlignedMapTile},p=await this.layer.fetchTile(r,e,t,y);if(p instanceof HTMLImageElement)return p;let l=p&&p.pixelBlock;if(I(l))return this._blankTile;if(!m&&(l=await this.layer.applyRenderer(p),I(l)))return this._blankTile;const s=new j([r,e,t],l,i.size[0],i.size[1]);return m?(s.symbolizerRenderer=this.layer.symbolizer.rendererJSON,s.symbolizerParameters=this.layer.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(r)),s.transformGrid=p.transformGrid):s.isRendereredSource=!0,s.interpolation=this.layer.interpolation,s.bandIds=this.layer.bandIds,s}_getSymbolizerOptions(r){const e=this.tileInfo.lodAt(r).resolution;return{pixelBlock:null,isGCS:this.view.basemapTerrain&&T(this.view.basemapTerrain.spatialReference)?this.view.basemapTerrain.spatialReference.isGeographic:this.view.spatialReference.isGeographic,resolution:{x:e,y:e},bandIds:this.layer.bandIds}}ensureSymbolizerParameters(r){this._canSymbolizeInWebGL()&&JSON.stringify(r.symbolizerRenderer)!==JSON.stringify(this.layer.symbolizer.rendererJSON)&&(r.symbolizerParameters=this.layer.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(r.lij[0])))}createFetchPopupFeaturesQueryGeometry(r,e){return W(r,e,this.view)}refresh(){this.emit("data-changed")}async doRefresh(){this.suspended||this.emit("data-changed")}_canSymbolizeInWebGL(){return G("3d").supportsTextureFloat&&this.layer.symbolizer.canRenderInWebGL}};n([o({readOnly:!0})],u.prototype,"_blankTile",null),n([o({readOnly:!0})],u.prototype,"imageFormatIsOpaque",null),n([o({readOnly:!0})],u.prototype,"hasMixedImageFormats",null),n([o({readOnly:!0})],u.prototype,"dataLevelRange",null),u=n([z("esri.views.3d.layers.ImageryTileLayerView3D")],u);const U=u;export{U as default};
